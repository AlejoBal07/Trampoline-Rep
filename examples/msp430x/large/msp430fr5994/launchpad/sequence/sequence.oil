OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {
  /* This fix the default STACKSIZE of tasks */
  TASK {
    UINT32 STACKSIZE = 200 ;
  } ;

  /* This fix the default STACKSIZE of ISRs */
  ISR {
    UINT32 STACKSIZE = 200 ;
  } ;
};

CPU sequence {
  OS config {
    STATUS = EXTENDED;
    PAINT_STACK = TRUE;
    PAINT_REGISTERS = TRUE;
    SEQUENCING = TRUE;
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../..";
      APP_SRC = "sequence.c";
      APP_NAME = "sequence_exe";
      CFLAGS  = "-O0 -g3 -gdwarf-2 -ggdb"; //gdb usage
      LDFLAGS = "-Map=sequence.map";
      //use either msp-gcc (provided with Energia)..
//      COMPILER  = "msp430-gcc";
//      ASSEMBLER = "msp430-gcc";
//      LINKER    = "msp430-ld";
//      COPIER    = "msp430-objcopy";
      //or GCC for MSP (provided by TI)
      COMPILER  = "msp430-elf-gcc";
      ASSEMBLER = "msp430-elf-gcc";
      LINKER    = "msp430-elf-ld";
      COPIER    = "msp430-elf-objcopy";
      CFLAGS    = "-I/opt/msp430-gcc-support-files/include";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };

  APPMODE std {};

  TASK blink_red {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };

  TASK blink_green {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };
  
  TASK fibo {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };

  STATE E0{VALUE = 0;};
  STATE E1{VALUE = 1;};
  STATE E2{VALUE = 2;};

  TRANSITION E0_E1{
    ENERGY = 100;
    TASK = fibo;
    TASK = blink_red;
    FROM_STATE = E0;
    TO_STATE = E1;
  };
  
  TRANSITION E0_E2{
    ENERGY = 50;
    TASK = blink_green;
    TASK = fibo;
    FROM_STATE = E0;
    TO_STATE = E2;
  };
};
