/* Specify the memory areas for msp430fr5994
 * basic first version:
 * - upper FRAM bank 0x10000 (208kb) not configured
 */
%

# Compute start address, end address and size of the vectors
let start_address := 0xFFFE
let end_address := 0x0000
foreach vect in INTERRUPT do
  if vect::ADDRESS < start_address then 
    let start_address := vect::ADDRESS 
  end if
  if vect::ADDRESS > end_address then 
    let end_address := vect::ADDRESS 
  end if
end foreach
let end_address += 2
let size := end_address - start_address
let hex_start := [start_address xString]
repeat while [hex_start length] < 5 do
  let hex_start := "0" + hex_start
end repeat
let hex_end := [end_address xString]
repeat while [hex_end length] < 5 do
  let hex_end := "0" + hex_end
end repeat

%
MEMORY
{
  VECTOR (rx) : ORIGIN = 0x%
   ! hex_start %, LENGTH = %
   ! [size hexString] %   /* ends at 0x%
   ! hex_end %, %
   ! size % bytes - %
   ! size / 2 % vectors */
  FRAM (rx)  : ORIGIN = 0x04000, LENGTH = 0x9F80 /* ends at 0xDF80. size is 39,875k */
  FRAM_CHKPT (rw) : ORIGIN = 0x0DF80, LENGTH = 0x2000 /* ends at 0xFF80. size is 8k */
%
if OS::LEA then
  if OS::LEA_S::LEA_RAM > 4096 then
    let OS::LEA_S::LEA_RAM := 4096
  end if
  let lea_origin := 0x3BFF - OS::LEA_S::LEA_RAM
  let size_ram := 0x1000 + 0x1000 - OS::LEA_S::LEA_RAM
%
  RAM (xrw)   : ORIGIN = 0x01C00, LENGTH = %!size_ram% /* size is 4k */
  LEA_RAM (xrw)  : ORIGIN = %!lea_origin%, LENGTH = %!OS::LEA_S::LEA_RAM% /* size max = 4096 */
%
else%
  RAM (xrw)   : ORIGIN = 0x01C00, LENGTH = 0x2000 /* size is 8k */%
end if  
%
}
