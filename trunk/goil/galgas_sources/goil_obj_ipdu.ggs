#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est prot»g» par la loi sur la propri»t» intellectuelle
#
# This software is distributed under the Lesser GNU Public Licence
#
# GOIL com object parser
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

syntax goil_obj_ipdu :

import lexique goil_lexique in "goil_lexique.ggs" ;
import option goil_options in "goil_options.ggs" ;
import semantics goil_semantics in "goil_semantics.ggs" ;

nonterminal <ipdu> ;
nonterminal <ipduproperty> ;
nonterminal <transmissionmode> ;
nonterminal <timeperiod> ;
nonterminal <timeoffset> ;
nonterminal <minimumdelaytime> ;
nonterminal <timeout> ;
nonterminal <firsttimeout> ;
nonterminal <ipducallout> ;
nonterminal <layerused> ;

nonterminal <sent_attributes> ;
nonterminal <received_attributes> ;
nonterminal <direct_attributes> ;
nonterminal <periodic_attributes> ;
nonterminal <mixed_attributes> ;

# external nonterminals
nonterminal <sizeinbits>
  !@luint64 sib ;
nonterminal <description>
    !@lstring desc ;

rule <ipdu> :
    $IPDU$ ;
    $idf$ ?* ;
    ${$ ;
    repeat
        while <sizeinbits> ?* ;
        while <ipduproperty> ;
        while <ipducallout> ;
        while <layerused> ;
    end repeat ;
    $}$ ;
    <description> ?* ; $;$ ;
end rule ;

rule <ipduproperty> :
    $IPDUPROPERTY$ ;
    $=$ ;
    select
        $SENT$ ;     <sent_attributes> ;
    or
        $RECEIVED$ ; <received_attributes> ;
    end select ;
    <description> ?* ; $;$ ;
end rule;

rule <ipducallout> :
    $IPDUCALLOUT$ ;
    $=$ ;
    $string$ ?* ;
    <description> ?* ; $;$ ;
end rule;

rule <layerused> :
    $LAYERUSED$ ;
    $=$ ;
    $string$ ?* ;
    <description> ?* ; $;$ ;
end rule;

rule <sent_attributes> :
    ${$ ;
    repeat
    while <transmissionmode> ;
    while <timeout> ;
    end repeat ;
    $}$ ;
end rule ;

rule <received_attributes> :
    ${$ ;
    repeat
    while <timeout> ;
    while <firsttimeout> ;
    end repeat ;
    $}$ ;
end rule ;

rule <transmissionmode> :
    $TRANSMISSIONMODE$ ;
    $=$ ;
    select
        $DIRECT$ ;   <direct_attributes> ;
    or
        $PERIODIC$ ; <periodic_attributes> ;
    or
        $MIXED$ ;    <mixed_attributes> ;
    end select ;
    <description> ?* ; $;$ ;
end rule ;

rule <timeout> :
    $TIMEOUT$ ;
    $=$ ;
    $uint_number$ ?* ;
    <description> ?* ; $;$ ;
end rule ;

rule <firsttimeout> :
    $FIRTSTIMEOUT$ ;
    $=$ ;
    $uint_number$ ?* ;
    <description> ?* ; $;$ ;
end rule ;

rule <direct_attributes> :
    ${$ ;
    repeat
    while <minimumdelaytime> ;
    end repeat ;
    $}$ ;
end rule ;

rule <periodic_attributes> :
    ${$ ;
    repeat
    while <timeperiod> ;
    while <timeoffset> ;
    end repeat ;
    $}$ ;
end rule ;

rule <mixed_attributes> :
    ${$ ;
    repeat
    while <timeperiod> ;
    while <timeoffset> ;
    while <minimumdelaytime> ;
    end repeat ;
    $}$ ;
end rule ;

rule <minimumdelaytime> :
    $MINIMUMDELAYTIME$ ;
    $=$ ;
    $uint_number$ ?* ;
    <description> ?* ; $;$ ;
end rule ;

rule <timeperiod> :
    $TIMEPERIOD$ ;
    $=$ ;
    $uint_number$ ?* ;
    <description> ?* ; $;$ ;
end rule ;

rule <timeoffset> :
    $TIMEOFFSET$ ;
    $=$ ;
    $uint_number$ ?* ;
    <description> ?* ; $;$ ;
end rule ;

end syntax ;
# vim:ft=ggs:ts=4:sw=4
