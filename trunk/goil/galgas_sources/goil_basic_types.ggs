#
# @file goil_basic_types.ggs
#
# @section File description
#
# This file wraps user application configuration header. This wrapped file is typically
# generated from an OIL source.
#
# @section Copyright
#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est protégé par la loi sur la propriété intellectuelle
#
# This software is distributed under the Lesser GNU Public Licence
#
# @section File informations
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

semantics goil_basic_types :

abstract class @basic_type {
    @location location ;
}

class @void extends @basic_type {}

class @uint_class extends @basic_type {
    @uint64   value ;
}

class @sint_class extends @basic_type {
    @sint64 value ;
}

class @string_class extends @basic_type {
    @string value ;
}

class @bool_class extends @basic_type {
    @bool value ;
}

#
# Types used for implementation specific type declaration
#
list @list_uint32 {
    @uint val ;
}

list @list_int32 {
    @sint val ;
}

list @list_uint64 {
    @uint64 val ;
}

list @list_int64 {
    @sint64 val ;
}

abstract class @uint32_set {}
abstract class @int32_set {}
abstract class @uint64_set {}
abstract class @int64_set {}

class @uint32_range extends @uint32_set {
    @uint min ;
    @uint max ;
}

class @uint32_list extends @uint32_set {
    @list_uint32 li ;
}

class @int32_range extends @int32_set {
    @sint min ;
    @sint max ;
}

class @int32_list extends @int32_set {
    @list_int32 li ;
}

class @uint64_range extends @uint64_set {
    @uint64 min ;
    @uint64 max ;
}

class @uint64_list extends @uint64_set {
    @list_uint64 li ;
}

class @int64_range extends @int64_set {
    @sint64 min ;
    @sint64 max ;
}

class @int64_list extends @int64_set {
    @list_int64 li ;
}

abstract class @implementation_type {
    @location loc ;
    @bool     with_auto ;
}

class @uint32_def extends @implementation_type {}
class @uint32_def_set extends @implementation_type {
    @uint32_set set ;
}
class @uint32_def_val extends @uint32_def {
    @uint def ;
}
class @uint32_def_set_val extends @uint32_def_set {
    @uint def ;
}

class @uint64_def extends @implementation_type {}
class @uint64_def_set extends @implementation_type {
    @uint64_set set ;
}
class @uint64_def_val extends @uint64_def {
    @uint64 def ;
}
class @uint64_def_range_val extends @uint64_def_set {
    @uint64 def ;
}

#
#
#

map @ident_map {
    @basic_type value ;
    insert put error message "%K is duplicated in %L";
    search get error message "Identifier %K is not defined" ;
}

#
# Map to store string constants used
# for code generation
#
map @prefix_map {
    @string prefix ;
    @string tag_to_rep ;
    insert add error message "prefix %K duplicated %L" ;
    insert insert_prefix error message "prefix %K duplicated %L" ;
    search prefix error message "prefix %K is not defined" ;
}

map @stringset_map {
    @stringset ids ;
    insert add error message "Key %K is already used there";
    search get error message "Key %K is not there" ;
    remove delete error message "Key %K cannot be deleted" ;
}

#
# list of strings to store chained objects
#

list @ident_list {
    @lstring obj_name ;
}

map @ident_list_map {
    @ident_list objs ;
    insert add error message "Key %K is already used there";
    search get error message "Key %K is not there" ;
    remove delete error message "Key %K cannot be deleted" ;
}

end semantics ;
# vim:ft=ggs:ts=2:sw=2
