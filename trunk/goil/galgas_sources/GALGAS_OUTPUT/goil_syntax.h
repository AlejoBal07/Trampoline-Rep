//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'goil_syntax.h'                            *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     october 19th, 2006, at 8h53'17"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_syntax_DEFINED
#define goil_syntax_DEFINED

#include <string.h>

#include "galgas/C_GGS_Object.h"
#include "galgas/AC_galgas_io.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/AC_galgas_map.h"
#include "goil_lexique.h"

// Include imported semantics
#include "goil_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                   Parser class goil_syntax declaration                    *
//                                                                           *
//---------------------------------------------------------------------------*

class goil_syntax {
  public : virtual ~goil_syntax (void) {}

  protected : virtual void nt_file_ (goil_lexique &) = 0 ;

  protected : virtual void nt_OIL_version_ (goil_lexique &,
                                GGS_lstring  &,
                                GGS_lstring  &) = 0 ;

  protected : virtual void nt_description_ (goil_lexique &,
                                GGS_lstring  &) = 0 ;

  protected : virtual void nt_implementation_definition_ (goil_lexique &,
                                GGS_implementation  &) = 0 ;

  protected : virtual void nt_implementation_spec_list_ (goil_lexique &,
                                GGS_implementation  &) = 0 ;

  protected : virtual void nt_implementation_spec_ (goil_lexique &,
                                GGS_implementation  &) = 0 ;

  protected : virtual void nt_implementation_list_ (goil_lexique &,
                                GGS_implementationSpec  &) = 0 ;

  protected : virtual void nt_impl_attr_def_ (goil_lexique &,
                                GGS_implementationSpec  &) = 0 ;

  protected : virtual void nt_auto_specifier_ (goil_lexique &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_number_range_or_nil_ (goil_lexique &,
                                GGS_bool &,
                                GGS_number_set  &) = 0 ;

  protected : virtual void nt_number_range_ (goil_lexique &,
                                GGS_number_set  &) = 0 ;

  protected : virtual void nt_attribute_name_ (goil_lexique &,
                                GGS_lstring  &) = 0 ;

  protected : virtual void nt_multiple_specifier_ (goil_lexique &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_default_number_ (goil_lexique &,
                                GGS_bool &,
                                GGS_luint  &) = 0 ;

  protected : virtual void nt_default_name_ (goil_lexique &,
                                GGS_bool &,
                                GGS_lstring  &) = 0 ;

  protected : virtual void nt_enumeration_ (goil_lexique &) = 0 ;

  protected : virtual void nt_enumerator_ (goil_lexique &) = 0 ;

  protected : virtual void nt_impl_parameter_list_ (goil_lexique &) = 0 ;

  protected : virtual void nt_implementation_def_ (goil_lexique &) = 0 ;

  protected : virtual void nt_application_definition_ (goil_lexique &) = 0 ;

  protected : virtual void nt_object_definition_list_ (goil_lexique &) = 0 ;

  protected : virtual void nt_nm_ (goil_lexique &) = 0 ;

  protected : virtual void nt_boolean_ (goil_lexique &) = 0 ;

  protected : virtual void nt_appmode_ (goil_lexique &) = 0 ;

  protected : virtual void nt_task_ (goil_lexique &) = 0 ;

  protected : virtual void nt_counter_ (goil_lexique &) = 0 ;

  protected : virtual void nt_alarm_ (goil_lexique &) = 0 ;

  protected : virtual void nt_resource_ (goil_lexique &) = 0 ;

  protected : virtual void nt_event_ (goil_lexique &) = 0 ;

  protected : virtual void nt_isr_ (goil_lexique &) = 0 ;

  protected : virtual void nt_mess_ (goil_lexique &) = 0 ;

  protected : virtual void nt_networkmess_ (goil_lexique &) = 0 ;

  protected : virtual void nt_com_ (goil_lexique &) = 0 ;

  protected : virtual void nt_ipdu_ (goil_lexique &) = 0 ;

  protected : void pr_file_goil_syntax_68_12_ (goil_lexique &) ;

  protected : void pr_description_goil_syntax_85_19_ (goil_lexique &,
                                GGS_lstring  &) ;

  protected : virtual sint16 select_goil_syntax_0 (goil_lexique &) = 0 ;

  protected : void pr_OIL_version_goil_syntax_97_19_ (goil_lexique &,
                                GGS_lstring  &,
                                GGS_lstring  &) ;

  protected : void pr_implementation_definition_goil_syntax_110_33_ (goil_lexique &,
                                GGS_implementation  &) ;

  protected : void pr_implementation_spec_list_goil_syntax_120_32_ (goil_lexique &,
                                GGS_implementation  &) ;

  protected : virtual sint16 select_repeat_goil_syntax_1 (goil_lexique &) = 0 ;

  protected : void pr_implementation_spec_goil_syntax_126_27_ (goil_lexique &,
                                GGS_implementation  &) ;

  protected : virtual sint16 select_goil_syntax_2 (goil_lexique &) = 0 ;

  protected : void pr_implementation_list_goil_syntax_157_27_ (goil_lexique &,
                                GGS_implementationSpec  &) ;

  protected : virtual sint16 select_repeat_goil_syntax_3 (goil_lexique &) = 0 ;

  protected : void pr_impl_attr_def_goil_syntax_167_21_ (goil_lexique &,
                                GGS_implementationSpec  &) ;

  protected : virtual sint16 select_goil_syntax_4 (goil_lexique &) = 0 ;

  protected : void pr_impl_attr_def_goil_syntax_189_21_ (goil_lexique &,
                                GGS_implementationSpec  &) ;

  protected : void pr_impl_attr_def_goil_syntax_200_21_ (goil_lexique &,
                                GGS_implementationSpec  &) ;

  protected : void pr_auto_specifier_goil_syntax_212_22_ (goil_lexique &,
                                GGS_bool &) ;

  protected : virtual sint16 select_goil_syntax_5 (goil_lexique &) = 0 ;

  protected : void pr_number_range_or_nil_goil_syntax_220_27_ (goil_lexique &,
                                GGS_bool &,
                                GGS_number_set  &) ;

  protected : virtual sint16 select_goil_syntax_6 (goil_lexique &) = 0 ;

  protected : void pr_number_range_goil_syntax_231_20_ (goil_lexique &,
                                GGS_number_set  &) ;

  protected : virtual sint16 select_goil_syntax_7 (goil_lexique &) = 0 ;

  protected : virtual sint16 select_goil_syntax_8 (goil_lexique &) = 0 ;

  protected : virtual sint16 select_repeat_goil_syntax_9 (goil_lexique &) = 0 ;

  protected : void pr_attribute_name_goil_syntax_261_22_ (goil_lexique &,
                                GGS_lstring  &) ;

  protected : void pr_multiple_specifier_goil_syntax_265_26_ (goil_lexique &,
                                GGS_bool &) ;

  protected : virtual sint16 select_goil_syntax_10 (goil_lexique &) = 0 ;

  protected : void pr_default_number_goil_syntax_274_22_ (goil_lexique &,
                                GGS_bool &,
                                GGS_luint  &) ;

  protected : virtual sint16 select_goil_syntax_11 (goil_lexique &) = 0 ;

  protected : void pr_default_name_goil_syntax_285_20_ (goil_lexique &,
                                GGS_bool &,
                                GGS_lstring  &) ;

  protected : virtual sint16 select_goil_syntax_12 (goil_lexique &) = 0 ;

  protected : void pr_enumeration_goil_syntax_299_19_ (goil_lexique &) ;

  protected : virtual sint16 select_repeat_goil_syntax_13 (goil_lexique &) = 0 ;

  protected : void pr_enumerator_goil_syntax_310_18_ (goil_lexique &) ;

  protected : void pr_impl_parameter_list_goil_syntax_316_27_ (goil_lexique &) ;

  protected : virtual sint16 select_goil_syntax_14 (goil_lexique &) = 0 ;

  protected : virtual sint16 select_repeat_goil_syntax_15 (goil_lexique &) = 0 ;

  protected : void pr_implementation_def_goil_syntax_328_26_ (goil_lexique &) ;

  protected : void pr_application_definition_goil_syntax_348_30_ (goil_lexique &) ;

  protected : virtual sint16 select_repeat_goil_syntax_16 (goil_lexique &) = 0 ;

  protected : void pr_object_definition_list_goil_syntax_361_30_ (goil_lexique &) ;

  protected : virtual sint16 select_repeat_goil_syntax_17 (goil_lexique &) = 0 ;

  protected : void pr_nm_goil_syntax_378_10_ (goil_lexique &) ;

  protected : void pr_boolean_goil_syntax_389_15_ (goil_lexique &) ;

  protected : virtual sint16 select_goil_syntax_18 (goil_lexique &) = 0 ;

} ;

//---------------------------------------------------------------------------*

#endif
