//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'goil_syntax.cpp'                           *
//                    Generated by version version 2.1.4                     *
//                     january 10th, 2011, at 14h31'44"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != 926
  #error "This file has been compiled with a version of GALGAS that uses libpm version 926, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "goil_syntax.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"
#include "cfg_grammar.h"
#include "api_grammar.h"
#include "goil_cpu_level_include.h"
#include "goil_file_level_include.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_syntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_start_i0_ (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @parseRewindInstructionForGeneration
  const C_parsingContext parsingContext_0 = inCompiler->parsingContext () ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_void var_void_5F_obj_5F_check = GALGAS_void::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (180)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_root_5F_obj var_cpu_5F_check = function_void_5F_root_5F_obj (inCompiler COMMA_SOURCE_FILE_AT_LINE (181)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_appli_5F_exist = GALGAS_bool (false) ;
    //-------- @nonterminalInstructionForGeneration
    nt_file_check_5F_appli_5F_exist (var_cpu_5F_check, var_appli_5F_exist, inCompiler) ;
  inCompiler->setParsingContext (parsingContext_0) ; // rewind
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_implementation var_imp = GALGAS_implementation::constructor_emptyMap (SOURCE_FILE_AT_LINE (187)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_void var_void_5F_obj = GALGAS_void::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (188)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_root_5F_obj var_cpu = function_void_5F_root_5F_obj (inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_oilConfigFile = function_templateFilePath (GALGAS_string ("config"), GALGAS_string ("config.oil"), inCompiler COMMA_SOURCE_FILE_AT_LINE (192)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_oilConfigFile.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_1) {
      { //-------- @grammarInstructionWithSourceFileForGeneration
      cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, function_lstringWith (var_oilConfigFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (194)), var_imp, var_cpu COMMA_SOURCE_FILE_AT_LINE (194)) ;
      } //-------- END @grammarInstructionWithSourceFileForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_appli_5F_exist.objectCompare (GALGAS_bool (true))).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_oilConfigApplicationsFile = function_templateFilePath (GALGAS_string ("config"), GALGAS_string ("config_applications.oil"), inCompiler COMMA_SOURCE_FILE_AT_LINE (198)) ;
        { //-------- @grammarInstructionWithSourceFileForGeneration
        cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, function_lstringWith (var_oilConfigApplicationsFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (199)), var_imp, var_cpu COMMA_SOURCE_FILE_AT_LINE (199)) ;
        } //-------- END @grammarInstructionWithSourceFileForGeneration
      }
    }
    //-------- @nonterminalInstructionForGeneration
    nt_file_ (var_imp, var_cpu, inCompiler) ;
  //-------- END OF @parseRewindInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_set_5F_defaults (var_imp, var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (226)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_trampoline_5F_base_5F_path = var_cpu.reader_os (SOURCE_FILE_AT_LINE (227)).reader_tpl_5F_base_5F_path (SOURCE_FILE_AT_LINE (227)).reader_string (SOURCE_FILE_AT_LINE (227)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_check_5F_target (var_trampoline_5F_base_5F_path, inCompiler COMMA_SOURCE_FILE_AT_LINE (228)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_verify_5F_all (var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (232)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    { //-------- @routineCallInstructionForGeneration
    routine_generate_5F_all (var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (233)) ;
    } //-------- @routineCallInstructionForGeneration
  }
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_file_i1_ (GALGAS_implementation & ioArgument_imp,
                                                           GALGAS_root_5F_obj & ioArgument_cpu,
                                                           C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_lstring var_version = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (242)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_lstring var_desc = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (243)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_goil_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_file_5F_level_ (ioArgument_imp, ioArgument_cpu, inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_OIL_5F_version_ (var_version, var_desc, inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_implementation_5F_definition_ (ioArgument_imp, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_application_5F_definition_ (ioArgument_cpu, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_file_i1_check_5F_appli_5F_exist (GALGAS_root_5F_obj & ioArgument_cpu_5F_check,
                                                                                  GALGAS_bool & outArgument_appli_5F_exist,
                                                                                  C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_appli_5F_exist_5F_temp = GALGAS_bool (false) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_goil_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_file_5F_level_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_OIL_5F_version_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_implementation_5F_definition_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_application_5F_definition_check_5F_appli_5F_exist (ioArgument_cpu_5F_check, var_appli_5F_exist_5F_temp, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_appli_5F_exist = var_appli_5F_exist_5F_temp ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_description_i2_ (GALGAS_lstring & outArgument_desc,
                                                                  C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_desc.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_1 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    outArgument_desc = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (279)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (281)) ;
    //-------- @terminalCheckInstructionForGeneration
    outArgument_desc = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (282)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_description_i2_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_1 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (281)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (282)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_OIL_5F_version_i3_ (GALGAS_lstring & outArgument_version,
                                                                     GALGAS_lstring & outArgument_desc,
                                                                     C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_version.drop () ; // Release 'out' argument
  outArgument_desc.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) COMMA_SOURCE_FILE_AT_LINE (290)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- @terminalCheckInstructionForGeneration
  outArgument_version = inCompiler->synthetizedAttribute_a_5F_string () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_description_ (outArgument_desc, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (294)) ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_OIL_5F_version_i3_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) COMMA_SOURCE_FILE_AT_LINE (290)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_description_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (294)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_application_5F_definition_i4_ (GALGAS_root_5F_obj & ioArgument_file,
                                                                                C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_os_5F_obj var_os = ioArgument_file.reader_os (SOURCE_FILE_AT_LINE (303)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_com var_com = ioArgument_file.reader_com (SOURCE_FILE_AT_LINE (304)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_task_5F_map var_tasks = ioArgument_file.reader_tasks (SOURCE_FILE_AT_LINE (305)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_counter_5F_map var_counters = ioArgument_file.reader_counters (SOURCE_FILE_AT_LINE (306)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_alarm_5F_map var_alarms = ioArgument_file.reader_alarms (SOURCE_FILE_AT_LINE (307)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_resource_5F_map var_resources = ioArgument_file.reader_resources (SOURCE_FILE_AT_LINE (308)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_event_5F_map var_events = ioArgument_file.reader_events (SOURCE_FILE_AT_LINE (309)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_isr_5F_map var_isrs = ioArgument_file.reader_isrs (SOURCE_FILE_AT_LINE (310)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_message_5F_map var_messages = ioArgument_file.reader_messages (SOURCE_FILE_AT_LINE (311)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_netmess_5F_map var_net_5F_messages = ioArgument_file.reader_net_5F_messages (SOURCE_FILE_AT_LINE (312)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_scheduletable_5F_map var_scheduletables = ioArgument_file.reader_scheduletables (SOURCE_FILE_AT_LINE (313)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_app_5F_map var_applis = ioArgument_file.reader_applis (SOURCE_FILE_AT_LINE (314)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) COMMA_SOURCE_FILE_AT_LINE (316)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_cpuName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (317)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (318)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_object_5F_definition_5F_list_ (var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (333)) ;
  //-------- @nonterminalInstructionForGeneration
  GALGAS_lstring joker_7903_0 ; // Joker input parameter
  nt_description_ (joker_7903_0, inCompiler) ;
  joker_7903_0.drop () ; // Release temporary input variables (joker in source)
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (335)) ;
  //-------- @assignmentInstructionForGeneration
  ioArgument_file = GALGAS_root_5F_obj::constructor_new (var_cpuName, var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis COMMA_SOURCE_FILE_AT_LINE (337)) ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_application_5F_definition_i4_check_5F_appli_5F_exist (GALGAS_root_5F_obj & ioArgument_file_5F_check,
                                                                                                       GALGAS_bool & outArgument_appli_5F_exist,
                                                                                                       C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_os_5F_obj var_os = ioArgument_file_5F_check.reader_os (SOURCE_FILE_AT_LINE (357)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_com var_com = ioArgument_file_5F_check.reader_com (SOURCE_FILE_AT_LINE (358)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_task_5F_map var_tasks = ioArgument_file_5F_check.reader_tasks (SOURCE_FILE_AT_LINE (359)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_counter_5F_map var_counters = ioArgument_file_5F_check.reader_counters (SOURCE_FILE_AT_LINE (360)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_alarm_5F_map var_alarms = ioArgument_file_5F_check.reader_alarms (SOURCE_FILE_AT_LINE (361)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_resource_5F_map var_resources = ioArgument_file_5F_check.reader_resources (SOURCE_FILE_AT_LINE (362)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_event_5F_map var_events = ioArgument_file_5F_check.reader_events (SOURCE_FILE_AT_LINE (363)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_isr_5F_map var_isrs = ioArgument_file_5F_check.reader_isrs (SOURCE_FILE_AT_LINE (364)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_message_5F_map var_messages = ioArgument_file_5F_check.reader_messages (SOURCE_FILE_AT_LINE (365)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_netmess_5F_map var_net_5F_messages = ioArgument_file_5F_check.reader_net_5F_messages (SOURCE_FILE_AT_LINE (366)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_scheduletable_5F_map var_scheduletables = ioArgument_file_5F_check.reader_scheduletables (SOURCE_FILE_AT_LINE (367)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_app_5F_map var_applis = ioArgument_file_5F_check.reader_applis (SOURCE_FILE_AT_LINE (368)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) COMMA_SOURCE_FILE_AT_LINE (370)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_cpuName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (371)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (372)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_object_5F_definition_5F_list_check_5F_appli_5F_exist (var_applis, outArgument_appli_5F_exist, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (374)) ;
  //-------- @nonterminalInstructionForGeneration
  GALGAS_lstring joker_9166_0 ; // Joker input parameter
  nt_description_ (joker_9166_0, inCompiler) ;
  joker_9166_0.drop () ; // Release temporary input variables (joker in source)
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (376)) ;
  //-------- @assignmentInstructionForGeneration
  ioArgument_file_5F_check = GALGAS_root_5F_obj::constructor_new (var_cpuName, var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis COMMA_SOURCE_FILE_AT_LINE (378)) ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_object_5F_definition_5F_list_i5_ (GALGAS_os_5F_obj & ioArgument_os,
                                                                                   GALGAS_com & ioArgument_com,
                                                                                   GALGAS_task_5F_map & ioArgument_tasks,
                                                                                   GALGAS_counter_5F_map & ioArgument_counters,
                                                                                   GALGAS_alarm_5F_map & ioArgument_alarms,
                                                                                   GALGAS_resource_5F_map & ioArgument_resources,
                                                                                   GALGAS_event_5F_map & ioArgument_events,
                                                                                   GALGAS_isr_5F_map & ioArgument_isrs,
                                                                                   GALGAS_message_5F_map & ioArgument_messages,
                                                                                   GALGAS_netmess_5F_map & ioArgument_net_5F_messages,
                                                                                   GALGAS_scheduletable_5F_map & ioArgument_scheduletables,
                                                                                   GALGAS_app_5F_map & ioArgument_applis,
                                                                                   C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_goil_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_os_ (ioArgument_os, inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_appmode_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_9946_0 ; // Joker input parameter
      nt_description_ (joker_9946_0, inCompiler) ;
      joker_9946_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_task_ (ioArgument_tasks, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_counter_ (ioArgument_counters, inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_alarm_ (ioArgument_alarms, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10050_0 ; // Joker input parameter
      nt_description_ (joker_10050_0, inCompiler) ;
      joker_10050_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_resource_ (ioArgument_resources, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10102_0 ; // Joker input parameter
      nt_description_ (joker_10102_0, inCompiler) ;
      joker_10102_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 8: {
      //-------- @nonterminalInstructionForGeneration
      nt_event_ (ioArgument_events, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10148_0 ; // Joker input parameter
      nt_description_ (joker_10148_0, inCompiler) ;
      joker_10148_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 9: {
      //-------- @nonterminalInstructionForGeneration
      nt_isr_ (ioArgument_isrs, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10190_0 ; // Joker input parameter
      nt_description_ (joker_10190_0, inCompiler) ;
      joker_10190_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 10: {
      //-------- @nonterminalInstructionForGeneration
      nt_mess_ (ioArgument_messages, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10237_0 ; // Joker input parameter
      nt_description_ (joker_10237_0, inCompiler) ;
      joker_10237_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 11: {
      //-------- @nonterminalInstructionForGeneration
      nt_networkmess_ (ioArgument_net_5F_messages, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10295_0 ; // Joker input parameter
      nt_description_ (joker_10295_0, inCompiler) ;
      joker_10295_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 12: {
      //-------- @nonterminalInstructionForGeneration
      nt_com_ (ioArgument_com, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10336_0 ; // Joker input parameter
      nt_description_ (joker_10336_0, inCompiler) ;
      joker_10336_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 13: {
      //-------- @nonterminalInstructionForGeneration
      nt_ipdu_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10372_0 ; // Joker input parameter
      nt_description_ (joker_10372_0, inCompiler) ;
      joker_10372_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 14: {
      //-------- @nonterminalInstructionForGeneration
      nt_nm_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10406_0 ; // Joker input parameter
      nt_description_ (joker_10406_0, inCompiler) ;
      joker_10406_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 15: {
      //-------- @nonterminalInstructionForGeneration
      nt_scheduletable_ (ioArgument_scheduletables, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10468_0 ; // Joker input parameter
      nt_description_ (joker_10468_0, inCompiler) ;
      joker_10468_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 16: {
      //-------- @nonterminalInstructionForGeneration
      nt_appli_ (ioArgument_applis, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGAS_lstring joker_10514_0 ; // Joker input parameter
      nt_description_ (joker_10514_0, inCompiler) ;
      joker_10514_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 17: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_cpu_5F_level_ (ioArgument_os, ioArgument_com, ioArgument_tasks, ioArgument_counters, ioArgument_alarms, ioArgument_resources, ioArgument_events, ioArgument_isrs, ioArgument_messages, ioArgument_net_5F_messages, ioArgument_scheduletables, ioArgument_applis, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_object_5F_definition_5F_list_i5_check_5F_appli_5F_exist (GALGAS_app_5F_map & ioArgument_applis_5F_check,
                                                                                                          GALGAS_bool & outArgument_appli_5F_exist,
                                                                                                          C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_appli_5F_exist_5F_temp = GALGAS_bool (false) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_goil_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_os_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_appmode_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_task_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_counter_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_alarm_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_resource_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 8: {
      //-------- @nonterminalInstructionForGeneration
      nt_event_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 9: {
      //-------- @nonterminalInstructionForGeneration
      nt_isr_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 10: {
      //-------- @nonterminalInstructionForGeneration
      nt_mess_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 11: {
      //-------- @nonterminalInstructionForGeneration
      nt_networkmess_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 12: {
      //-------- @nonterminalInstructionForGeneration
      nt_com_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 13: {
      //-------- @nonterminalInstructionForGeneration
      nt_ipdu_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 14: {
      //-------- @nonterminalInstructionForGeneration
      nt_nm_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 15: {
      //-------- @nonterminalInstructionForGeneration
      nt_scheduletable_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 16: {
      //-------- @nonterminalInstructionForGeneration
      nt_appli_check_5F_appli_5F_exist (ioArgument_applis_5F_check, var_appli_5F_exist_5F_temp, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 17: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_cpu_5F_level_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_appli_5F_exist = var_appli_5F_exist_5F_temp ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_nm_i6_ (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NM) COMMA_SOURCE_FILE_AT_LINE (472)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (473)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (474)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (475)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (476)) ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_nm_i6_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NM) COMMA_SOURCE_FILE_AT_LINE (472)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (473)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (474)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (475)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (476)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_boolean_i7_ (GALGAS_lbool & outArgument_val,
                                                              C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_val.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_3 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE_AT_LINE (484)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_val = GALGAS_lbool::constructor_new (GALGAS_bool (true), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (485)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE_AT_LINE (487)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_val = GALGAS_lbool::constructor_new (GALGAS_bool (false), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (488)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_boolean_i7_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_3 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE_AT_LINE (484)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE_AT_LINE (487)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_free_5F_field_i8_ (GALGAS_ident_5F_map & ioArgument_ids,
                                                                    C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_idf ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_basic_5F_type var_val ;
  //-------- @terminalCheckInstructionForGeneration
  var_idf = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (495)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (496)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_lstring var_value ;
    //-------- @terminalCheckInstructionForGeneration
    var_value = inCompiler->synthetizedAttribute_att_5F_token () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (499)) ;
    //-------- @assignmentInstructionForGeneration
    var_val = GALGAS_string_5F_class::constructor_new (var_value.reader_location (SOURCE_FILE_AT_LINE (500)), var_value.reader_string (SOURCE_FILE_AT_LINE (500)) COMMA_SOURCE_FILE_AT_LINE (500)) ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_luint_36__34_ var_value ;
    //-------- @terminalCheckInstructionForGeneration
    var_value = inCompiler->synthetizedAttribute_integerNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE_AT_LINE (503)) ;
    //-------- @assignmentInstructionForGeneration
    var_val = GALGAS_uint_36__34__5F_class::constructor_new (var_value.reader_location (SOURCE_FILE_AT_LINE (504)), var_value.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (504)) COMMA_SOURCE_FILE_AT_LINE (504)) ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_lbool var_value ;
    //-------- @nonterminalInstructionForGeneration
    nt_boolean_ (var_value, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    var_val = GALGAS_bool_5F_class::constructor_new (var_idf.reader_location (SOURCE_FILE_AT_LINE (508)), var_value.reader_bool (SOURCE_FILE_AT_LINE (508)) COMMA_SOURCE_FILE_AT_LINE (508)) ;
  } break ;
  default:
    break ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ids.modifier_put (var_idf, var_val, inCompiler COMMA_SOURCE_FILE_AT_LINE (512)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_free_5F_field_i8_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (495)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (496)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE_AT_LINE (503)) ;
  } break ;
  case 3: {
    //-------- @nonterminalInstructionForGeneration
    nt_boolean_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_file_5F_level_i9_ (GALGAS_implementation & ioArgument_imp,
                                                                               GALGAS_root_5F_obj & ioArgument_cpu,
                                                                               C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (519)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_file_5F_name ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_5 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (522)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_file_5F_in_5F_path (var_file_5F_name, inCompiler COMMA_SOURCE_FILE_AT_LINE (523)) ;
    } //-------- @routineCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (525)) ;
  } break ;
  default:
    break ;
  }
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, var_file_5F_name, ioArgument_imp, ioArgument_cpu COMMA_SOURCE_FILE_AT_LINE (527)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_file_5F_level_i9_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (519)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_5 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (522)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (525)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_cpu_5F_level_i10_ (GALGAS_os_5F_obj & ioArgument_os,
                                                                               GALGAS_com & ioArgument_com,
                                                                               GALGAS_task_5F_map & ioArgument_tasks,
                                                                               GALGAS_counter_5F_map & ioArgument_counters,
                                                                               GALGAS_alarm_5F_map & ioArgument_alarms,
                                                                               GALGAS_resource_5F_map & ioArgument_resources,
                                                                               GALGAS_event_5F_map & ioArgument_events,
                                                                               GALGAS_isr_5F_map & ioArgument_isrs,
                                                                               GALGAS_message_5F_map & ioArgument_messages,
                                                                               GALGAS_netmess_5F_map & ioArgument_net_5F_messages,
                                                                               GALGAS_scheduletable_5F_map & ioArgument_scheduletables,
                                                                               GALGAS_app_5F_map & ioArgument_applis,
                                                                               C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (547)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_file_5F_name ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_6 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (550)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_file_5F_in_5F_path (var_file_5F_name, inCompiler COMMA_SOURCE_FILE_AT_LINE (551)) ;
    } //-------- @routineCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (553)) ;
  } break ;
  default:
    break ;
  }
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_goil_5F_cpu_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, var_file_5F_name, ioArgument_os, ioArgument_com, ioArgument_tasks, ioArgument_counters, ioArgument_alarms, ioArgument_resources, ioArgument_events, ioArgument_isrs, ioArgument_messages, ioArgument_net_5F_messages, ioArgument_scheduletables, ioArgument_applis COMMA_SOURCE_FILE_AT_LINE (555)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}

//---------------------------------------------------------------------------*

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_cpu_5F_level_i10_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (547)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_6 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (550)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (553)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


