//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'goil_syntax.cpp'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 22th, 2010, at 18h13'23"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "goil_syntax.h"
#include "galgas/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"
#include "cfg_grammar.h"
#include "api_grammar.h"
#include "goil_cpu_level_include.h"
#include "goil_file_level_include.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_syntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

void cParser_goil_5F_syntax::rule_goil_5F_syntax_start_i0_ (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @parseRewindInstructionForGeneration
  const C_parsingContext parsingContext_0 = inCompiler->parsingContext () ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGASap_location temp_1 (inCompiler->here (SOURCE_FILE_AT_LINE (207))) ;
    GALGASap_void temp_2 (GALGASap_void::constructor_new (temp_1 COMMA_SOURCE_FILE_AT_LINE (207))) ;
    GALGASap_void var_void_5F_obj_5F_check (temp_2) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @functionCallExpressionForGeneration
    GALGASap_root_5F_obj temp_3 (function_void_5F_root_5F_obj (inCompiler COMMA_SOURCE_FILE_AT_LINE (208))) ;
    GALGASap_root_5F_obj var_cpu_5F_check (temp_3) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @falseExpressionForGeneration
    GALGASap_bool temp_4 (false COMMA_SOURCE_FILE_AT_LINE (209)) ;
    GALGASap_bool var_appli_5F_exist (temp_4) ;
    //-------- @nonterminalInstructionForGeneration
    nt_file_check_5F_appli_5F_exist (var_cpu_5F_check, var_appli_5F_exist, inCompiler) ;
  inCompiler->setParsingContext (parsingContext_0) ; // rewind 2
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGASap_implementation var_imp (GALGASap_implementation::constructor_emptyMap (SOURCE_FILE_AT_LINE (214))) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGASap_location temp_5 (inCompiler->here (SOURCE_FILE_AT_LINE (215))) ;
    GALGASap_void temp_6 (GALGASap_void::constructor_new (temp_5 COMMA_SOURCE_FILE_AT_LINE (215))) ;
    GALGASap_void var_void_5F_obj (temp_6) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @functionCallExpressionForGeneration
    GALGASap_root_5F_obj temp_7 (function_void_5F_root_5F_obj (inCompiler COMMA_SOURCE_FILE_AT_LINE (216))) ;
    GALGASap_root_5F_obj var_cpu (temp_7) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @functionCallExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGASap_string temp_8 ("config" COMMA_SOURCE_FILE_AT_LINE (219)) ;
    //--- @literalStringExpressionForGeneration
    GALGASap_string temp_9 ("config.oil" COMMA_SOURCE_FILE_AT_LINE (219)) ;
    GALGASap_string temp_10 (function_templateFilePath (temp_8, temp_9, inCompiler COMMA_SOURCE_FILE_AT_LINE (219))) ;
    GALGASap_string var_oilConfigFile (temp_10) ;
    //-------- @ifInstructionForGeneration
    //--- @notEqualExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGASap_string temp_11 ("" COMMA_SOURCE_FILE_AT_LINE (220)) ;
    GALGASap_bool temp_12 (kIsNotEqual, GALGASap_string::objectCompare (var_oilConfigFile, temp_11) COMMA_SOURCE_FILE_AT_LINE (220)) ;
    if (isValidAndTrue (temp_12)) {
      { //-------- @grammarInstructionWithSourceFileForGeneration
      //--- @functionCallExpressionForGeneration
      GALGASap_lstring temp_13 (function_lstringWith (var_oilConfigFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (221))) ;
      cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, temp_13, var_imp, var_cpu COMMA_SOURCE_FILE_AT_LINE (221)) ;
      } //-------- END @grammarInstructionWithSourceFileForGeneration
      //-------- @ifInstructionForGeneration
      //--- @equalExpressionForGeneration
      //--- @trueExpressionForGeneration
      GALGASap_bool temp_14 (true COMMA_SOURCE_FILE_AT_LINE (224)) ;
      GALGASap_bool temp_15 (kIsEqual, GALGASap_bool::objectCompare (var_appli_5F_exist, temp_14) COMMA_SOURCE_FILE_AT_LINE (224)) ;
      if (isValidAndTrue (temp_15)) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        //--- @functionCallExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGASap_string temp_16 ("config" COMMA_SOURCE_FILE_AT_LINE (225)) ;
        //--- @literalStringExpressionForGeneration
        GALGASap_string temp_17 ("config_applications.oil" COMMA_SOURCE_FILE_AT_LINE (225)) ;
        GALGASap_string temp_18 (function_templateFilePath (temp_16, temp_17, inCompiler COMMA_SOURCE_FILE_AT_LINE (225))) ;
        GALGASap_string var_oilConfigApplicationsFile (temp_18) ;
        { //-------- @grammarInstructionWithSourceFileForGeneration
        //--- @functionCallExpressionForGeneration
        GALGASap_lstring temp_19 (function_lstringWith (var_oilConfigApplicationsFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (226))) ;
        cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, temp_19, var_imp, var_cpu COMMA_SOURCE_FILE_AT_LINE (226)) ;
        } //-------- END @grammarInstructionWithSourceFileForGeneration
      }
    }
    //-------- @nonterminalInstructionForGeneration
    nt_file_ (var_imp, var_cpu, inCompiler) ;
  //-------- END OF @parseRewindInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_set_5F_defaults (var_imp, var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (253)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_verify_5F_all (var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @equalExpressionForGeneration
  GALGASap_uint temp_20 (GALGASap_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (257))) ;
  //--- @literalUIntExpressionForGeneration
  GALGASap_uint temp_21 ((PMUInt32) 0U COMMA_SOURCE_FILE_AT_LINE (257)) ;
  GALGASap_bool temp_22 (kIsEqual, GALGASap_uint::objectCompare (temp_20, temp_21) COMMA_SOURCE_FILE_AT_LINE (257)) ;
  if (isValidAndTrue (temp_22)) {
    { //-------- @routineCallInstructionForGeneration
    routine_generate_5F_all (var_cpu, inCompiler COMMA_SOURCE_FILE_AT_LINE (258)) ;
    } //-------- @routineCallInstructionForGeneration
  }
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_file_i1_ (GALGASap_implementation & ioArgument_imp,
                                                           GALGASap_root_5F_obj & ioArgument_cpu,
                                                           C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_0 ("" COMMA_SOURCE_FILE_AT_LINE (267)) ;
  GALGASap_location temp_1 (inCompiler->here (SOURCE_FILE_AT_LINE (267))) ;
  GALGASap_lstring temp_2 (GALGASap_lstring::constructor_new (temp_0, temp_1 COMMA_SOURCE_FILE_AT_LINE (267))) ;
  GALGASap_lstring var_version (temp_2) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_3 ("" COMMA_SOURCE_FILE_AT_LINE (268)) ;
  GALGASap_location temp_4 (inCompiler->here (SOURCE_FILE_AT_LINE (268))) ;
  GALGASap_lstring temp_5 (GALGASap_lstring::constructor_new (temp_3, temp_4 COMMA_SOURCE_FILE_AT_LINE (268))) ;
  GALGASap_lstring var_desc (temp_5) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_6 = true ;
  while (repeatFlag_6) {
    switch (select_goil_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_file_5F_level_ (ioArgument_imp, ioArgument_cpu, inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_OIL_5F_version_ (var_version, var_desc, inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_implementation_5F_definition_ (ioArgument_imp, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_application_5F_definition_ (ioArgument_cpu, inCompiler) ;
    } break ;
    default:
      repeatFlag_6 = false ;
      break ;
    }
  }
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_file_i1_check_5F_appli_5F_exist (GALGASap_root_5F_obj & ioArgument_cpu_5F_check,
                                                                                  GALGASap_bool & outArgument_appli_5F_exist,
                                                                                  C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @falseExpressionForGeneration
  GALGASap_bool temp_0 (false COMMA_SOURCE_FILE_AT_LINE (283)) ;
  GALGASap_bool var_appli_5F_exist_5F_temp (temp_0) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_goil_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_file_5F_level_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_OIL_5F_version_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_implementation_5F_definition_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_application_5F_definition_check_5F_appli_5F_exist (ioArgument_cpu_5F_check, var_appli_5F_exist_5F_temp, inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_appli_5F_exist = var_appli_5F_exist_5F_temp ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_description_i2_ (GALGASap_lstring & outArgument_desc,
                                                                  C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_desc.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_1 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGASap_string temp_0 ("" COMMA_SOURCE_FILE_AT_LINE (304)) ;
    GALGASap_location temp_1 (inCompiler->here (SOURCE_FILE_AT_LINE (304))) ;
    GALGASap_lstring temp_2 (GALGASap_lstring::constructor_new (temp_0, temp_1 COMMA_SOURCE_FILE_AT_LINE (304))) ;
    outArgument_desc = temp_2 ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (306)) ;
    //-------- @terminalCheckInstructionForGeneration
    outArgument_desc = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (307)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_description_i2_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_1 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (306)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (307)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_OIL_5F_version_i3_ (GALGASap_lstring & outArgument_version,
                                                                     GALGASap_lstring & outArgument_desc,
                                                                     C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_version.drop () ; // Release 'out' argument
  outArgument_desc.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) COMMA_SOURCE_FILE_AT_LINE (315)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (316)) ;
  //-------- @terminalCheckInstructionForGeneration
  outArgument_version = inCompiler->synthetizedAttribute_a_5F_string () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (317)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_description_ (outArgument_desc, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (319)) ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_OIL_5F_version_i3_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) COMMA_SOURCE_FILE_AT_LINE (315)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (316)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (317)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_description_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (319)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_application_5F_definition_i4_ (GALGASap_root_5F_obj & ioArgument_file,
                                                                                C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_os_5F_obj temp_0 (ioArgument_file.readerCall_os (SOURCE_FILE_AT_LINE (328))) ;
  GALGASap_os_5F_obj var_os (temp_0) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_com temp_1 (ioArgument_file.readerCall_com (SOURCE_FILE_AT_LINE (329))) ;
  GALGASap_com var_com (temp_1) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_task_5F_map temp_2 (ioArgument_file.readerCall_tasks (SOURCE_FILE_AT_LINE (330))) ;
  GALGASap_task_5F_map var_tasks (temp_2) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_counter_5F_map temp_3 (ioArgument_file.readerCall_counters (SOURCE_FILE_AT_LINE (331))) ;
  GALGASap_counter_5F_map var_counters (temp_3) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_alarm_5F_map temp_4 (ioArgument_file.readerCall_alarms (SOURCE_FILE_AT_LINE (332))) ;
  GALGASap_alarm_5F_map var_alarms (temp_4) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_resource_5F_map temp_5 (ioArgument_file.readerCall_resources (SOURCE_FILE_AT_LINE (333))) ;
  GALGASap_resource_5F_map var_resources (temp_5) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_event_5F_map temp_6 (ioArgument_file.readerCall_events (SOURCE_FILE_AT_LINE (334))) ;
  GALGASap_event_5F_map var_events (temp_6) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_isr_5F_map temp_7 (ioArgument_file.readerCall_isrs (SOURCE_FILE_AT_LINE (335))) ;
  GALGASap_isr_5F_map var_isrs (temp_7) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_message_5F_map temp_8 (ioArgument_file.readerCall_messages (SOURCE_FILE_AT_LINE (336))) ;
  GALGASap_message_5F_map var_messages (temp_8) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_netmess_5F_map temp_9 (ioArgument_file.readerCall_net_5F_messages (SOURCE_FILE_AT_LINE (337))) ;
  GALGASap_netmess_5F_map var_net_5F_messages (temp_9) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_scheduletable_5F_map temp_10 (ioArgument_file.readerCall_scheduletables (SOURCE_FILE_AT_LINE (338))) ;
  GALGASap_scheduletable_5F_map var_scheduletables (temp_10) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_app_5F_map temp_11 (ioArgument_file.readerCall_applis (SOURCE_FILE_AT_LINE (339))) ;
  GALGASap_app_5F_map var_applis (temp_11) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) COMMA_SOURCE_FILE_AT_LINE (341)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGASap_lstring var_cpuName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (342)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (343)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_object_5F_definition_5F_list_ (var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (358)) ;
  //-------- @nonterminalInstructionForGeneration
  GALGASap_lstring joker_9306_0 ; // Joker input parameter
  nt_description_ (joker_9306_0, inCompiler) ;
  joker_9306_0.drop () ; // Release temporary input variables (joker in source)
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (360)) ;
  //-------- @assignmentInstructionForGeneration
  GALGASap_root_5F_obj temp_12 (GALGASap_root_5F_obj::constructor_new (var_cpuName, var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis COMMA_SOURCE_FILE_AT_LINE (362))) ;
  ioArgument_file = temp_12 ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_application_5F_definition_i4_check_5F_appli_5F_exist (GALGASap_root_5F_obj & ioArgument_file_5F_check,
                                                                                                       GALGASap_bool & outArgument_appli_5F_exist,
                                                                                                       C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_os_5F_obj temp_0 (ioArgument_file_5F_check.readerCall_os (SOURCE_FILE_AT_LINE (382))) ;
  GALGASap_os_5F_obj var_os (temp_0) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_com temp_1 (ioArgument_file_5F_check.readerCall_com (SOURCE_FILE_AT_LINE (383))) ;
  GALGASap_com var_com (temp_1) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_task_5F_map temp_2 (ioArgument_file_5F_check.readerCall_tasks (SOURCE_FILE_AT_LINE (384))) ;
  GALGASap_task_5F_map var_tasks (temp_2) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_counter_5F_map temp_3 (ioArgument_file_5F_check.readerCall_counters (SOURCE_FILE_AT_LINE (385))) ;
  GALGASap_counter_5F_map var_counters (temp_3) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_alarm_5F_map temp_4 (ioArgument_file_5F_check.readerCall_alarms (SOURCE_FILE_AT_LINE (386))) ;
  GALGASap_alarm_5F_map var_alarms (temp_4) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_resource_5F_map temp_5 (ioArgument_file_5F_check.readerCall_resources (SOURCE_FILE_AT_LINE (387))) ;
  GALGASap_resource_5F_map var_resources (temp_5) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_event_5F_map temp_6 (ioArgument_file_5F_check.readerCall_events (SOURCE_FILE_AT_LINE (388))) ;
  GALGASap_event_5F_map var_events (temp_6) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_isr_5F_map temp_7 (ioArgument_file_5F_check.readerCall_isrs (SOURCE_FILE_AT_LINE (389))) ;
  GALGASap_isr_5F_map var_isrs (temp_7) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_message_5F_map temp_8 (ioArgument_file_5F_check.readerCall_messages (SOURCE_FILE_AT_LINE (390))) ;
  GALGASap_message_5F_map var_messages (temp_8) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_netmess_5F_map temp_9 (ioArgument_file_5F_check.readerCall_net_5F_messages (SOURCE_FILE_AT_LINE (391))) ;
  GALGASap_netmess_5F_map var_net_5F_messages (temp_9) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_scheduletable_5F_map temp_10 (ioArgument_file_5F_check.readerCall_scheduletables (SOURCE_FILE_AT_LINE (392))) ;
  GALGASap_scheduletable_5F_map var_scheduletables (temp_10) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_app_5F_map temp_11 (ioArgument_file_5F_check.readerCall_applis (SOURCE_FILE_AT_LINE (393))) ;
  GALGASap_app_5F_map var_applis (temp_11) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) COMMA_SOURCE_FILE_AT_LINE (395)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGASap_lstring var_cpuName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (396)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (397)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_object_5F_definition_5F_list_check_5F_appli_5F_exist (var_applis, outArgument_appli_5F_exist, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (399)) ;
  //-------- @nonterminalInstructionForGeneration
  GALGASap_lstring joker_10569_0 ; // Joker input parameter
  nt_description_ (joker_10569_0, inCompiler) ;
  joker_10569_0.drop () ; // Release temporary input variables (joker in source)
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (401)) ;
  //-------- @assignmentInstructionForGeneration
  GALGASap_root_5F_obj temp_12 (GALGASap_root_5F_obj::constructor_new (var_cpuName, var_os, var_com, var_tasks, var_counters, var_alarms, var_resources, var_events, var_isrs, var_messages, var_net_5F_messages, var_scheduletables, var_applis COMMA_SOURCE_FILE_AT_LINE (403))) ;
  ioArgument_file_5F_check = temp_12 ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_object_5F_definition_5F_list_i5_ (GALGASap_os_5F_obj & ioArgument_os,
                                                                                   GALGASap_com & ioArgument_com,
                                                                                   GALGASap_task_5F_map & ioArgument_tasks,
                                                                                   GALGASap_counter_5F_map & ioArgument_counters,
                                                                                   GALGASap_alarm_5F_map & ioArgument_alarms,
                                                                                   GALGASap_resource_5F_map & ioArgument_resources,
                                                                                   GALGASap_event_5F_map & ioArgument_events,
                                                                                   GALGASap_isr_5F_map & ioArgument_isrs,
                                                                                   GALGASap_message_5F_map & ioArgument_messages,
                                                                                   GALGASap_netmess_5F_map & ioArgument_net_5F_messages,
                                                                                   GALGASap_scheduletable_5F_map & ioArgument_scheduletables,
                                                                                   GALGASap_app_5F_map & ioArgument_applis,
                                                                                   C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_goil_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_os_ (ioArgument_os, inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_appmode_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11349_0 ; // Joker input parameter
      nt_description_ (joker_11349_0, inCompiler) ;
      joker_11349_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_task_ (ioArgument_tasks, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_counter_ (ioArgument_counters, inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_alarm_ (ioArgument_alarms, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11453_0 ; // Joker input parameter
      nt_description_ (joker_11453_0, inCompiler) ;
      joker_11453_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_resource_ (ioArgument_resources, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11505_0 ; // Joker input parameter
      nt_description_ (joker_11505_0, inCompiler) ;
      joker_11505_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 8: {
      //-------- @nonterminalInstructionForGeneration
      nt_event_ (ioArgument_events, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11551_0 ; // Joker input parameter
      nt_description_ (joker_11551_0, inCompiler) ;
      joker_11551_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 9: {
      //-------- @nonterminalInstructionForGeneration
      nt_isr_ (ioArgument_isrs, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11593_0 ; // Joker input parameter
      nt_description_ (joker_11593_0, inCompiler) ;
      joker_11593_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 10: {
      //-------- @nonterminalInstructionForGeneration
      nt_mess_ (ioArgument_messages, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11640_0 ; // Joker input parameter
      nt_description_ (joker_11640_0, inCompiler) ;
      joker_11640_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 11: {
      //-------- @nonterminalInstructionForGeneration
      nt_networkmess_ (ioArgument_net_5F_messages, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11698_0 ; // Joker input parameter
      nt_description_ (joker_11698_0, inCompiler) ;
      joker_11698_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 12: {
      //-------- @nonterminalInstructionForGeneration
      nt_com_ (ioArgument_com, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11739_0 ; // Joker input parameter
      nt_description_ (joker_11739_0, inCompiler) ;
      joker_11739_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 13: {
      //-------- @nonterminalInstructionForGeneration
      nt_ipdu_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11775_0 ; // Joker input parameter
      nt_description_ (joker_11775_0, inCompiler) ;
      joker_11775_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 14: {
      //-------- @nonterminalInstructionForGeneration
      nt_nm_ (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11809_0 ; // Joker input parameter
      nt_description_ (joker_11809_0, inCompiler) ;
      joker_11809_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 15: {
      //-------- @nonterminalInstructionForGeneration
      nt_scheduletable_ (ioArgument_scheduletables, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11871_0 ; // Joker input parameter
      nt_description_ (joker_11871_0, inCompiler) ;
      joker_11871_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 16: {
      //-------- @nonterminalInstructionForGeneration
      nt_appli_ (ioArgument_applis, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      GALGASap_lstring joker_11917_0 ; // Joker input parameter
      nt_description_ (joker_11917_0, inCompiler) ;
      joker_11917_0.drop () ; // Release temporary input variables (joker in source)
    } break ;
    case 17: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_cpu_5F_level_ (ioArgument_os, ioArgument_com, ioArgument_tasks, ioArgument_counters, ioArgument_alarms, ioArgument_resources, ioArgument_events, ioArgument_isrs, ioArgument_messages, ioArgument_net_5F_messages, ioArgument_scheduletables, ioArgument_applis, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_object_5F_definition_5F_list_i5_check_5F_appli_5F_exist (GALGASap_app_5F_map & ioArgument_applis_5F_check,
                                                                                                          GALGASap_bool & outArgument_appli_5F_exist,
                                                                                                          C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_appli_5F_exist.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  //--- @falseExpressionForGeneration
  GALGASap_bool temp_0 (false COMMA_SOURCE_FILE_AT_LINE (472)) ;
  GALGASap_bool var_appli_5F_exist_5F_temp (temp_0) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_goil_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_os_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_appmode_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_task_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_counter_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_alarm_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_resource_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 8: {
      //-------- @nonterminalInstructionForGeneration
      nt_event_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 9: {
      //-------- @nonterminalInstructionForGeneration
      nt_isr_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 10: {
      //-------- @nonterminalInstructionForGeneration
      nt_mess_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 11: {
      //-------- @nonterminalInstructionForGeneration
      nt_networkmess_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 12: {
      //-------- @nonterminalInstructionForGeneration
      nt_com_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 13: {
      //-------- @nonterminalInstructionForGeneration
      nt_ipdu_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 14: {
      //-------- @nonterminalInstructionForGeneration
      nt_nm_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 15: {
      //-------- @nonterminalInstructionForGeneration
      nt_scheduletable_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 16: {
      //-------- @nonterminalInstructionForGeneration
      nt_appli_check_5F_appli_5F_exist (ioArgument_applis_5F_check, var_appli_5F_exist_5F_temp, inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_description_parse (inCompiler) ;
    } break ;
    case 17: {
      //-------- @nonterminalInstructionForGeneration
      nt_include_5F_cpu_5F_level_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_appli_5F_exist = var_appli_5F_exist_5F_temp ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_nm_i6_ (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NM) COMMA_SOURCE_FILE_AT_LINE (497)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (498)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (500)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (501)) ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_nm_i6_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NM) COMMA_SOURCE_FILE_AT_LINE (497)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (498)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (500)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE_AT_LINE (501)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_boolean_i7_ (GALGASap_lbool & outArgument_val,
                                                              C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_val.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_3 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE_AT_LINE (509)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @trueExpressionForGeneration
    GALGASap_bool temp_0 (true COMMA_SOURCE_FILE_AT_LINE (510)) ;
    GALGASap_location temp_1 (inCompiler->here (SOURCE_FILE_AT_LINE (510))) ;
    GALGASap_lbool temp_2 (GALGASap_lbool::constructor_new (temp_0, temp_1 COMMA_SOURCE_FILE_AT_LINE (510))) ;
    outArgument_val = temp_2 ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE_AT_LINE (512)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @falseExpressionForGeneration
    GALGASap_bool temp_3 (false COMMA_SOURCE_FILE_AT_LINE (513)) ;
    GALGASap_location temp_4 (inCompiler->here (SOURCE_FILE_AT_LINE (513))) ;
    GALGASap_lbool temp_5 (GALGASap_lbool::constructor_new (temp_3, temp_4 COMMA_SOURCE_FILE_AT_LINE (513))) ;
    outArgument_val = temp_5 ;
  } break ;
  default:
    break ;
  }
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_boolean_i7_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_3 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE_AT_LINE (509)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE_AT_LINE (512)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_free_5F_field_i8_ (GALGASap_ident_5F_map & ioArgument_ids,
                                                                    C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGASap_lstring var_idf ;
  //-------- @localVariableDeclarationForGeneration
  GALGASap_basic_5F_type var_val ;
  //-------- @terminalCheckInstructionForGeneration
  var_idf = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (520)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (521)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGASap_lstring var_value ;
    //-------- @terminalCheckInstructionForGeneration
    var_value = inCompiler->synthetizedAttribute_att_5F_token () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (524)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGASap_location temp_0 (var_value.readerCall_location (SOURCE_FILE_AT_LINE (525))) ;
    //--- @readerCallExpressionForGeneration
    GALGASap_string temp_1 (var_value.readerCall_string (SOURCE_FILE_AT_LINE (525))) ;
    GALGASap_string_5F_class temp_2 (GALGASap_string_5F_class::constructor_new (temp_0, temp_1 COMMA_SOURCE_FILE_AT_LINE (525))) ;
    var_val = temp_2 ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGASap_luint_36__34_ var_value ;
    //-------- @terminalCheckInstructionForGeneration
    var_value = inCompiler->synthetizedAttribute_integerNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE_AT_LINE (528)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGASap_location temp_3 (var_value.readerCall_location (SOURCE_FILE_AT_LINE (529))) ;
    //--- @readerCallExpressionForGeneration
    GALGASap_uint_36__34_ temp_4 (var_value.readerCall_uint_36__34_ (SOURCE_FILE_AT_LINE (529))) ;
    GALGASap_uint_36__34__5F_class temp_5 (GALGASap_uint_36__34__5F_class::constructor_new (temp_3, temp_4 COMMA_SOURCE_FILE_AT_LINE (529))) ;
    var_val = temp_5 ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGASap_lbool var_value ;
    //-------- @nonterminalInstructionForGeneration
    nt_boolean_ (var_value, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGASap_location temp_6 (var_idf.readerCall_location (SOURCE_FILE_AT_LINE (533))) ;
    //--- @readerCallExpressionForGeneration
    GALGASap_bool temp_7 (var_value.readerCall_bool (SOURCE_FILE_AT_LINE (533))) ;
    GALGASap_bool_5F_class temp_8 (GALGASap_bool_5F_class::constructor_new (temp_6, temp_7 COMMA_SOURCE_FILE_AT_LINE (533))) ;
    var_val = temp_8 ;
  } break ;
  default:
    break ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ids.modifierCall_put (var_idf, var_val, inCompiler COMMA_SOURCE_FILE_AT_LINE (537)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_free_5F_field_i8_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (520)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (521)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE_AT_LINE (524)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE_AT_LINE (528)) ;
  } break ;
  case 3: {
    //-------- @nonterminalInstructionForGeneration
    nt_boolean_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_file_5F_level_i9_ (GALGASap_implementation & ioArgument_imp,
                                                                               GALGASap_root_5F_obj & ioArgument_cpu,
                                                                               C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (544)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGASap_lstring var_file_5F_name ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_5 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (547)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_file_5F_in_5F_path (var_file_5F_name, inCompiler COMMA_SOURCE_FILE_AT_LINE (548)) ;
    } //-------- @routineCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (550)) ;
  } break ;
  default:
    break ;
  }
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, var_file_5F_name, ioArgument_imp, ioArgument_cpu COMMA_SOURCE_FILE_AT_LINE (552)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_file_5F_level_i9_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (544)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_5 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (547)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (550)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_cpu_5F_level_i10_ (GALGASap_os_5F_obj & ioArgument_os,
                                                                               GALGASap_com & ioArgument_com,
                                                                               GALGASap_task_5F_map & ioArgument_tasks,
                                                                               GALGASap_counter_5F_map & ioArgument_counters,
                                                                               GALGASap_alarm_5F_map & ioArgument_alarms,
                                                                               GALGASap_resource_5F_map & ioArgument_resources,
                                                                               GALGASap_event_5F_map & ioArgument_events,
                                                                               GALGASap_isr_5F_map & ioArgument_isrs,
                                                                               GALGASap_message_5F_map & ioArgument_messages,
                                                                               GALGASap_netmess_5F_map & ioArgument_net_5F_messages,
                                                                               GALGASap_scheduletable_5F_map & ioArgument_scheduletables,
                                                                               GALGASap_app_5F_map & ioArgument_applis,
                                                                               C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGASap_lstring var_file_5F_name ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_6 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (575)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_file_5F_in_5F_path (var_file_5F_name, inCompiler COMMA_SOURCE_FILE_AT_LINE (576)) ;
    } //-------- @routineCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    var_file_5F_name = inCompiler->synthetizedAttribute_a_5F_string () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (578)) ;
  } break ;
  default:
    break ;
  }
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_goil_5F_cpu_5F_level_5F_include::_performSourceFileParsing_ (inCompiler, var_file_5F_name, ioArgument_os, ioArgument_com, ioArgument_tasks, ioArgument_counters, ioArgument_alarms, ioArgument_resources, ioArgument_events, ioArgument_isrs, ioArgument_messages, ioArgument_net_5F_messages, ioArgument_scheduletables, ioArgument_applis COMMA_SOURCE_FILE_AT_LINE (580)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}

void cParser_goil_5F_syntax::rule_goil_5F_syntax_include_5F_cpu_5F_level_i10_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  //-------- @selectInstructionForGeneration
  switch (select_goil_5F_syntax_6 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) COMMA_SOURCE_FILE_AT_LINE (575)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE_AT_LINE (578)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


