//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'template_expression_parser.cpp'                    *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 17th, 2010, at 19h29'51"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "template_expression_parser.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_expression_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchAndOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchAndOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string (" & ") COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (117)) COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (117)) COMMA_SOURCE_FILE_AT_LINE (116)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchOrOperatorForTemplate'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchOrOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (139)) COMMA_SOURCE_FILE_AT_LINE (139)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (139)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (139)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchXorOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchXorOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (162)) COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (163)) COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (163)) COMMA_SOURCE_FILE_AT_LINE (162)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkNotOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkNotOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inOperandType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (178)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the 'not' operator is not defined for an ").operator_concat (constinArgument_inOperandType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (180)) COMMA_SOURCE_FILE_AT_LINE (180)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (180)) COMMA_SOURCE_FILE_AT_LINE (179)) ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'checkBitComplementOperatorForTemplate'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBitComplementOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inOperandType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (196)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the ~ operator is not defined for an ").operator_concat (constinArgument_inOperandType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (197)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'comparison_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_comparison_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                      const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (217)) COMMA_SOURCE_FILE_AT_LINE (217)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (217)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (218)) COMMA_SOURCE_FILE_AT_LINE (218)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (218)) COMMA_SOURCE_FILE_AT_LINE (217)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//           Routine 'magnitude_comparison_types_checkForTemplate'           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                                   const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (237)) COMMA_SOURCE_FILE_AT_LINE (237)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (237)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (238)) COMMA_SOURCE_FILE_AT_LINE (238)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (238)) COMMA_SOURCE_FILE_AT_LINE (237)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'left_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_left_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (258)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (258)) COMMA_SOURCE_FILE_AT_LINE (258)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (258)) COMMA_SOURCE_FILE_AT_LINE (257)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'right_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_right_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (275)) COMMA_SOURCE_FILE_AT_LINE (275)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (276)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (276)) COMMA_SOURCE_FILE_AT_LINE (276)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (276)) COMMA_SOURCE_FILE_AT_LINE (275)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'addition_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addition_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                    const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (298)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (298)) COMMA_SOURCE_FILE_AT_LINE (298)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (298)) COMMA_SOURCE_FILE_AT_LINE (297)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'concatenation_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_concatenation_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (320)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (320)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (319)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'substraction_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_substraction_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                        const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                        GALGAS_goilTemplateType & outArgument_outResultType,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("substraction between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (341)) COMMA_SOURCE_FILE_AT_LINE (341)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (342)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (342)) COMMA_SOURCE_FILE_AT_LINE (342)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (342)) COMMA_SOURCE_FILE_AT_LINE (341)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'multiply_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_multiply_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                    const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("multiplication between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (363)) COMMA_SOURCE_FILE_AT_LINE (363)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (364)) COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (364)) COMMA_SOURCE_FILE_AT_LINE (363)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'divide_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_divide_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                  const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("division between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (385)) COMMA_SOURCE_FILE_AT_LINE (385)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (386)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (386)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (386)) COMMA_SOURCE_FILE_AT_LINE (385)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'modulo_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modulo_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                  const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("modulo between ").operator_concat (constinArgument_inLeftExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (407)) COMMA_SOURCE_FILE_AT_LINE (407)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (constinArgument_inRightExpressionType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (408)) COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (408)) COMMA_SOURCE_FILE_AT_LINE (407)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'argumentListSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_argumentListSignature (const GALGAS_goilTemplateExpressionList & constinArgument_inParameterTypeList,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string (" this method call has ") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (425)).reader_string (SOURCE_FILE_AT_LINE (425)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)) ;
  //-------- @appendInstructionForGeneration
  //--- @ifExpressionForGeneration
  GALGAS_string temp_0 ;
  if (GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (426)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    temp_0 = GALGAS_string ("s") ;
  }else{
    temp_0 = GALGAS_string ("") ;
  }
  result_string.dotAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (426)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_goilTemplateExpressionList enumerator_17608 (constinArgument_inParameterTypeList, true) ;
  //--- complex foreach instruction
  const bool bool_1 = true ;
  if (enumerator_17608.hasCurrentObject () && bool_1) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (428)) ;
    while (enumerator_17608.hasCurrentObject () && bool_1) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (enumerator_17608.current_mType (HERE).reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (429)) COMMA_SOURCE_FILE_AT_LINE (429)) ;
      enumerator_17608.gotoNextObject () ;
      if (enumerator_17608.hasCurrentObject () && bool_1) {
        //-------- @appendInstructionForGeneration
        result_string.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (430)) ;
      }
    }
  }
//---
  return result_string ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_argumentListSignature [2] = {
  & kTypeDescriptor_GALGAS_goilTemplateExpressionList,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_argumentListSignature (C_Compiler * inCompiler,
                                                                      const cObjectArray & inEffectiveParameterArray,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  const GALGAS_goilTemplateExpressionList operand0 = GALGAS_goilTemplateExpressionList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_argumentListSignature (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_argumentListSignature ("argumentListSignature",
                                                                       functionWithGenericHeader_argumentListSignature,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       1,
                                                                       functionArgs_argumentListSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'checkInvocationHasNoArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasNoArgument (const GALGAS_goilTemplateType constinArgument_inType,
                                           const GALGAS_lstring constinArgument_inMethodName,
                                           const GALGAS_goilTemplateExpressionList constinArgument_inParameterTypeList,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (445)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_0 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("calling '").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (446)) COMMA_SOURCE_FILE_AT_LINE (446)).operator_concat (GALGAS_string ("' on a ") COMMA_SOURCE_FILE_AT_LINE (446)).operator_concat (constinArgument_inType.reader_messageGoilTemplateType (SOURCE_FILE_AT_LINE (447)) COMMA_SOURCE_FILE_AT_LINE (447)).operator_concat (GALGAS_string (" type requires no argument; ") COMMA_SOURCE_FILE_AT_LINE (447)).operator_concat (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (448)) COMMA_SOURCE_FILE_AT_LINE (448)) COMMA_SOURCE_FILE_AT_LINE (446)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'templateMethodInvocation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateMethodInvocation (const GALGAS_goilTemplateType constinArgument_inType,
                                       const GALGAS_goilTemplateValue constinArgument_inValue,
                                       const GALGAS_lstring constinArgument_inMethodName,
                                       const GALGAS_goilTemplateExpressionList constinArgument_inParameterTypeList,
                                       GALGAS_goilTemplateType & outArgument_outResultType,
                                       GALGAS_goilTemplateValue & outArgument_outResultValue,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  outArgument_outResultValue.drop () ; // Release 'out' argument
  //------- @switchInstructionForGeneration
  if (constinArgument_inType.isValid ()) {
    switch (constinArgument_inType.enumValue ()) {
    case GALGAS_goilTemplateType::kNotBuilt:
      break ;
    case GALGAS_goilTemplateType::kEnum_boolType: {
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (468)).objectCompare (GALGAS_string ("trueOrFalse"))).isValidAndTrue ()) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (469)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (470)) ;
        //-------- @assignmentInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_0 ;
        if (GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (472)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).isValidAndTrue ()) {
          temp_0 = GALGAS_string ("true") ;
        }else{
          temp_0 = GALGAS_string ("false") ;
        }
        outArgument_outResultValue = function_valueWithString (temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (471)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (474)).objectCompare (GALGAS_string ("yesOrNo"))).isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (475)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (476)) ;
          //-------- @assignmentInstructionForGeneration
          //--- @ifExpressionForGeneration
          GALGAS_string temp_1 ;
          if (GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (478)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).isValidAndTrue ()) {
            temp_1 = GALGAS_string ("yes") ;
          }else{
            temp_1 = GALGAS_string ("no") ;
          }
          outArgument_outResultValue = function_valueWithString (temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (477)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (480)).objectCompare (GALGAS_string ("unsigned"))).isValidAndTrue ()) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (481)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (482)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = constinArgument_inValue ;
          }else{
            //-------- @errorInstructionForGeneration
            GALGAS_location location_2 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_2, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (485)) ;
            outArgument_outResultValue.drop () ; // Release error dropped variable
            outArgument_outResultType.drop () ; // Release error dropped variable
          }
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_unsignedType: {
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (488)).objectCompare (GALGAS_string ("string"))).isValidAndTrue ()) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (489)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (490)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (491)).reader_string (SOURCE_FILE_AT_LINE (491)), inCompiler COMMA_SOURCE_FILE_AT_LINE (491)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (492)).objectCompare (GALGAS_string ("hexString"))).isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (493)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (494)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (495)).reader_hexString (SOURCE_FILE_AT_LINE (495)), inCompiler COMMA_SOURCE_FILE_AT_LINE (495)) ;
        }else{
          //-------- @errorInstructionForGeneration
          GALGAS_location location_3 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (497)) ;
          outArgument_outResultValue.drop () ; // Release error dropped variable
          outArgument_outResultType.drop () ; // Release error dropped variable
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_stringType: {
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (500)).objectCompare (GALGAS_string ("HTMLRepresentation"))).isValidAndTrue ()) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (501)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (502)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (503)).reader_HTMLRepresentation (SOURCE_FILE_AT_LINE (503)), inCompiler COMMA_SOURCE_FILE_AT_LINE (503)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (504)).objectCompare (GALGAS_string ("identifierRepresentation"))).isValidAndTrue ()) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (505)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (506)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (507)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (507)), inCompiler COMMA_SOURCE_FILE_AT_LINE (507)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (508)).objectCompare (GALGAS_string ("lowercaseString"))).isValidAndTrue ()) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (509)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (510)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (511)).reader_lowercaseString (SOURCE_FILE_AT_LINE (511)), inCompiler COMMA_SOURCE_FILE_AT_LINE (511)) ;
          }else{
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (512)).objectCompare (GALGAS_string ("length"))).isValidAndTrue ()) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (513)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (514)) ;
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (515)).reader_length (SOURCE_FILE_AT_LINE (515)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (515)), inCompiler COMMA_SOURCE_FILE_AT_LINE (515)) ;
            }else{
              //-------- @ifInstructionForGeneration
              if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (516)).objectCompare (GALGAS_string ("stringByCapitalizingFirstCharacter"))).isValidAndTrue ()) {
                { //-------- @routineCallInstructionForGeneration
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (517)) ;
                } //-------- @routineCallInstructionForGeneration
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (518)) ;
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (519)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (519)), inCompiler COMMA_SOURCE_FILE_AT_LINE (519)) ;
              }else{
                //-------- @ifInstructionForGeneration
                if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (520)).objectCompare (GALGAS_string ("uppercaseString"))).isValidAndTrue ()) {
                  { //-------- @routineCallInstructionForGeneration
                  routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (521)) ;
                  } //-------- @routineCallInstructionForGeneration
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (522)) ;
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (523)).reader_uppercaseString (SOURCE_FILE_AT_LINE (523)), inCompiler COMMA_SOURCE_FILE_AT_LINE (523)) ;
                }else{
                  //-------- @errorInstructionForGeneration
                  GALGAS_location location_4 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_4, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (525)) ;
                  outArgument_outResultValue.drop () ; // Release error dropped variable
                  outArgument_outResultType.drop () ; // Release error dropped variable
                }
              }
            }
          }
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_listType: {
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (528)).objectCompare (GALGAS_string ("length"))).isValidAndTrue ()) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (529)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (530)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (531)).reader_length (SOURCE_FILE_AT_LINE (531)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (531)), inCompiler COMMA_SOURCE_FILE_AT_LINE (531)) ;
      }else{
        //-------- @errorInstructionForGeneration
        GALGAS_location location_5 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_5, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (533)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_structType: {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_6 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (536)) ;
      outArgument_outResultValue.drop () ; // Release error dropped variable
      outArgument_outResultType.drop () ; // Release error dropped variable
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'typeError'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_typeError (const GALGAS_lstring constinArgument_inFunctionName,
                        const GALGAS_type constinArgument_inActualType,
                        const GALGAS_string constinArgument_inExpectedTypeName,
                        const GALGAS_uint constinArgument_inParameterIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_m = GALGAS_string ("the function requires the parameter ").operator_concat (constinArgument_inParameterIndex.reader_string (SOURCE_FILE_AT_LINE (1255)) COMMA_SOURCE_FILE_AT_LINE (1255)).operator_concat (GALGAS_string (" to be ") COMMA_SOURCE_FILE_AT_LINE (1256)).operator_concat (constinArgument_inExpectedTypeName COMMA_SOURCE_FILE_AT_LINE (1256)).operator_concat (GALGAS_string ("; its type is ") COMMA_SOURCE_FILE_AT_LINE (1256)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    var_m.dotAssign_operation (GALGAS_string ("boolean") COMMA_SOURCE_FILE_AT_LINE (1259)) ;
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).isValidAndTrue ()) {
      //-------- @appendInstructionForGeneration
      var_m.dotAssign_operation (GALGAS_string ("unsigned") COMMA_SOURCE_FILE_AT_LINE (1261)) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).isValidAndTrue ()) {
        //-------- @appendInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("string") COMMA_SOURCE_FILE_AT_LINE (1263)) ;
      }else{
        //-------- @appendInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("a not allowed type") COMMA_SOURCE_FILE_AT_LINE (1265)) ;
      }
    }
  }
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (constinArgument_inFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, var_m COMMA_SOURCE_FILE_AT_LINE (1267)) ;
}


void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                     const GALGAS_string constinArgument_inPath,
                                                                                                     const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                     const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                     GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                     GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                     C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (564)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (577)).operator_or (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (577)) COMMA_SOURCE_FILE_AT_LINE (577)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchOrOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (578)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (584)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (597)).operator_xor (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (597)) COMMA_SOURCE_FILE_AT_LINE (597)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchXorOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (598)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (564)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (584)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                           const GALGAS_string constinArgument_inPath,
                                                                                                           const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                           const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                           GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                           GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                           C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (630)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (643)).operator_and (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (643)) COMMA_SOURCE_FILE_AT_LINE (643)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchAndOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (644)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (630)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                             const GALGAS_string constinArgument_inPath,
                                                                                                             const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                             const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                             GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                             GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                             C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (676)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (688)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (692)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (692)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (694)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (694)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (696)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (696)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists and struct may not be compared") COMMA_SOURCE_FILE_AT_LINE (698)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (700)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_0 ;
    if (var_result.isValidAndTrue ()) {
      temp_0 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_0 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_0 ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (703)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (716)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (720)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (720)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (722)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (722)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (724)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (724)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists and struct may not be compared") COMMA_SOURCE_FILE_AT_LINE (726)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (728)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_1 ;
    if (var_result.isValidAndTrue ()) {
      temp_1 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_1 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_1 ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (731)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (744)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (748)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (748)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (750)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (750)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (754)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_2 ;
    if (var_result.isValidAndTrue ()) {
      temp_2 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_2 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_2 ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (757)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (770)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (774)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (774)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (776)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (776)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (780)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_3 ;
    if (var_result.isValidAndTrue ()) {
      temp_3 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_3 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_3 ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (783)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (796)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (800)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (800)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (802)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (802)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (806)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_4 ;
    if (var_result.isValidAndTrue ()) {
      temp_4 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_4 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_4 ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (809)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (822)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (826)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (826)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (828)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (828)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (832)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_5 ;
    if (var_result.isValidAndTrue ()) {
      temp_5 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else{
      temp_5 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_5 ;
  } break ;
  default:
    break ;
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (676)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (703)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (731)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (757)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (783)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (809)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                               const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                               GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                               GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (861)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_left_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (874)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (875)).left_shift_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (875)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (875)) COMMA_SOURCE_FILE_AT_LINE (875)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (877)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_right_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (890)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (891)).right_shift_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (891)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (891)) COMMA_SOURCE_FILE_AT_LINE (891)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (893)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (906)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (907)).add_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (907)), inCompiler COMMA_SOURCE_FILE_AT_LINE (907)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (909)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_concatenation_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (922)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mStringValue = var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (923)).operator_concat (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (923)) COMMA_SOURCE_FILE_AT_LINE (923)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (925)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (938)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (939)).substract_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (939)), inCompiler COMMA_SOURCE_FILE_AT_LINE (939)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (861)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (877)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (893)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (909)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (925)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_ (const GALGAS_string constinArgument_inPrefix,
                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                               const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                               GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                               GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (967)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_multiply_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (980)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (981)) .multiply_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (981)), inCompiler COMMA_SOURCE_FILE_AT_LINE (981)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (983)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_divide_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (996)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (997)).divide_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (997)), inCompiler COMMA_SOURCE_FILE_AT_LINE (997)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (999)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_modulo_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1012)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1013)).modulo_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1013)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1013)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (967)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (983)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (999)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1031)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1040)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1031)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1040)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1057)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_expression ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL).substract_operation (var_expression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1068)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1068)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1068)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkNotOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1069)) ;
  } //-------- @routineCallInstructionForGeneration
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1057)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1086)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_value ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_value, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (var_value.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1097)).operator_tilde (SOURCE_FILE_AT_LINE (1097)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1097)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBitComplementOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) ;
  } //-------- @routineCallInstructionForGeneration
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1086)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1115)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1116)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1117)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1115)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1134)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1135)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1136)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1134)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1154)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (var_literalInt.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (1155)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1155)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1156)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1154)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_literalString = inCompiler->synthetizedAttribute_a_5F_string () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1173)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithString (var_literalString.reader_string (SOURCE_FILE_AT_LINE (1174)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1174)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (1175)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1173)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1193)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_expressionValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_expressionType ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expressionValue, var_expressionType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_templateMethodName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1206)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_goilTemplateExpressionList var_expressionList = GALGAS_goilTemplateExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1208)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      var_expressionList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1223)) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1225)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1229)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateMethodInvocation (var_expressionType, var_expressionValue, var_templateMethodName, var_expressionList, outArgument_outResultType, outArgument_outValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1231)) ;
  } //-------- @routineCallInstructionForGeneration
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1193)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1206)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1225)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1229)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_functionOrVariableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1281)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
    //-------- @methodCallInstructionForGeneration
    constinArgument_inVariableMap.method_searchKey (var_functionOrVariableName, outArgument_outResultType, outArgument_outValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1283)) ;
    //-------- END @methodCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1285)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_varType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_varValue ;
    //-------- @methodCallInstructionForGeneration
    constinArgument_inVariableMap.method_searchKey (var_functionOrVariableName, var_varType, var_varValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1288)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_varType.objectCompare (GALGAS_goilTemplateType::constructor_structType (SOURCE_FILE_AT_LINE (1289)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_0 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_0, GALGAS_string ("'").operator_concat (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1290)) COMMA_SOURCE_FILE_AT_LINE (1290)).operator_concat (GALGAS_string ("' is not a struct") COMMA_SOURCE_FILE_AT_LINE (1290)) COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_ (var_varValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1292)), outArgument_outValue, outArgument_outResultType, inCompiler) ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_function var_f ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_function::constructor_isFunctionDefined (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1296)) COMMA_SOURCE_FILE_AT_LINE (1296)).operator_not (SOURCE_FILE_AT_LINE (1296)).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("there is no '").operator_concat (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1297)) COMMA_SOURCE_FILE_AT_LINE (1297)).operator_concat (GALGAS_string ("' function defined in GOIL template language") COMMA_SOURCE_FILE_AT_LINE (1297)) COMMA_SOURCE_FILE_AT_LINE (1297)) ;
      var_f.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      var_f = GALGAS_function::constructor_functionWithName (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1299)) COMMA_SOURCE_FILE_AT_LINE (1299)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_goilTemplateExpressionList var_actualArgumentList = GALGAS_goilTemplateExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1302)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1303)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      var_actualArgumentList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1315)) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1317)) ;
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1319)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_objectlist var_actualArgumentObjectList = GALGAS_objectlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1321)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_typelist var_formalParameterList = var_f.reader_formalParameterTypeList (SOURCE_FILE_AT_LINE (1322)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1323)).objectCompare (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1323)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_3 ;
      if (GALGAS_bool (kIsStrictSup, var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1326)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_3 = GALGAS_string ("s") ;
      }else{
        temp_3 = GALGAS_string ("") ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_4 ;
      if (GALGAS_bool (kIsStrictSup, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1329)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_4 = GALGAS_string ("s") ;
      }else{
        temp_4 = GALGAS_string ("") ;
      }
      GALGAS_location location_5 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("this function is invoked with ").operator_concat (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1325)).reader_string (SOURCE_FILE_AT_LINE (1325)) COMMA_SOURCE_FILE_AT_LINE (1325)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1326)).operator_concat (temp_3 COMMA_SOURCE_FILE_AT_LINE (1326)).operator_concat (GALGAS_string (", but requires ") COMMA_SOURCE_FILE_AT_LINE (1327)).operator_concat (var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1328)).reader_string (SOURCE_FILE_AT_LINE (1328)) COMMA_SOURCE_FILE_AT_LINE (1328)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1329)).operator_concat (temp_4 COMMA_SOURCE_FILE_AT_LINE (1329)) COMMA_SOURCE_FILE_AT_LINE (1324)) ;
      outArgument_outValue.drop () ; // Release error dropped variable
      outArgument_outResultType.drop () ; // Release error dropped variable
    }else{
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 1U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_typelist enumerator_48813 (var_formalParameterList, true) ;
      cEnumerator_goilTemplateExpressionList enumerator_48852 (var_actualArgumentList, true) ;
      //--- simple foreach instruction
      while (enumerator_48813.hasCurrentObject () && enumerator_48852.hasCurrentObject ()) {
        //------- @switchInstructionForGeneration
        if (enumerator_48852.current_mType (HERE).isValid ()) {
          switch (enumerator_48852.current_mType (HERE).enumValue ()) {
          case GALGAS_goilTemplateType::kNotBuilt:
            break ;
          case GALGAS_goilTemplateType::kEnum_boolType: {
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsNotEqual, enumerator_48813.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).isValidAndTrue ()) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48813.current_mValue (HERE), GALGAS_string ("boolean"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1337)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @addAssignInstructionForGeneration
            //--- @ifExpressionForGeneration
            GALGAS_bool temp_6 ;
            if (GALGAS_bool (kIsEqual, enumerator_48852.current_mValue (HERE).reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1339)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).isValidAndTrue ()) {
              temp_6 = GALGAS_bool (false) ;
            }else{
              temp_6 = GALGAS_bool (true) ;
            }
            var_actualArgumentObjectList.addAssign_operation (temp_6.reader_object (SOURCE_FILE_AT_LINE (1339)) COMMA_SOURCE_FILE_AT_LINE (1339)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_unsignedType: {
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsNotEqual, enumerator_48813.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).isValidAndTrue ()) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48813.current_mValue (HERE), GALGAS_string ("unsigned"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1342)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @addAssignInstructionForGeneration
            var_actualArgumentObjectList.addAssign_operation (enumerator_48852.current_mValue (HERE).reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1344)).reader_object (SOURCE_FILE_AT_LINE (1344)) COMMA_SOURCE_FILE_AT_LINE (1344)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_stringType: {
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsNotEqual, enumerator_48813.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).isValidAndTrue ()) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48813.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1347)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @addAssignInstructionForGeneration
            var_actualArgumentObjectList.addAssign_operation (enumerator_48852.current_mValue (HERE).reader_mStringValue (SOURCE_FILE_AT_LINE (1349)).reader_object (SOURCE_FILE_AT_LINE (1349)) COMMA_SOURCE_FILE_AT_LINE (1349)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
            { //-------- @routineCallInstructionForGeneration
            routine_typeError (var_functionOrVariableName, enumerator_48813.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1351)) ;
            } //-------- @routineCallInstructionForGeneration
            } break ;
          }
        }
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1353)) ;
        enumerator_48813.gotoNextObject () ;
        enumerator_48852.gotoNextObject () ;
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1355)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1356)) ;
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (1357)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_object var_result = var_f.reader_invoke (var_actualArgumentObjectList, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1358)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1358)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1359)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1360)) ;
          //-------- @assignmentInstructionForGeneration
          //--- @extractObjectInExpressionForGeneration
          outArgument_outValue.mAttribute_mUnsigned_36__34_Value = GALGAS_uint_36__34_::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1361)) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1362)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1363)) ;
            //-------- @assignmentInstructionForGeneration
            //--- @extractObjectInExpressionForGeneration
            outArgument_outValue.mAttribute_mUnsigned_36__34_Value = GALGAS_bool::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1364)) COMMA_SOURCE_FILE_AT_LINE (1364)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (1364)) ;
          }else{
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1365)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).isValidAndTrue ()) {
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (1366)) ;
              //-------- @assignmentInstructionForGeneration
              //--- @extractObjectInExpressionForGeneration
              outArgument_outValue.mAttribute_mStringValue = GALGAS_string::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1367)) COMMA_SOURCE_FILE_AT_LINE (1367)) ;
            }else{
              //-------- @errorInstructionForGeneration
              GALGAS_location location_10 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_10, GALGAS_string ("this function does not return an unsigned, boolean or string value") COMMA_SOURCE_FILE_AT_LINE (1369)) ;
            }
          }
        }
      }
    }
  } break ;
  default:
    break ;
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1281)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1285)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1303)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1317)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1319)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1388)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_expression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_resultType ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1391)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1400)) ;
    //-------- @ifInstructionForGeneration
    if (constinArgument_inVariableMap.reader_hasKey (var_variableName.reader_string (SOURCE_FILE_AT_LINE (1401)) COMMA_SOURCE_FILE_AT_LINE (1401)).isValidAndTrue ()) {
      //-------- @methodCallInstructionForGeneration
      constinArgument_inVariableMap.method_searchKey (var_variableName, var_resultType, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1402)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = var_expression ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = var_resultType ;
  } break ;
  case 2: {
    //-------- @ifInstructionForGeneration
    if (constinArgument_inVariableMap.reader_hasKey (var_variableName.reader_string (SOURCE_FILE_AT_LINE (1407)) COMMA_SOURCE_FILE_AT_LINE (1407)).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1408)) ;
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1410)) ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1412)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1388)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1391)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1400)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1427)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1428)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1430)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1431)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1433)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1427)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1430)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = GALGAS_goilTemplateValue::constructor_new (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), GALGAS_string (""), GALGAS_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1447)), GALGAS_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1447)) COMMA_SOURCE_FILE_AT_LINE (1447)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_listType (SOURCE_FILE_AT_LINE (1448)) ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_struct_5F_member_i17_ (const GALGAS_goilTemplateFieldMap constinArgument_inValue,
                                                                                                            GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                            GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                            C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_memberName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1458)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_memberType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint_36__34_ var_memberInt ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_memberString ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateFieldMapList var_memberList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateFieldMap var_memberStruct ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inValue.method_searchKey (var_memberName, var_memberType, var_memberInt, var_memberString, var_memberList, var_memberStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (1464)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_11 (inCompiler)) {
  case 1: {
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_memberType.objectCompare (GALGAS_goilTemplateType::constructor_structType (SOURCE_FILE_AT_LINE (1466)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_0 (var_memberName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_0, GALGAS_string ("'").operator_concat (var_memberName.reader_string (SOURCE_FILE_AT_LINE (1467)) COMMA_SOURCE_FILE_AT_LINE (1467)).operator_concat (GALGAS_string ("' is a not a struct") COMMA_SOURCE_FILE_AT_LINE (1467)) COMMA_SOURCE_FILE_AT_LINE (1467)) ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1469)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_ (var_memberStruct, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  } break ;
  case 2: {
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = GALGAS_goilTemplateValue::constructor_new (var_memberInt, var_memberString, var_memberList, var_memberStruct COMMA_SOURCE_FILE_AT_LINE (1472)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = var_memberType ;
  } break ;
  default:
    break ;
  }
}

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_struct_5F_member_i17_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1458)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_11 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1469)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_parse (inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


