//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'template_expression_parser.cpp'                    *
//                    Generated by version version 2.2.6                     *
//                     october 12th, 2011, at 14h50'28"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "template_expression_parser.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_expression_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchAndOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchAndOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string (" & ") COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchOrOperatorForTemplate'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchOrOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) COMMA_SOURCE_FILE_AT_LINE (132)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (132)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (132)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchXorOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchXorOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (155)) COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (156)) COMMA_SOURCE_FILE_AT_LINE (156)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (156)) COMMA_SOURCE_FILE_AT_LINE (155)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkNotOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkNotOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inOperandType,
                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (171)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the 'not' operator is not defined for an ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE_AT_LINE (173)) COMMA_SOURCE_FILE_AT_LINE (173)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (173)) COMMA_SOURCE_FILE_AT_LINE (172)) ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'checkBitComplementOperatorForTemplate'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBitComplementOperatorForTemplate (const GALGAS_goilTemplateType constinArgument_inOperandType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (189)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the ~ operator is not defined for an ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE_AT_LINE (191)) COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (191)) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'comparison_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_comparison_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                      const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (210)) COMMA_SOURCE_FILE_AT_LINE (210)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (210)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (210)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//           Routine 'magnitude_comparison_types_checkForTemplate'           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                                   const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (230)) COMMA_SOURCE_FILE_AT_LINE (230)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (230)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (231)) COMMA_SOURCE_FILE_AT_LINE (231)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (231)) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'left_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_left_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (250)) COMMA_SOURCE_FILE_AT_LINE (250)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (251)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (251)) COMMA_SOURCE_FILE_AT_LINE (251)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (251)) COMMA_SOURCE_FILE_AT_LINE (250)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'right_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_right_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                          const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                          GALGAS_goilTemplateType & outArgument_outResultType,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (268)) COMMA_SOURCE_FILE_AT_LINE (268)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (269)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (269)) COMMA_SOURCE_FILE_AT_LINE (269)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (269)) COMMA_SOURCE_FILE_AT_LINE (268)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'addition_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addition_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                    const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (290)) COMMA_SOURCE_FILE_AT_LINE (290)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (291)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) COMMA_SOURCE_FILE_AT_LINE (291)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (291)) COMMA_SOURCE_FILE_AT_LINE (290)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'concatenation_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_concatenation_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                         const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                         GALGAS_goilTemplateType & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_stringType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (312)) COMMA_SOURCE_FILE_AT_LINE (312)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (313)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (313)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (313)) COMMA_SOURCE_FILE_AT_LINE (312)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'substraction_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_substraction_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                        const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                        GALGAS_goilTemplateType & outArgument_outResultType,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("substraction between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (334)) COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (334)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'multiply_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_multiply_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                    const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                    GALGAS_goilTemplateType & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("multiplication between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (356)) COMMA_SOURCE_FILE_AT_LINE (356)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (357)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (357)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (356)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'divide_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_divide_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                  const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("division between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (378)) COMMA_SOURCE_FILE_AT_LINE (378)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (379)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (379)) COMMA_SOURCE_FILE_AT_LINE (379)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (379)) COMMA_SOURCE_FILE_AT_LINE (378)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'modulo_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modulo_5F_types_5F_checkForTemplate (const GALGAS_goilTemplateType constinArgument_inLeftExpressionType,
                                                  const GALGAS_goilTemplateType constinArgument_inRightExpressionType,
                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_goilTemplateType::kEnum_unsignedType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("modulo between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (400)) COMMA_SOURCE_FILE_AT_LINE (400)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (401)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (401)) COMMA_SOURCE_FILE_AT_LINE (401)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (401)) COMMA_SOURCE_FILE_AT_LINE (400)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'argumentListSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_argumentListSignature (const GALGAS_goilTemplateExpressionList & constinArgument_inParameterTypeList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string (" this method call has ") ;
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (418)).reader_string (SOURCE_FILE_AT_LINE (418)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (418)) COMMA_SOURCE_FILE_AT_LINE (418)) ;
  //-------- @concatInstructionForGeneration
  //--- @ifExpressionForGeneration
  GALGAS_string temp_0 ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (419)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    temp_0 = GALGAS_string ("s") ;
  }else if (kBoolFalse == test_1) {
    temp_0 = GALGAS_string::makeEmptyString () ;
  }
  result_outResult.dotAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (419)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_goilTemplateExpressionList enumerator_17524 (constinArgument_inParameterTypeList, kEnumeration_up) ;
  //--- complex foreach instruction
  const bool bool_2 = true ;
  if (enumerator_17524.hasCurrentObject () && bool_2) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (421)) ;
    while (enumerator_17524.hasCurrentObject () && bool_2) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (categoryReader_messageGoilTemplateType (enumerator_17524.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (422)) COMMA_SOURCE_FILE_AT_LINE (422)) ;
      enumerator_17524.gotoNextObject () ;
      if (enumerator_17524.hasCurrentObject () && bool_2) {
        //-------- @concatInstructionForGeneration
        result_outResult.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (423)) ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_argumentListSignature [2] = {
  & kTypeDescriptor_GALGAS_goilTemplateExpressionList,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_argumentListSignature (C_Compiler * inCompiler,
                                                                      const cObjectArray & inEffectiveParameterArray,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  const GALGAS_goilTemplateExpressionList operand0 = GALGAS_goilTemplateExpressionList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_argumentListSignature (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_argumentListSignature ("argumentListSignature",
                                                                       functionWithGenericHeader_argumentListSignature,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       1,
                                                                       functionArgs_argumentListSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'checkInvocationHasNoArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasNoArgument (const GALGAS_goilTemplateType constinArgument_inType,
                                           const GALGAS_lstring constinArgument_inMethodName,
                                           const GALGAS_goilTemplateExpressionList constinArgument_inParameterTypeList,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (438)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling '").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (439)) COMMA_SOURCE_FILE_AT_LINE (439)).operator_concat (GALGAS_string ("' on a ") COMMA_SOURCE_FILE_AT_LINE (439)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (440)) COMMA_SOURCE_FILE_AT_LINE (440)).operator_concat (GALGAS_string (" type requires no argument; ") COMMA_SOURCE_FILE_AT_LINE (440)).operator_concat (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (439)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'templateMethodInvocation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateMethodInvocation (const GALGAS_goilTemplateType constinArgument_inType,
                                       const GALGAS_goilTemplateValue constinArgument_inValue,
                                       const GALGAS_lstring constinArgument_inMethodName,
                                       const GALGAS_goilTemplateExpressionList constinArgument_inParameterTypeList,
                                       GALGAS_goilTemplateType & outArgument_outResultType,
                                       GALGAS_goilTemplateValue & outArgument_outResultValue,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  outArgument_outResultValue.drop () ; // Release 'out' argument
  //------- @switchInstructionForGeneration
  if (constinArgument_inType.isValid ()) {
    switch (constinArgument_inType.enumValue ()) {
    case GALGAS_goilTemplateType::kNotBuilt:
      break ;
    case GALGAS_goilTemplateType::kEnum_boolType: {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (461)).objectCompare (GALGAS_string ("trueOrFalse"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (462)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (463)) ;
        //-------- @assignmentInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_1 ;
        const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (465)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).boolEnum () ;
        if (kBoolTrue == test_2) {
          temp_1 = GALGAS_string ("true") ;
        }else if (kBoolFalse == test_2) {
          temp_1 = GALGAS_string ("false") ;
        }
        outArgument_outResultValue = function_valueWithString (temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (464)) ;
      }else if (kBoolFalse == test_0) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (467)).objectCompare (GALGAS_string ("yesOrNo"))).boolEnum () ;
        if (kBoolTrue == test_3) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (468)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (469)) ;
          //-------- @assignmentInstructionForGeneration
          //--- @ifExpressionForGeneration
          GALGAS_string temp_4 ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (471)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).boolEnum () ;
          if (kBoolTrue == test_5) {
            temp_4 = GALGAS_string ("yes") ;
          }else if (kBoolFalse == test_5) {
            temp_4 = GALGAS_string ("no") ;
          }
          outArgument_outResultValue = function_valueWithString (temp_4, inCompiler COMMA_SOURCE_FILE_AT_LINE (470)) ;
        }else if (kBoolFalse == test_3) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (473)).objectCompare (GALGAS_string ("unsigned"))).boolEnum () ;
          if (kBoolTrue == test_6) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (474)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (475)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = constinArgument_inValue ;
          }else if (kBoolFalse == test_6) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_7 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (478)) ;
            outArgument_outResultValue.drop () ; // Release error dropped variable
            outArgument_outResultType.drop () ; // Release error dropped variable
          }
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_unsignedType: {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (481)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
      if (kBoolTrue == test_8) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (482)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (483)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (484)).reader_string (SOURCE_FILE_AT_LINE (484)), inCompiler COMMA_SOURCE_FILE_AT_LINE (484)) ;
      }else if (kBoolFalse == test_8) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (485)).objectCompare (GALGAS_string ("hexString"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (486)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (487)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (488)).reader_hexString (SOURCE_FILE_AT_LINE (488)), inCompiler COMMA_SOURCE_FILE_AT_LINE (488)) ;
        }else if (kBoolFalse == test_9) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_10 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (490)) ;
          outArgument_outResultValue.drop () ; // Release error dropped variable
          outArgument_outResultType.drop () ; // Release error dropped variable
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_stringType: {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (493)).objectCompare (GALGAS_string ("HTMLRepresentation"))).boolEnum () ;
      if (kBoolTrue == test_11) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (494)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (495)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (496)).reader_HTMLRepresentation (SOURCE_FILE_AT_LINE (496)), inCompiler COMMA_SOURCE_FILE_AT_LINE (496)) ;
      }else if (kBoolFalse == test_11) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (497)).objectCompare (GALGAS_string ("identifierRepresentation"))).boolEnum () ;
        if (kBoolTrue == test_12) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (498)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (499)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (500)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (500)), inCompiler COMMA_SOURCE_FILE_AT_LINE (500)) ;
        }else if (kBoolFalse == test_12) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (501)).objectCompare (GALGAS_string ("lowercaseString"))).boolEnum () ;
          if (kBoolTrue == test_13) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (502)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (503)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (504)).reader_lowercaseString (SOURCE_FILE_AT_LINE (504)), inCompiler COMMA_SOURCE_FILE_AT_LINE (504)) ;
          }else if (kBoolFalse == test_13) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (505)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
            if (kBoolTrue == test_14) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (506)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (507)) ;
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (508)).reader_length (SOURCE_FILE_AT_LINE (508)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (508)), inCompiler COMMA_SOURCE_FILE_AT_LINE (508)) ;
            }else if (kBoolFalse == test_14) {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (509)).objectCompare (GALGAS_string ("stringByCapitalizingFirstCharacter"))).boolEnum () ;
              if (kBoolTrue == test_15) {
                { //-------- @routineCallInstructionForGeneration
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
                } //-------- @routineCallInstructionForGeneration
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (511)) ;
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (512)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (512)), inCompiler COMMA_SOURCE_FILE_AT_LINE (512)) ;
              }else if (kBoolFalse == test_15) {
                //-------- @ifInstructionForGeneration
                const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (513)).objectCompare (GALGAS_string ("uppercaseString"))).boolEnum () ;
                if (kBoolTrue == test_16) {
                  { //-------- @routineCallInstructionForGeneration
                  routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (514)) ;
                  } //-------- @routineCallInstructionForGeneration
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (515)) ;
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (516)).reader_uppercaseString (SOURCE_FILE_AT_LINE (516)), inCompiler COMMA_SOURCE_FILE_AT_LINE (516)) ;
                }else if (kBoolFalse == test_16) {
                  //-------- @errorInstructionForGeneration
                  GALGAS_location location_17 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_17, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (518)) ;
                  outArgument_outResultValue.drop () ; // Release error dropped variable
                  outArgument_outResultType.drop () ; // Release error dropped variable
                }
              }
            }
          }
        }
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_listType: {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (521)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
      if (kBoolTrue == test_18) {
        { //-------- @routineCallInstructionForGeneration
        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (522)) ;
        } //-------- @routineCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (523)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (524)).reader_length (SOURCE_FILE_AT_LINE (524)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (524)), inCompiler COMMA_SOURCE_FILE_AT_LINE (524)) ;
      }else if (kBoolFalse == test_18) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_19 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_19, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (526)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
      }
      } break ;
    case GALGAS_goilTemplateType::kEnum_structType: {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_20 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_20, GALGAS_string ("this template method is not defined") COMMA_SOURCE_FILE_AT_LINE (529)) ;
      outArgument_outResultValue.drop () ; // Release error dropped variable
      outArgument_outResultType.drop () ; // Release error dropped variable
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'typeError'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_typeError (const GALGAS_lstring constinArgument_inFunctionName,
                        const GALGAS_type constinArgument_inActualType,
                        const GALGAS_string constinArgument_inExpectedTypeName,
                        const GALGAS_uint constinArgument_inParameterIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_m = GALGAS_string ("the function requires the parameter ").operator_concat (constinArgument_inParameterIndex.reader_string (SOURCE_FILE_AT_LINE (1248)) COMMA_SOURCE_FILE_AT_LINE (1248)).operator_concat (GALGAS_string (" to be ") COMMA_SOURCE_FILE_AT_LINE (1249)).operator_concat (constinArgument_inExpectedTypeName COMMA_SOURCE_FILE_AT_LINE (1249)).operator_concat (GALGAS_string ("; its type is ") COMMA_SOURCE_FILE_AT_LINE (1249)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    var_m.dotAssign_operation (GALGAS_string ("boolean") COMMA_SOURCE_FILE_AT_LINE (1252)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @concatInstructionForGeneration
      var_m.dotAssign_operation (GALGAS_string ("unsigned") COMMA_SOURCE_FILE_AT_LINE (1254)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @concatInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("string") COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @concatInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("a not allowed type") COMMA_SOURCE_FILE_AT_LINE (1258)) ;
      }
    }
  }
  //-------- @errorInstructionForGeneration
  GALGAS_location location_3 (constinArgument_inFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_3, var_m COMMA_SOURCE_FILE_AT_LINE (1260)) ;
}


//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                     const GALGAS_string constinArgument_inPath,
                                                                                                     const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                     const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                     GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                     GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                     C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (557)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (570)).operator_or (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (570)) COMMA_SOURCE_FILE_AT_LINE (570)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchOrOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (571)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (577)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (590)).operator_xor (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (590)) COMMA_SOURCE_FILE_AT_LINE (590)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchXorOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (591)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (557)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (577)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                           const GALGAS_string constinArgument_inPath,
                                                                                                           const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                           const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                           GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                           GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                           C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (623)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (636)).operator_and (var_rightOperand.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (636)) COMMA_SOURCE_FILE_AT_LINE (636)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchAndOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (637)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (623)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                             const GALGAS_string constinArgument_inPath,
                                                                                                             const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                             const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                             GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                             GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                             C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (669)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (681)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (685)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (685)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (687)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (687)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (689)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (689)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists and struct may not be compared") COMMA_SOURCE_FILE_AT_LINE (691)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (693)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_0 ;
    const enumGalgasBool test_1 = var_result.boolEnum () ;
    if (kBoolTrue == test_1) {
      temp_0 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_1) {
      temp_0 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_0 ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (696)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (709)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (713)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (713)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (715)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (715)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (717)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (717)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists and struct may not be compared") COMMA_SOURCE_FILE_AT_LINE (719)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (721)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_2 ;
    const enumGalgasBool test_3 = var_result.boolEnum () ;
    if (kBoolTrue == test_3) {
      temp_2 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_3) {
      temp_2 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_2 ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (724)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (737)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (741)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (741)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (743)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (743)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (747)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_4 ;
    const enumGalgasBool test_5 = var_result.boolEnum () ;
    if (kBoolTrue == test_5) {
      temp_4 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_5) {
      temp_4 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_4 ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (750)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (763)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (767)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (767)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (769)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (769)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (773)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_6 ;
    const enumGalgasBool test_7 = var_result.boolEnum () ;
    if (kBoolTrue == test_7) {
      temp_6 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_7) {
      temp_6 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_6 ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (776)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (789)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (793)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (793)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (795)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (795)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (799)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_8 ;
    const enumGalgasBool test_9 = var_result.boolEnum () ;
    if (kBoolTrue == test_9) {
      temp_8 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_9) {
      temp_8 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_8 ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (802)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (815)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_goilTemplateType::kNotBuilt:
        break ;
      case GALGAS_goilTemplateType::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (819)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (819)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_unsignedType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (821)).objectCompare (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (821)))) ;
        } break ;
      case GALGAS_goilTemplateType::kEnum_stringType: case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (825)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_uint_36__34_ temp_10 ;
    const enumGalgasBool test_11 = var_result.boolEnum () ;
    if (kBoolTrue == test_11) {
      temp_10 = GALGAS_uint_36__34_ ((PMUInt64) 1ULL) ;
    }else if (kBoolFalse == test_11) {
      temp_10 = GALGAS_uint_36__34_ ((PMUInt64) 0ULL) ;
    }
    outArgument_outValue.mAttribute_mUnsigned_36__34_Value = temp_10 ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (669)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (696)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (724)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (750)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (776)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (802)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                               const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                               GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                               GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (854)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_left_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (867)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (868)).left_shift_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (868)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (868)) COMMA_SOURCE_FILE_AT_LINE (868)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (870)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_right_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (883)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (884)).right_shift_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (884)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (884)) COMMA_SOURCE_FILE_AT_LINE (884)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (886)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (899)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (900)).add_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (900)), inCompiler COMMA_SOURCE_FILE_AT_LINE (900)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (902)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_concatenation_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (915)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mStringValue = var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (916)).operator_concat (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (916)) COMMA_SOURCE_FILE_AT_LINE (916)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (918)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (931)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (932)).substract_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (932)), inCompiler COMMA_SOURCE_FILE_AT_LINE (932)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (854)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (870)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (886)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (902)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (918)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_ (const GALGAS_string constinArgument_inPrefix,
                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                               const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                               GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                               GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (960)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_multiply_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (973)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (974)).multiply_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (974)), inCompiler COMMA_SOURCE_FILE_AT_LINE (974)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (976)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_divide_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (989)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (990)).divide_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (990)), inCompiler COMMA_SOURCE_FILE_AT_LINE (990)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (992)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateValue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_goilTemplateType var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_modulo_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1005)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mUnsigned_36__34_Value = var_leftExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1006)).modulo_operation (var_rightExpression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1006)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1006)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (960)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (976)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (992)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1024)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1033)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1024)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1033)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1050)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_expression ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL).substract_operation (var_expression.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1061)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1061)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1061)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkNotOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1062)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1050)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1079)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_value ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_value, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (var_value.reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1090)).operator_tilde (SOURCE_FILE_AT_LINE (1090)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1090)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBitComplementOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1091)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1079)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1109)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1110)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                 GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1127)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1129)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1127)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1147)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (var_literalInt.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (1148)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1148)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1149)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1147)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_literalString = inCompiler->synthetizedAttribute_a_5F_string () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1166)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithString (var_literalString.reader_string (SOURCE_FILE_AT_LINE (1167)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1167)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (1168)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1166)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1186)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateValue var_expressionValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_expressionType ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expressionValue, var_expressionType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_templateMethodName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1199)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_goilTemplateExpressionList var_expressionList = GALGAS_goilTemplateExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1201)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1204)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      var_expressionList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1216)) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1218)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1222)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateMethodInvocation (var_expressionType, var_expressionValue, var_templateMethodName, var_expressionList, outArgument_outResultType, outArgument_outValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1224)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1186)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1199)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1204)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1218)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1222)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_functionOrVariableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
    //-------- @methodCallInstructionForGeneration
    constinArgument_inVariableMap.method_searchKey (var_functionOrVariableName, outArgument_outResultType, outArgument_outValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1276)) ;
    //-------- END @methodCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1278)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_varType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_varValue ;
    //-------- @methodCallInstructionForGeneration
    constinArgument_inVariableMap.method_searchKey (var_functionOrVariableName, var_varType, var_varValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1281)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_varType.objectCompare (GALGAS_goilTemplateType::constructor_structType (SOURCE_FILE_AT_LINE (1282)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1283)) COMMA_SOURCE_FILE_AT_LINE (1283)).operator_concat (GALGAS_string ("' is not a struct") COMMA_SOURCE_FILE_AT_LINE (1283)) COMMA_SOURCE_FILE_AT_LINE (1283)) ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_ (var_varValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1285)), outArgument_outValue, outArgument_outResultType, inCompiler) ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_function var_f ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_function::constructor_isFunctionDefined (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1289)) COMMA_SOURCE_FILE_AT_LINE (1289)).operator_not (SOURCE_FILE_AT_LINE (1289)).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("there is no '").operator_concat (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1290)) COMMA_SOURCE_FILE_AT_LINE (1290)).operator_concat (GALGAS_string ("' function defined in GOIL template language") COMMA_SOURCE_FILE_AT_LINE (1290)) COMMA_SOURCE_FILE_AT_LINE (1290)) ;
      var_f.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      //-------- @assignmentInstructionForGeneration
      var_f = GALGAS_function::constructor_functionWithName (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1292)) COMMA_SOURCE_FILE_AT_LINE (1292)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_goilTemplateExpressionList var_actualArgumentList = GALGAS_goilTemplateExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1295)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1296)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_4 = true ;
    while (repeatFlag_4) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateValue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_goilTemplateType var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      var_actualArgumentList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1308)) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1310)) ;
      } break ;
      default:
        repeatFlag_4 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1312)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_objectlist var_actualArgumentObjectList = GALGAS_objectlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1314)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_typelist var_formalParameterList = var_f.reader_formalParameterTypeList (SOURCE_FILE_AT_LINE (1315)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1316)).objectCompare (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1316)))).boolEnum () ;
    if (kBoolTrue == test_5) {
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_6 ;
      const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1319)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
      if (kBoolTrue == test_7) {
        temp_6 = GALGAS_string ("s") ;
      }else if (kBoolFalse == test_7) {
        temp_6 = GALGAS_string::makeEmptyString () ;
      }
      //--- @ifExpressionForGeneration
      GALGAS_string temp_8 ;
      const enumGalgasBool test_9 = GALGAS_bool (kIsStrictSup, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1322)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
      if (kBoolTrue == test_9) {
        temp_8 = GALGAS_string ("s") ;
      }else if (kBoolFalse == test_9) {
        temp_8 = GALGAS_string::makeEmptyString () ;
      }
      GALGAS_location location_10 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_10, GALGAS_string ("this function is invoked with ").operator_concat (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1318)).reader_string (SOURCE_FILE_AT_LINE (1318)) COMMA_SOURCE_FILE_AT_LINE (1318)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1319)).operator_concat (temp_6 COMMA_SOURCE_FILE_AT_LINE (1319)).operator_concat (GALGAS_string (", but requires ") COMMA_SOURCE_FILE_AT_LINE (1320)).operator_concat (var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1321)).reader_string (SOURCE_FILE_AT_LINE (1321)) COMMA_SOURCE_FILE_AT_LINE (1321)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1322)).operator_concat (temp_8 COMMA_SOURCE_FILE_AT_LINE (1322)) COMMA_SOURCE_FILE_AT_LINE (1317)) ;
      outArgument_outValue.drop () ; // Release error dropped variable
      outArgument_outResultType.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_5) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 1U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_typelist enumerator_48729 (var_formalParameterList, kEnumeration_up) ;
      cEnumerator_goilTemplateExpressionList enumerator_48768 (var_actualArgumentList, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_48729.hasCurrentObject () && enumerator_48768.hasCurrentObject ()) {
        //------- @switchInstructionForGeneration
        if (enumerator_48768.current_mType (HERE).isValid ()) {
          switch (enumerator_48768.current_mType (HERE).enumValue ()) {
          case GALGAS_goilTemplateType::kNotBuilt:
            break ;
          case GALGAS_goilTemplateType::kEnum_boolType: {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, enumerator_48729.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
            if (kBoolTrue == test_11) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48729.current_mValue (HERE), GALGAS_string ("boolean"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1330)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @plusEqualnstructionForGeneration
            //--- @ifExpressionForGeneration
            GALGAS_bool temp_12 ;
            const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, enumerator_48768.current_mValue (HERE).reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1332)).objectCompare (GALGAS_uint_36__34_ ((PMUInt64) 0ULL))).boolEnum () ;
            if (kBoolTrue == test_13) {
              temp_12 = GALGAS_bool (false) ;
            }else if (kBoolFalse == test_13) {
              temp_12 = GALGAS_bool (true) ;
            }
            var_actualArgumentObjectList.addAssign_operation (temp_12.reader_object (SOURCE_FILE_AT_LINE (1332)) COMMA_SOURCE_FILE_AT_LINE (1332)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_unsignedType: {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, enumerator_48729.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).boolEnum () ;
            if (kBoolTrue == test_14) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48729.current_mValue (HERE), GALGAS_string ("unsigned"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1335)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @plusEqualnstructionForGeneration
            var_actualArgumentObjectList.addAssign_operation (enumerator_48768.current_mValue (HERE).reader_mUnsigned_36__34_Value (SOURCE_FILE_AT_LINE (1337)).reader_object (SOURCE_FILE_AT_LINE (1337)) COMMA_SOURCE_FILE_AT_LINE (1337)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_stringType: {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_15 = GALGAS_bool (kIsNotEqual, enumerator_48729.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
            if (kBoolTrue == test_15) {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_48729.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1340)) ;
              } //-------- @routineCallInstructionForGeneration
            }
            //-------- @plusEqualnstructionForGeneration
            var_actualArgumentObjectList.addAssign_operation (enumerator_48768.current_mValue (HERE).reader_mStringValue (SOURCE_FILE_AT_LINE (1342)).reader_object (SOURCE_FILE_AT_LINE (1342)) COMMA_SOURCE_FILE_AT_LINE (1342)) ;
            } break ;
          case GALGAS_goilTemplateType::kEnum_listType: case GALGAS_goilTemplateType::kEnum_structType: {
            { //-------- @routineCallInstructionForGeneration
            routine_typeError (var_functionOrVariableName, enumerator_48729.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1344)) ;
            } //-------- @routineCallInstructionForGeneration
            } break ;
          }
        }
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1346)) ;
        enumerator_48729.gotoNextObject () ;
        enumerator_48768.gotoNextObject () ;
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1348)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1349)) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (1350)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_16) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_object var_result = var_f.reader_invoke (var_actualArgumentObjectList, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1351)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1351)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1352)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).boolEnum () ;
        if (kBoolTrue == test_17) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (1353)) ;
          //-------- @assignmentInstructionForGeneration
          //--- @extractObjectInExpressionForGeneration
          outArgument_outValue.mAttribute_mUnsigned_36__34_Value = GALGAS_uint_36__34_::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1354)) COMMA_SOURCE_FILE_AT_LINE (1354)) ;
        }else if (kBoolFalse == test_17) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1355)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
          if (kBoolTrue == test_19) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1356)) ;
            //-------- @assignmentInstructionForGeneration
            //--- @extractObjectInExpressionForGeneration
            outArgument_outValue.mAttribute_mUnsigned_36__34_Value = GALGAS_bool::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1357)) COMMA_SOURCE_FILE_AT_LINE (1357)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (1357)) ;
          }else if (kBoolFalse == test_19) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1358)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
            if (kBoolTrue == test_21) {
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (1359)) ;
              //-------- @assignmentInstructionForGeneration
              //--- @extractObjectInExpressionForGeneration
              outArgument_outValue.mAttribute_mStringValue = GALGAS_string::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1360)) COMMA_SOURCE_FILE_AT_LINE (1360)) ;
            }else if (kBoolFalse == test_21) {
              //-------- @errorInstructionForGeneration
              GALGAS_location location_23 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_23, GALGAS_string ("this function does not return an unsigned, boolean or string value") COMMA_SOURCE_FILE_AT_LINE (1362)) ;
            }
          }
        }
      }
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1278)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1296)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1310)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1312)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_goilTemplateVariableMap constinArgument_inVariableMap,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateValue var_expression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_goilTemplateType var_resultType ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1393)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = constinArgument_inVariableMap.reader_hasKey (var_variableName.reader_string (SOURCE_FILE_AT_LINE (1394)) COMMA_SOURCE_FILE_AT_LINE (1394)).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @methodCallInstructionForGeneration
      constinArgument_inVariableMap.method_searchKey (var_variableName, var_resultType, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1395)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = var_expression ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = var_resultType ;
  } break ;
  case 2: {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = constinArgument_inVariableMap.reader_hasKey (var_variableName.reader_string (SOURCE_FILE_AT_LINE (1400)) COMMA_SOURCE_FILE_AT_LINE (1400)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1403)) ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1405)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1393)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1420)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1421)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1423)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), inCompiler COMMA_SOURCE_FILE_AT_LINE (1424)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (1426)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1420)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1423)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_goilTemplateVariableMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                  GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1439)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = GALGAS_goilTemplateValue::constructor_new (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), GALGAS_string::makeEmptyString (), GALGAS_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1440)), GALGAS_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1440)) COMMA_SOURCE_FILE_AT_LINE (1440)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_goilTemplateType::constructor_listType (SOURCE_FILE_AT_LINE (1441)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1439)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_struct_5F_member_i17_ (const GALGAS_goilTemplateFieldMap constinArgument_inValue,
                                                                                                            GALGAS_goilTemplateValue & outArgument_outValue,
                                                                                                            GALGAS_goilTemplateType & outArgument_outResultType,
                                                                                                            C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_memberName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1451)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateType var_memberType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint_36__34_ var_memberInt ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_memberString ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateFieldMapList var_memberList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_goilTemplateFieldMap var_memberStruct ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inValue.method_searchKey (var_memberName, var_memberType, var_memberInt, var_memberString, var_memberList, var_memberStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (1457)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_11 (inCompiler)) {
  case 1: {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_memberType.objectCompare (GALGAS_goilTemplateType::constructor_structType (SOURCE_FILE_AT_LINE (1459)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (var_memberName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (var_memberName.reader_string (SOURCE_FILE_AT_LINE (1460)) COMMA_SOURCE_FILE_AT_LINE (1460)).operator_concat (GALGAS_string ("' is a not a struct") COMMA_SOURCE_FILE_AT_LINE (1460)) COMMA_SOURCE_FILE_AT_LINE (1460)) ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1462)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_ (var_memberStruct, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  } break ;
  case 2: {
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = GALGAS_goilTemplateValue::constructor_new (var_memberInt, var_memberString, var_memberList, var_memberStruct COMMA_SOURCE_FILE_AT_LINE (1465)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = var_memberType ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_struct_5F_member_i17_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1451)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_11 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1462)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_struct_5F_member_parse (inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


