//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'goil_obj_message.cpp'                         *
//                       Generated by version 1.9.11                         *
//                      april 29th, 2010, at 10h36'41"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != 725
  #error "This file has been compiled with a version of GALGAS that uses libpm version 725, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "goil_obj_message.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_obj_message.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'mess'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mess_i0_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_message_map  &var_cas_messages) {
  GGS_lstring  var_cas_message_name ;
  GGS_message_obj  var_cas_mess ;
  GGS_lstring  var_cas_desc ;
  GGS_mess_prop_obj  var_cas_mess_prop ;
  GGS_action_obj  var_cas_notif ;
  GGS_action_obj  var_cas_notif_error ;
  GGS_lstringlist  var_cas_acc_apps ;
  GGS_ident_map  var_cas_others ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGE) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_message_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  const GGS_bool cond_3214 = var_cas_messages.reader_hasKey (var_cas_message_name.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (143))) ;
  if (cond_3214.isBuiltAndTrue ()) {
    var_cas_messages.modifier_del (inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (144)) ;
    var_cas_mess_prop = var_cas_mess.reader_messageproperty (inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
    var_cas_notif = var_cas_mess.reader_notification (inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
    var_cas_notif_error = var_cas_mess.reader_notificationerror (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
    var_cas_acc_apps = var_cas_mess.reader_acc_apps (inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
    var_cas_others = var_cas_mess.reader_other_fields (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) ;
    var_cas_desc = var_cas_mess.reader_desc (inLexique COMMA_SOURCE_FILE_AT_LINE (150)) ;
  }else if (cond_3214.isBuiltAndFalse ()) {
    var_cas_mess_prop = GGS_void_mess_prop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    var_cas_notif = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (153)) ;
    var_cas_notif_error = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (154)) ;
    var_cas_acc_apps = GGS_lstringlist ::constructor_emptyList () ;
    var_cas_others = GGS_ident_map ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (156)) ;
    var_cas_desc = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (157)) ;
    var_cas_mess = GGS_message_obj ::constructor_new (inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_SOURCE_FILE_AT_LINE (158)) ;
  }
  nt_message_5F_attributes_ (inLexique, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  nt_description_ (inLexique, var_cas_desc) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  var_cas_mess = GGS_message_obj ::constructor_new (inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_SOURCE_FILE_AT_LINE (165)) ;
  var_cas_messages.modifier_put (inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (166)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'message_attributes'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_attributes_i1_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_action_obj  &var_cas_notif,
                                GGS_action_obj  &var_cas_notif_error,
                                GGS_lstringlist  &var_cas_acc_apps,
                                GGS_ident_map  &var_cas_others,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_goil_5F_obj_5F_message_0 (inLexique)) {
        case 2 : {
          { const GGS_mess_prop_obj _var_4207 = var_cas_mess_prop ; // CAST instruction
            if (_var_4207.getPtr () != NULL) {
              macroValidPointer (_var_4207.getPtr ()) ;
              if (typeid (cPtr_void_mess_prop) == typeid (* (_var_4207.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MESSAGEPROPERTY attribute already defined") COMMA_SOURCE_FILE_AT_LINE (182)) ;
                var_cas_mess_prop.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (182)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (183)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGEPROPERTY) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_message_5F_property_ (inLexique, var_cas_mess_prop) ;
          GGS_lstring  automatic_var_4298_0 ;
          nt_description_ (inLexique, automatic_var_4298_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          { const GGS_action_obj _var_4496 = var_cas_notif ; // CAST instruction
            if (_var_4496.getPtr () != NULL) {
              macroValidPointer (_var_4496.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_4496.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NOTIFICATION attribute already defined") COMMA_SOURCE_FILE_AT_LINE (190)) ;
                var_cas_notif.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (190)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (191)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_ (inLexique, var_cas_notif) ;
          GGS_lstring  automatic_var_4587_0 ;
          nt_description_ (inLexique, automatic_var_4587_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          { const GGS_action_obj _var_4806 = var_cas_notif_error ; // CAST instruction
            if (_var_4806.getPtr () != NULL) {
              macroValidPointer (_var_4806.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_4806.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NOTIFICATIONERROR attribute already defined") COMMA_SOURCE_FILE_AT_LINE (198)) ;
                var_cas_notif_error.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (198)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was previously defined here") COMMA_SOURCE_FILE_AT_LINE (199)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATIONERROR) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_ (inLexique, var_cas_notif_error) ;
          GGS_lstring  automatic_var_4903_0 ;
          nt_description_ (inLexique, automatic_var_4903_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 5 : {
          GGS_lstring  var_cas_app ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACCESSING_5F_APPLICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_att_5F_token (var_cas_app) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
          GGS_lstring  automatic_var_5004_0 ;
          nt_description_ (inLexique, automatic_var_5004_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          ::routine_add_lstring_unique (inLexique,  var_cas_acc_apps,  var_cas_app,  GGS_string ("ACCESSING_APPLICATION") COMMA_SOURCE_FILE_AT_LINE (204)) ;
          } break ;
        case 6 : {
          nt_free_5F_field_ (inLexique, var_cas_others) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_property'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_property_i2_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  switch (select_goil_5F_obj_5F_message_1 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_INTERNAL) COMMA_HERE) ;
      nt_ssi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sse_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sde_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 4 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      var_cas_mess_prop = GGS_szi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (216)) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_sze_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      nt_rzi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 7 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_rze_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 8 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rui_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 9 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rqi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 10 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rue_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 11 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rqe_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 12 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_rde_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 13 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_SENDERS) COMMA_HERE) ;
      nt_rzs_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'notification_property'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_notification_5F_property_i3_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_action_obj  &var_cas_notif) {
  switch (select_goil_5F_obj_5F_message_2 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NONE) COMMA_HERE) ;
      var_cas_notif = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (234)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SETEVENT) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      GGS_bool var_cas_has_task = GGS_bool (false) ;
      GGS_lstring  var_cas_task_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (238)) ;
      GGS_bool var_cas_has_event = GGS_bool (false) ;
      GGS_lstring  var_cas_event_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (240)) ;
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
          switch (select_goil_5F_obj_5F_message_3 (inLexique)) {
            case 2 : {
              const GGS_bool cond_6577 = var_cas_has_task ;
              if (cond_6577.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TASK already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (245)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_att_5F_token (var_cas_task_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_6659_0 ;
              nt_description_ (inLexique, automatic_var_6659_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_task = GGS_bool (true) ;
              } break ;
            case 3 : {
              const GGS_bool cond_6815 = var_cas_has_event ;
              if (cond_6815.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("EVENT already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (254)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_EVENT) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_att_5F_token (var_cas_event_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_6907_0 ;
              nt_description_ (inLexique, automatic_var_6907_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_event = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      const GGS_bool cond_7069 = (var_cas_has_task).operator_not () ;
      if (cond_7069.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Task not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (264)) ;
      }
      const GGS_bool cond_7177 = (var_cas_has_event).operator_not () ;
      if (cond_7177.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Event not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (267)) ;
      }
      var_cas_notif = GGS_setevent_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_task_name, var_cas_event_name COMMA_SOURCE_FILE_AT_LINE (268)) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_task_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACTIVATETASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_task_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_7375_0 ;
      nt_description_ (inLexique, automatic_var_7375_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_activatetask_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_task_name COMMA_SOURCE_FILE_AT_LINE (275)) ;
      } break ;
    case 4 : {
      GGS_lstring  var_cas_function_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACKNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_function_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_7609_0 ;
      nt_description_ (inLexique, automatic_var_7609_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_callback_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_function_name COMMA_SOURCE_FILE_AT_LINE (282)) ;
      } break ;
    case 5 : {
      GGS_lstring  var_cas_flag_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAG) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAGNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_flag_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_7814_0 ;
      nt_description_ (inLexique, automatic_var_7814_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_flag_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_flag_name COMMA_SOURCE_FILE_AT_LINE (289)) ;
      } break ;
    case 6 : {
      GGS_bool var_cas_has_function = GGS_bool (false) ;
      GGS_lstring  var_cas_function_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (292)) ;
      GGS_bool var_cas_has_ipdu = GGS_bool (false) ;
      GGS_luint64  var_cas_ipdu = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (294)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
          switch (select_goil_5F_obj_5F_message_4 (inLexique)) {
            case 2 : {
              const GGS_bool cond_8265 = var_cas_has_function ;
              if (cond_8265.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (300)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CALLBACKROUTINENAME) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_a_5F_string (var_cas_function_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
              GGS_lstring  automatic_var_8355_0 ;
              nt_description_ (inLexique, automatic_var_8355_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_function = GGS_bool (true) ;
              } break ;
            case 3 : {
              const GGS_bool cond_8539 = var_cas_has_ipdu ;
              if (cond_8539.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (306)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MONITOREDIPDU) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_integerNumber (var_cas_ipdu) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
              GGS_lstring  automatic_var_8619_0 ;
              nt_description_ (inLexique, automatic_var_8619_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_ipdu = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      const GGS_bool cond_8803 = (var_cas_has_function).operator_not () ;
      if (cond_8803.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (313)) ;
      }
      const GGS_bool cond_8917 = (var_cas_has_ipdu).operator_not () ;
      if (cond_8917.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("IPDU not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (316)) ;
      }
      var_cas_notif = GGS_nmcallback_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_function_name, var_cas_ipdu COMMA_SOURCE_FILE_AT_LINE (317)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ssi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_ssi_5F_attributes_i4_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_cdatatype ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_ssi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype COMMA_SOURCE_FILE_AT_LINE (329)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sse_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sse_5F_attributes_i5_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (336)) ;
  GGS_bool var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (338)) ;
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (340)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (342)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (344)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (346)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (348)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_goil_5F_obj_5F_message_5 (inLexique)) {
        case 2 : {
          const GGS_bool cond_10079 = var_cas_has_cdatatype ;
          if (cond_10079.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (355)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_10279 = var_cas_has_transferproperty ;
          if (cond_10279.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (361)) ;
          }
          nt_transferproperty_ (inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_10493 = var_cas_has_net_message ;
          if (cond_10493.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (367)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 5 : {
          const GGS_bool cond_10682 = var_cas_has_filter ;
          if (cond_10682.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (373)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 6 : {
          const GGS_bool cond_10877 = var_cas_has_net_order_callout ;
          if (cond_10877.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (379)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 7 : {
          const GGS_bool cond_11103 = var_cas_has_cpu_order_callout ;
          if (cond_11103.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (385)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 8 : {
          const GGS_bool cond_11318 = var_cas_has_initial_value ;
          if (cond_11318.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (391)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_11525 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_11525.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (398)) ;
  }
  const GGS_bool cond_11643 = (var_cas_has_transferproperty).operator_not () ;
  if (cond_11643.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY is missing in the message") COMMA_SOURCE_FILE_AT_LINE (401)) ;
  }
  const GGS_bool cond_11754 = (var_cas_has_net_message).operator_not () ;
  if (cond_11754.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (404)) ;
  }
  var_cas_mess_prop = GGS_sse_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_transferproperty, var_cas_filter, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (406)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sde_5F_attributes_i6_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (422)) ;
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (424)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (426)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (428)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (430)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_goil_5F_obj_5F_message_6 (inLexique)) {
        case 2 : {
          const GGS_bool cond_12694 = var_cas_has_transferproperty ;
          if (cond_12694.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (437)) ;
          }
          nt_transferproperty_ (inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_12908 = var_cas_has_net_message ;
          if (cond_12908.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (443)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_13121 = var_cas_has_net_order_callout ;
          if (cond_13121.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (449)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 5 : {
          const GGS_bool cond_13347 = var_cas_has_cpu_order_callout ;
          if (cond_13347.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (455)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 6 : {
          const GGS_bool cond_13562 = var_cas_has_initial_value ;
          if (cond_13562.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (461)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_sde_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_transferproperty, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (466)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sze_5F_attributes_i7_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (480)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (482)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (484)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_goil_5F_obj_5F_message_7 (inLexique)) {
        case 2 : {
          const GGS_bool cond_14364 = var_cas_has_net_message ;
          if (cond_14364.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (491)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_14577 = var_cas_has_net_order_callout ;
          if (cond_14577.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (497)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_14803 = var_cas_has_cpu_order_callout ;
          if (cond_14803.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (503)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_15019 = (var_cas_has_net_message).operator_not () ;
  if (cond_15019.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (510)) ;
  }
  var_cas_mess_prop = GGS_sze_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (511)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzi_5F_attributes_i8_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_sending_message ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_rzi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message COMMA_SOURCE_FILE_AT_LINE (527)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rze_5F_attributes_i9_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (537)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (539)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (541)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_goil_5F_obj_5F_message_8 (inLexique)) {
        case 2 : {
          const GGS_bool cond_15912 = var_cas_has_net_message ;
          if (cond_15912.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (548)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_16125 = var_cas_has_net_order_callout ;
          if (cond_16125.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (554)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_16351 = var_cas_has_cpu_order_callout ;
          if (cond_16351.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (560)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_16567 = (var_cas_has_net_message).operator_not () ;
  if (cond_16567.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (567)) ;
  }
  var_cas_mess_prop = GGS_rze_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (568)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rui_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rui_5F_attributes_i10_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (580)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (582)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (584)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_goil_5F_obj_5F_message_9 (inLexique)) {
        case 2 : {
          const GGS_bool cond_17204 = var_cas_has_sending_message ;
          if (cond_17204.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (591)) ;
          }
          nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_17401 = var_cas_has_filter ;
          if (cond_17401.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (597)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_17585 = var_cas_has_initial_value ;
          if (cond_17585.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (603)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_17794 = (var_cas_has_sending_message).operator_not () ;
  if (cond_17794.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (610)) ;
  }
  var_cas_mess_prop = GGS_rui_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message, var_cas_filter, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (611)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqi_5F_attributes_i11_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (623)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (625)) ;
  GGS_bool var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (627)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_goil_5F_obj_5F_message_10 (inLexique)) {
        case 2 : {
          const GGS_bool cond_18417 = var_cas_has_sending_message ;
          if (cond_18417.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (633)) ;
          }
          nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_18614 = var_cas_has_filter ;
          if (cond_18614.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (639)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_18792 = var_cas_has_queue_size ;
          if (cond_18792.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (645)) ;
          }
          nt_queuesize_ (inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("INITIALVALUE subattribute ignore for queued messages") COMMA_SOURCE_FILE_AT_LINE (649)) ;
          GGS_basic_type  automatic_var_18980_0 ;
          nt_initialvalue_ (inLexique, automatic_var_18980_0) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_19108 = (var_cas_has_sending_message).operator_not () ;
  if (cond_19108.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (655)) ;
  }
  const GGS_bool cond_19204 = (var_cas_has_queue_size).operator_not () ;
  if (cond_19204.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (658)) ;
  }
  var_cas_mess_prop = GGS_rqi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message, var_cas_filter, var_cas_queue_size COMMA_SOURCE_FILE_AT_LINE (659)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rue_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rue_5F_attributes_i12_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (671)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (673)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (675)) ;
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (676)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_goil_5F_obj_5F_message_11 (inLexique)) {
        case 2 : {
          const GGS_bool cond_19850 = var_cas_has_cdatatype ;
          if (cond_19850.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (683)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_20030 = var_cas_has_filter ;
          if (cond_20030.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (689)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          { const GGS_link_obj _var_20227 = var_cas_link ; // CAST instruction
            if (_var_20227.getPtr () != NULL) {
              macroValidPointer (_var_20227.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_20227.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (696)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 5 : {
          const GGS_bool cond_20380 = var_cas_has_initial_value ;
          if (cond_20380.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (701)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_20587 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_20587.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (708)) ;
  }
  { const GGS_link_obj _var_20702 = var_cas_link ; // CAST instruction
    if (_var_20702.getPtr () != NULL) {
      macroValidPointer (_var_20702.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_20702.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (712)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rue_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_filter, var_cas_link, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (715)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqe_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqe_5F_attributes_i13_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (728)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (730)) ;
  GGS_bool var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (732)) ;
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (733)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_goil_5F_obj_5F_message_12 (inLexique)) {
        case 2 : {
          const GGS_bool cond_21360 = var_cas_has_cdatatype ;
          if (cond_21360.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (740)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_21540 = var_cas_has_filter ;
          if (cond_21540.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (746)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_21718 = var_cas_has_queue_size ;
          if (cond_21718.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (752)) ;
          }
          nt_queuesize_ (inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          { const GGS_link_obj _var_21926 = var_cas_link ; // CAST instruction
            if (_var_21926.getPtr () != NULL) {
              macroValidPointer (_var_21926.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_21926.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (759)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 6 : {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("INITIALVALUE subattribute ignore for queued messages") COMMA_SOURCE_FILE_AT_LINE (762)) ;
          GGS_basic_type  automatic_var_22072_0 ;
          nt_initialvalue_ (inLexique, automatic_var_22072_0) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_22199 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_22199.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (769)) ;
  }
  const GGS_bool cond_22295 = (var_cas_has_queue_size).operator_not () ;
  if (cond_22295.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (772)) ;
  }
  { const GGS_link_obj _var_22410 = var_cas_link ; // CAST instruction
    if (_var_22410.getPtr () != NULL) {
      macroValidPointer (_var_22410.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_22410.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (776)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rqe_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_queue_size, var_cas_filter, var_cas_link COMMA_SOURCE_FILE_AT_LINE (779)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rde_5F_attributes_i14_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (792)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (794)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
      switch (select_goil_5F_obj_5F_message_13 (inLexique)) {
        case 2 : {
          { const GGS_link_obj _var_22911 = var_cas_link ; // CAST instruction
            if (_var_22911.getPtr () != NULL) {
              macroValidPointer (_var_22911.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_22911.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (802)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 3 : {
          const GGS_bool cond_23064 = var_cas_has_initial_value ;
          if (cond_23064.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (807)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  { const GGS_link_obj _var_23283 = var_cas_link ; // CAST instruction
    if (_var_23283.getPtr () != NULL) {
      macroValidPointer (_var_23283.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_23283.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (816)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rde_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_link, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (819)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzs_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzs_5F_attributes_i15_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (831)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (833)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_goil_5F_obj_5F_message_14 (inLexique)) {
        case 2 : {
          const GGS_bool cond_23772 = var_cas_has_cdatatype ;
          if (cond_23772.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (840)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_23965 = var_cas_has_initial_value ;
          if (cond_23965.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (846)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_24173 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_24173.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (854)) ;
  }
  var_cas_mess_prop = GGS_rzs_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (856)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'cdatatype'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cdatatype_i16_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_cdatatype) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CDATATYPE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_cdatatype) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_24412_0 ;
  nt_description_ (inLexique, automatic_var_24412_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'transferproperty'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_transferproperty_i17_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_transferproperty) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRANSFERPROPERTY) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_15 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRIGGERED) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("triggered"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (879)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PENDING) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("pending"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (881)) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("auto"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (883)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_24808_0 ;
  nt_description_ (inLexique, automatic_var_24808_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'networkmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkmessage_i18_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_net_message) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_net_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_24957_0 ;
  nt_description_ (inLexique, automatic_var_24957_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'filter'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_filter_i19_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_filter_prop_obj  &var_cas_filter) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FILTER) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_16 (inLexique)) {
    case 1 : {
      var_cas_filter = GGS_always_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (903)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ALWAYS) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_filter = GGS_never_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (906)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEVER) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_ (inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewequalsx_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask, var_cas_x COMMA_SOURCE_FILE_AT_LINE (913)) ;
      } break ;
    case 4 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_ (inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewdiffersx_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask, var_cas_x COMMA_SOURCE_FILE_AT_LINE (919)) ;
      } break ;
    case 5 : {
      var_cas_filter = GGS_newisequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (921)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISEQUAL) COMMA_HERE) ;
      } break ;
    case 6 : {
      var_cas_filter = GGS_newisdifferent_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (924)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISDIFFERENT) COMMA_HERE) ;
      } break ;
    case 7 : {
      GGS_luint64  var_cas_mask ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_ (inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewequalsmaskedold_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask COMMA_SOURCE_FILE_AT_LINE (930)) ;
      } break ;
    case 8 : {
      GGS_luint64  var_cas_mask ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_ (inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewdiffersmaskedold_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask COMMA_SOURCE_FILE_AT_LINE (935)) ;
      } break ;
    case 9 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISWITHIN) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_ (inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newiswithin ::constructor_new (inLexique, var_cas_filterLocation, var_cas_min, var_cas_max COMMA_SOURCE_FILE_AT_LINE (941)) ;
      } break ;
    case 10 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISOUTSIDE) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_ (inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newisoutside ::constructor_new (inLexique, var_cas_filterLocation, var_cas_min, var_cas_max COMMA_SOURCE_FILE_AT_LINE (947)) ;
      } break ;
    case 11 : {
      var_cas_filter = GGS_newisgreater_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (949)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATER) COMMA_HERE) ;
      } break ;
    case 12 : {
      var_cas_filter = GGS_newislessorequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (952)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESSOREQUAL) COMMA_HERE) ;
      } break ;
    case 13 : {
      var_cas_filter = GGS_newisless_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (955)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESS) COMMA_HERE) ;
      } break ;
    case 14 : {
      var_cas_filter = GGS_newisgreaterorequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (958)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATEROREQUAL) COMMA_HERE) ;
      } break ;
    case 15 : {
      GGS_luint64  var_cas_period ;
      GGS_luint64  var_cas_offset ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ONEEVERYN) COMMA_HERE) ;
      nt_period_5F_offset_5F_attribute_ (inLexique, var_cas_period, var_cas_offset) ;
      var_cas_filter = GGS_oneeveryn_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_period, var_cas_offset COMMA_SOURCE_FILE_AT_LINE (965)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_27335_0 ;
  nt_description_ (inLexique, automatic_var_27335_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'mask_x_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_x_5F_attribute_i20_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_mask,
                                GGS_luint64  &var_cas_x) {
  GGS_bool var_cas_has_mask = GGS_bool (false) ;
  GGS_bool var_cas_has_x = GGS_bool (false) ;
  var_cas_mask = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (976)) ;
  var_cas_x = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (977)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
      switch (select_goil_5F_obj_5F_message_17 (inLexique)) {
        case 2 : {
          const GGS_bool cond_27683 = var_cas_has_mask ;
          if (cond_27683.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MASK is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (984)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_mask) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_27752_0 ;
          nt_description_ (inLexique, automatic_var_27752_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_mask = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_27894 = var_cas_has_x ;
          if (cond_27894.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("X is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (990)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_X) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_x) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_27957_0 ;
          nt_description_ (inLexique, automatic_var_27957_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_x = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_28102 = (var_cas_has_mask).operator_not () ;
  if (cond_28102.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MASK is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (997)) ;
  }
  const GGS_bool cond_28189 = (var_cas_has_x).operator_not () ;
  if (cond_28189.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("X is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1000)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'mask_attribute'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_attribute_i21_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_mask) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_mask) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_28319_0 ;
  nt_description_ (inLexique, automatic_var_28319_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'min_max_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_min_5F_max_5F_attribute_i22_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_min,
                                GGS_luint64  &var_cas_max) {
  GGS_bool var_cas_has_min = GGS_bool (false) ;
  GGS_bool var_cas_has_max = GGS_bool (false) ;
  var_cas_min = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1017)) ;
  var_cas_max = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1018)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_goil_5F_obj_5F_message_18 (inLexique)) {
        case 2 : {
          const GGS_bool cond_28679 = var_cas_has_min ;
          if (cond_28679.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MIN is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1025)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MIN) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_min) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_28746_0 ;
          nt_description_ (inLexique, automatic_var_28746_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_min = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_28891 = var_cas_has_max ;
          if (cond_28891.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MAX is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1031)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MAX) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_max) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_28958_0 ;
          nt_description_ (inLexique, automatic_var_28958_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_max = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_29103 = (var_cas_has_min).operator_not () ;
  if (cond_29103.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MIN is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1038)) ;
  }
  const GGS_bool cond_29194 = (var_cas_has_max).operator_not () ;
  if (cond_29194.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MAX is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1041)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'period_offset_attribute'         *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_period_5F_offset_5F_attribute_i23_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_period,
                                GGS_luint64  &var_cas_offset) {
  GGS_bool var_cas_has_period = GGS_bool (false) ;
  GGS_bool var_cas_has_offset = GGS_bool (false) ;
  var_cas_period = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1050)) ;
  var_cas_offset = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1051)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_goil_5F_obj_5F_message_19 (inLexique)) {
        case 2 : {
          const GGS_bool cond_29573 = var_cas_has_period ;
          if (cond_29573.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("PERIOD is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1058)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PERIOD) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_period) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_29646_0 ;
          nt_description_ (inLexique, automatic_var_29646_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_period = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_29800 = var_cas_has_offset ;
          if (cond_29800.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("OFFSET is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1064)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OFFSET) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_offset) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_29873_0 ;
          nt_description_ (inLexique, automatic_var_29873_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_offset = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_30027 = (var_cas_has_period).operator_not () ;
  if (cond_30027.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("PERIOD is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1071)) ;
  }
  const GGS_bool cond_30124 = (var_cas_has_offset).operator_not () ;
  if (cond_30124.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("OFFSET is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1074)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'networkordercallout'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkordercallout_i24_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_net_order_callout) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_net_order_callout) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_30297_0 ;
  nt_description_ (inLexique, automatic_var_30297_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'cpuordercallout'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cpuordercallout_i25_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_cpu_order_callout) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPUORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_cpu_order_callout) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_30463_0 ;
  nt_description_ (inLexique, automatic_var_30463_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'initialvalue'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_initialvalue_i26_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_basic_type  &var_cas_initial_value) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INITIALVALUE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_20 (inLexique)) {
    case 1 : {
      GGS_luint64  var_cas_ival ;
      inLexique.assignFromAttribute_integerNumber (var_cas_ival) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
      var_cas_initial_value = GGS_uint64_class ::constructor_new (inLexique, var_cas_ival.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1103)), var_cas_ival.reader_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (1103)) COMMA_SOURCE_FILE_AT_LINE (1103)) ;
      } break ;
    case 2 : {
      GGS_ldouble  var_cas_dval ;
      inLexique.assignFromAttribute_floatNumber (var_cas_dval) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_HERE) ;
      var_cas_initial_value = GGS_float_class ::constructor_new (inLexique, var_cas_dval.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1107)), var_cas_dval.reader_double (inLexique COMMA_SOURCE_FILE_AT_LINE (1107)) COMMA_SOURCE_FILE_AT_LINE (1107)) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_sval ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_sval) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      var_cas_initial_value = GGS_string_class ::constructor_new (inLexique, var_cas_sval.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1111)), var_cas_sval.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1111)) COMMA_SOURCE_FILE_AT_LINE (1111)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_31024_0 ;
  nt_description_ (inLexique, automatic_var_31024_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sendingmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sendingmessage_i27_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_sending_message) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SENDINGMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_sending_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_31181_0 ;
  nt_description_ (inLexique, automatic_var_31181_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'queuesize'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_queuesize_i28_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_queue_size) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_QUEUESIZE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_queue_size) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_31326_0 ;
  nt_description_ (inLexique, automatic_var_31326_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'link'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_link_i29_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_link_obj  &var_cas_link) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_LINK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_21 (inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_rcv_mess ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVEMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_rcv_mess) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_31533_0 ;
      nt_description_ (inLexique, automatic_var_31533_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_link = GGS_true_link ::constructor_new (inLexique, GGS_location (inLexique), var_cas_rcv_mess COMMA_SOURCE_FILE_AT_LINE (1144)) ;
      } break ;
    case 2 : {
      GGS_lstring  var_cas_net_mess ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_net_mess) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_31732_0 ;
      nt_description_ (inLexique, automatic_var_31732_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_link = GGS_false_link ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_mess COMMA_SOURCE_FILE_AT_LINE (1150)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_31843_0 ;
  nt_description_ (inLexique, automatic_var_31843_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

