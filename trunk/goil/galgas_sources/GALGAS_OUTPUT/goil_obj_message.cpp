//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'goil_obj_message.cpp'                         *
//                        Generated by version 1.8.3                         *
//                       may 29th, 2009, at 11h48'52"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != 491
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "goil_obj_message.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_obj_message.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'mess'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_mess_goil_obj_message_128_11_ (goil_lexique & _inLexique,
                                GGS_message_map  &var_cas_messages) {
  GGS_lstring  var_cas_message_name ;
  GGS_message_obj  var_cas_mess ;
  GGS_lstring  var_cas_desc ;
  GGS_mess_prop_obj  var_cas_mess_prop ;
  GGS_action_obj  var_cas_notif ;
  GGS_action_obj  var_cas_notif_error ;
  GGS_lstringlist  var_cas_acc_apps ;
  GGS_ident_map  var_cas_others ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MESSAGE) COMMA_HERE) ;
  _inLexique._assignFromAttribute_att_token (var_cas_message_name) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  if ((var_cas_messages.reader_hasKey (_inLexique, var_cas_message_name.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141))).isBuiltAndTrue ()) {
    var_cas_messages.modifier_del (_inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (142)) ;
    var_cas_mess_prop = var_cas_mess.reader_messageproperty (_inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
    var_cas_notif = var_cas_mess.reader_notification (_inLexique COMMA_SOURCE_FILE_AT_LINE (144)) ;
    var_cas_notif_error = var_cas_mess.reader_notificationerror (_inLexique COMMA_SOURCE_FILE_AT_LINE (145)) ;
    var_cas_acc_apps = var_cas_mess.reader_acc_apps (_inLexique COMMA_SOURCE_FILE_AT_LINE (146)) ;
    var_cas_others = var_cas_mess.reader_other_fields (_inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
    var_cas_desc = var_cas_mess.reader_desc (_inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
  }else{
    var_cas_mess_prop = GGS_void_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
    var_cas_notif = GGS_void_action ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
    var_cas_notif_error = GGS_void_action ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
    var_cas_acc_apps = GGS_lstringlist ::constructor_emptyList () ;
    var_cas_others = GGS_ident_map ::constructor_emptyMap (_inLexique COMMA_HERE) ;
    var_cas_desc = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
    var_cas_mess = GGS_message_obj ::constructor_new (_inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_HERE) ;
  }
  nt_message_attributes_ (_inLexique, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  nt_description_ (_inLexique, var_cas_desc) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
  var_cas_mess = GGS_message_obj ::constructor_new (_inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_HERE) ;
  var_cas_messages.modifier_put (_inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (164)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'message_attributes'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_message_attributes_goil_obj_message_167_25_ (goil_lexique & _inLexique,
                                GGS_action_obj  &var_cas_notif,
                                GGS_action_obj  &var_cas_notif_error,
                                GGS_lstringlist  &var_cas_acc_apps,
                                GGS_ident_map  &var_cas_others,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_goil_obj_message_0 (_inLexique)) {
        case 2 : {
          { const GGS_mess_prop_obj _var_4084 = var_cas_mess_prop ; // CAST instruction
            if (_var_4084.getPtr () != NULL) {
              macroValidPointer (_var_4084.getPtr ()) ;
              if (typeid (cPtr_void_mess_prop) == typeid (* (_var_4084.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MESSAGEPROPERTY attribute already defined") COMMA_SOURCE_FILE_AT_LINE (180)) ;
                var_cas_mess_prop.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (180)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (181)) ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MESSAGEPROPERTY) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          nt_message_property_ (_inLexique, var_cas_mess_prop) ;
          GGS_lstring  automatic_var_0 ;
          nt_description_ (_inLexique, automatic_var_0) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          { const GGS_action_obj _var_4373 = var_cas_notif ; // CAST instruction
            if (_var_4373.getPtr () != NULL) {
              macroValidPointer (_var_4373.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_4373.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NOTIFICATION attribute already defined") COMMA_SOURCE_FILE_AT_LINE (188)) ;
                var_cas_notif.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (188)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (189)) ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NOTIFICATION) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          nt_notification_property_ (_inLexique, var_cas_notif) ;
          GGS_lstring  automatic_var_1 ;
          nt_description_ (_inLexique, automatic_var_1) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          } break ;
        case 4 : {
          { const GGS_action_obj _var_4683 = var_cas_notif_error ; // CAST instruction
            if (_var_4683.getPtr () != NULL) {
              macroValidPointer (_var_4683.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_4683.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NOTIFICATIONERROR attribute already defined") COMMA_SOURCE_FILE_AT_LINE (196)) ;
                var_cas_notif_error.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (196)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("was previously defined here") COMMA_SOURCE_FILE_AT_LINE (197)) ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NOTIFICATIONERROR) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          nt_notification_property_ (_inLexique, var_cas_notif_error) ;
          GGS_lstring  automatic_var_2 ;
          nt_description_ (_inLexique, automatic_var_2) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          } break ;
        case 5 : {
          GGS_lstring  var_cas_app ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ACCESSING_5FAPPLICATION) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_att_token (var_cas_app) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
          GGS_lstring  automatic_var_3 ;
          nt_description_ (_inLexique, automatic_var_3) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          ::routine_add_lstring_unique (_inLexique,  var_cas_acc_apps,  var_cas_app,  GGS_string ("ACCESSING_APPLICATION") COMMA_SOURCE_FILE_AT_LINE (202)) ;
          } break ;
        case 6 : {
          nt_free_field_ (_inLexique, var_cas_others) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_property'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_message_property_goil_obj_message_208_23_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  switch (select_goil_obj_message_1 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FSTATIC_5FINTERNAL) COMMA_HERE) ;
      nt_ssi_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FSTATIC_5FEXTERNAL) COMMA_HERE) ;
      nt_sse_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FDYNAMIC_5FEXTERNAL) COMMA_HERE) ;
      nt_sde_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FZERO_5FINTERNAL) COMMA_HERE) ;
      var_cas_mess_prop = GGS_szi_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FZERO_5FEXTERNAL) COMMA_HERE) ;
      nt_sze_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FZERO_5FINTERNAL) COMMA_HERE) ;
      nt_rzi_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FZERO_5FEXTERNAL) COMMA_HERE) ;
      nt_rze_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 8 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FUNQUEUED_5FINTERNAL) COMMA_HERE) ;
      nt_rui_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 9 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FQUEUED_5FINTERNAL) COMMA_HERE) ;
      nt_rqi_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 10 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FUNQUEUED_5FEXTERNAL) COMMA_HERE) ;
      nt_rue_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FQUEUED_5FEXTERNAL) COMMA_HERE) ;
      nt_rqe_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FDYNAMIC_5FEXTERNAL) COMMA_HERE) ;
      nt_rde_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    case 13 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FZERO_5FSENDERS) COMMA_HERE) ;
      nt_rzs_attributes_ (_inLexique, var_cas_mess_prop) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'notification_property'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_notification_property_goil_obj_message_227_28_ (goil_lexique & _inLexique,
                                GGS_action_obj  &var_cas_notif) {
  switch (select_goil_obj_message_2 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NONE) COMMA_HERE) ;
      var_cas_notif = GGS_void_action ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SETEVENT) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      GGS_bool var_cas_has_task ;
      var_cas_has_task = GGS_bool (false) ;
      GGS_lstring  var_cas_task_name ;
      var_cas_task_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      GGS_bool var_cas_has_event ;
      var_cas_has_event = GGS_bool (false) ;
      GGS_lstring  var_cas_event_name ;
      var_cas_event_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
          switch (select_repeat_goil_obj_message_3 (_inLexique)) {
            case 2 : {
              if ((var_cas_has_task).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("TASK already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (243)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TASK) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
              _inLexique._assignFromAttribute_att_token (var_cas_task_name) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_4 ;
              nt_description_ (_inLexique, automatic_var_4) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
              var_cas_has_task = GGS_bool (true) ;
              } break ;
            case 3 : {
              if ((var_cas_has_event).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("EVENT already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (252)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_EVENT) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
              _inLexique._assignFromAttribute_att_token (var_cas_event_name) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_5 ;
              nt_description_ (_inLexique, automatic_var_5) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
              var_cas_has_event = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      if (((var_cas_has_task)._operator_not ()).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("Task not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (262)) ;
      }
      if (((var_cas_has_event)._operator_not ()).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("Event not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (265)) ;
      }
      var_cas_notif = GGS_setevent_action ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_task_name, var_cas_event_name COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_task_name ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ACTIVATETASK) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TASK) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_att_token (var_cas_task_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_6 ;
      nt_description_ (_inLexique, automatic_var_6) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      var_cas_notif = GGS_activatetask_action ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_task_name COMMA_HERE) ;
      } break ;
    case 4 : {
      GGS_lstring  var_cas_function_name ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COMCALLBACK) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COMCALLBACKNAME) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_a_string (var_cas_function_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_7 ;
      nt_description_ (_inLexique, automatic_var_7) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      var_cas_notif = GGS_callback_action ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_function_name COMMA_HERE) ;
      } break ;
    case 5 : {
      GGS_lstring  var_cas_flag_name ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FLAG) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FLAGNAME) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_a_string (var_cas_flag_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_8 ;
      nt_description_ (_inLexique, automatic_var_8) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      var_cas_notif = GGS_flag_action ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_flag_name COMMA_HERE) ;
      } break ;
    case 6 : {
      GGS_bool var_cas_has_function ;
      var_cas_has_function = GGS_bool (false) ;
      GGS_lstring  var_cas_function_name ;
      var_cas_function_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
      GGS_bool var_cas_has_ipdu ;
      var_cas_has_ipdu = GGS_bool (false) ;
      GGS_luint64  var_cas_ipdu ;
      var_cas_ipdu = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_INMCALLBACK) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
          switch (select_repeat_goil_obj_message_4 (_inLexique)) {
            case 2 : {
              if ((var_cas_has_function).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (298)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_CALLBACKROUTINENAME) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
              _inLexique._assignFromAttribute_a_string (var_cas_function_name) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
              GGS_lstring  automatic_var_9 ;
              nt_description_ (_inLexique, automatic_var_9) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
              var_cas_has_function = GGS_bool (true) ;
              } break ;
            case 3 : {
              if ((var_cas_has_ipdu).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (304)) ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MONITOREDIPDU) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
              _inLexique._assignFromAttribute_integerNumber (var_cas_ipdu) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
              GGS_lstring  automatic_var_10 ;
              nt_description_ (_inLexique, automatic_var_10) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
              var_cas_has_ipdu = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      if (((var_cas_has_function)._operator_not ()).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("Callback not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (311)) ;
      }
      if (((var_cas_has_ipdu)._operator_not ()).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("IPDU not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (314)) ;
      }
      var_cas_notif = GGS_nmcallback_action ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_function_name, var_cas_ipdu COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ssi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_ssi_attributes_goil_obj_message_319_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_cdatatype ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  nt_cdatatype_ (_inLexique, var_cas_cdatatype) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  var_cas_mess_prop = GGS_ssi_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_cdatatype COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sse_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_sse_attributes_goil_obj_message_330_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype ;
  var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype ;
  var_cas_cdatatype = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_transferproperty ;
  var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty ;
  var_cas_transferproperty = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_net_message ;
  var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message ;
  var_cas_net_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_filter ;
  var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter ;
  var_cas_filter = GGS_void_filter ::constructor_new (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_has_net_order_callout ;
  var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout ;
  var_cas_net_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_cpu_order_callout ;
  var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout ;
  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_repeat_goil_obj_message_5 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_cdatatype).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (353)) ;
          }
          nt_cdatatype_ (_inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_transferproperty).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (359)) ;
          }
          nt_transferproperty_ (_inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_net_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (365)) ;
          }
          nt_networkmessage_ (_inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 5 : {
          if ((var_cas_has_filter).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (371)) ;
          }
          nt_filter_ (_inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 6 : {
          if ((var_cas_has_net_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (377)) ;
          }
          nt_networkordercallout_ (_inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 7 : {
          if ((var_cas_has_cpu_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (383)) ;
          }
          nt_cpuordercallout_ (_inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 8 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (389)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_cdatatype)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (396)) ;
  }
  if (((var_cas_has_transferproperty)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("TRANSFERPROPERTY is missing in the message") COMMA_SOURCE_FILE_AT_LINE (399)) ;
  }
  if (((var_cas_has_net_message)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (402)) ;
  }
  var_cas_mess_prop = GGS_sse_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_cdatatype, var_cas_transferproperty, var_cas_filter, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_sde_attributes_goil_obj_message_416_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_transferproperty ;
  var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty ;
  var_cas_transferproperty = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_net_message ;
  var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message ;
  var_cas_net_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_net_order_callout ;
  var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout ;
  var_cas_net_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_cpu_order_callout ;
  var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout ;
  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_repeat_goil_obj_message_6 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_transferproperty).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (435)) ;
          }
          nt_transferproperty_ (_inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_net_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (441)) ;
          }
          nt_networkmessage_ (_inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_net_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (447)) ;
          }
          nt_networkordercallout_ (_inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 5 : {
          if ((var_cas_has_cpu_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (453)) ;
          }
          nt_cpuordercallout_ (_inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 6 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (459)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  var_cas_mess_prop = GGS_sde_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_transferproperty, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_sze_attributes_goil_obj_message_474_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message ;
  var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message ;
  var_cas_net_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_net_order_callout ;
  var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout ;
  var_cas_net_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_cpu_order_callout ;
  var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout ;
  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_repeat_goil_obj_message_7 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_net_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (489)) ;
          }
          nt_networkmessage_ (_inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_net_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (495)) ;
          }
          nt_networkordercallout_ (_inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_cpu_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (501)) ;
          }
          nt_cpuordercallout_ (_inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_net_message)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (508)) ;
  }
  var_cas_mess_prop = GGS_sze_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rzi_attributes_goil_obj_message_517_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_sending_message ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  nt_sendingmessage_ (_inLexique, var_cas_sending_message) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  var_cas_mess_prop = GGS_rzi_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sending_message COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rze_attributes_goil_obj_message_531_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message ;
  var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message ;
  var_cas_net_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_net_order_callout ;
  var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout ;
  var_cas_net_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_cpu_order_callout ;
  var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout ;
  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_repeat_goil_obj_message_8 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_net_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (546)) ;
          }
          nt_networkmessage_ (_inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_net_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (552)) ;
          }
          nt_networkordercallout_ (_inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_cpu_order_callout).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (558)) ;
          }
          nt_cpuordercallout_ (_inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_net_message)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (565)) ;
  }
  var_cas_mess_prop = GGS_rze_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rui_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rui_attributes_goil_obj_message_574_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message ;
  var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message ;
  var_cas_sending_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_filter ;
  var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter ;
  var_cas_filter = GGS_void_filter ::constructor_new (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_goil_obj_message_9 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_sending_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (589)) ;
          }
          nt_sendingmessage_ (_inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_filter).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (595)) ;
          }
          nt_filter_ (_inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (601)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_sending_message)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (608)) ;
  }
  var_cas_mess_prop = GGS_rui_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sending_message, var_cas_filter, var_cas_initial_value COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rqi_attributes_goil_obj_message_617_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message ;
  var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message ;
  var_cas_sending_message = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_filter ;
  var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter ;
  var_cas_filter = GGS_void_filter ::constructor_new (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_has_queue_size ;
  var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size ;
  var_cas_queue_size = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_repeat_goil_obj_message_10 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_sending_message).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (634)) ;
          }
          nt_sendingmessage_ (_inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_filter).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (640)) ;
          }
          nt_filter_ (_inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_queue_size).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (646)) ;
          }
          nt_queuesize_ (_inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (652)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_sending_message)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (659)) ;
  }
  if (((var_cas_has_queue_size)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (662)) ;
  }
  var_cas_mess_prop = GGS_rqi_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_sending_message, var_cas_filter, var_cas_initial_value, var_cas_queue_size COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rue_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rue_attributes_goil_obj_message_672_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype ;
  var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype ;
  var_cas_cdatatype = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_filter ;
  var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter ;
  var_cas_filter = GGS_void_filter ::constructor_new (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_link_obj  var_cas_link ;
  var_cas_link = GGS_void_link ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_repeat_goil_obj_message_11 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_cdatatype).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (688)) ;
          }
          nt_cdatatype_ (_inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_filter).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (694)) ;
          }
          nt_filter_ (_inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          { const GGS_link_obj _var_20284 = var_cas_link ; // CAST instruction
            if (_var_20284.getPtr () != NULL) {
              macroValidPointer (_var_20284.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_20284.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (701)) ;
              }
            }
          }
          nt_link_ (_inLexique, var_cas_link) ;
          } break ;
        case 5 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (706)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_cdatatype)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (713)) ;
  }
  { const GGS_link_obj _var_20759 = var_cas_link ; // CAST instruction
    if (_var_20759.getPtr () != NULL) {
      macroValidPointer (_var_20759.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_20759.getPtr ()))) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (717)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rue_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_cdatatype, var_cas_filter, var_cas_link, var_cas_initial_value COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqe_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rqe_attributes_goil_obj_message_729_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype ;
  var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype ;
  var_cas_cdatatype = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_filter ;
  var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter ;
  var_cas_filter = GGS_void_filter ::constructor_new (_inLexique COMMA_HERE) ;
  GGS_bool var_cas_has_queue_size ;
  var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size ;
  var_cas_queue_size = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_link_obj  var_cas_link ;
  var_cas_link = GGS_void_link ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_repeat_goil_obj_message_12 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_cdatatype).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (747)) ;
          }
          nt_cdatatype_ (_inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_filter).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (753)) ;
          }
          nt_filter_ (_inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          if ((var_cas_has_queue_size).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (759)) ;
          }
          nt_queuesize_ (_inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          { const GGS_link_obj _var_22069 = var_cas_link ; // CAST instruction
            if (_var_22069.getPtr () != NULL) {
              macroValidPointer (_var_22069.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_22069.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (766)) ;
              }
            }
          }
          nt_link_ (_inLexique, var_cas_link) ;
          } break ;
        case 6 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (771)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_cdatatype)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (779)) ;
  }
  if (((var_cas_has_queue_size)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (782)) ;
  }
  { const GGS_link_obj _var_22641 = var_cas_link ; // CAST instruction
    if (_var_22641.getPtr () != NULL) {
      macroValidPointer (_var_22641.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_22641.getPtr ()))) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (786)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rqe_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_cdatatype, var_cas_queue_size, var_cas_filter, var_cas_link, var_cas_initial_value COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rde_attributes_goil_obj_message_800_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_link_obj  var_cas_link ;
  var_cas_link = GGS_void_link ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
      switch (select_repeat_goil_obj_message_13 (_inLexique)) {
        case 2 : {
          { const GGS_link_obj _var_23165 = var_cas_link ; // CAST instruction
            if (_var_23165.getPtr () != NULL) {
              macroValidPointer (_var_23165.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_23165.getPtr ()))) {
              }else{
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (813)) ;
              }
            }
          }
          nt_link_ (_inLexique, var_cas_link) ;
          } break ;
        case 3 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (818)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  { const GGS_link_obj _var_23537 = var_cas_link ; // CAST instruction
    if (_var_23537.getPtr () != NULL) {
      macroValidPointer (_var_23537.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_23537.getPtr ()))) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (827)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rde_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_link, var_cas_initial_value COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzs_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_rzs_attributes_goil_obj_message_838_21_ (goil_lexique & _inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype ;
  var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype ;
  var_cas_cdatatype = GGS_lstring ::constructor_new (_inLexique, GGS_string (""), GGS_location (_inLexique) COMMA_HERE) ;
  GGS_bool var_cas_has_initial_value ;
  var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value ;
  var_cas_initial_value = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_repeat_goil_obj_message_14 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_cdatatype).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (851)) ;
          }
          nt_cdatatype_ (_inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_initial_value).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (857)) ;
          }
          nt_initialvalue_ (_inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_cdatatype)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (865)) ;
  }
  var_cas_mess_prop = GGS_rzs_mess_prop ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_cdatatype, var_cas_initial_value COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'cdatatype'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_cdatatype_goil_obj_message_874_16_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_cdatatype) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_CDATATYPE) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_a_string (var_cas_cdatatype) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_11 ;
  nt_description_ (_inLexique, automatic_var_11) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'transferproperty'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_transferproperty_goil_obj_message_883_23_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_transferproperty) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TRANSFERPROPERTY) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  switch (select_goil_obj_message_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TRIGGERED) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (_inLexique, GGS_string ("triggered"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_PENDING) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (_inLexique, GGS_string ("pending"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_AUTO) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (_inLexique, GGS_string ("auto"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_12 ;
  nt_description_ (_inLexique, automatic_var_12) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'networkmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_networkmessage_goil_obj_message_899_21_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_net_message) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NETWORKMESSAGE) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_att_token (var_cas_net_message) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_13 ;
  nt_description_ (_inLexique, automatic_var_13) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'filter'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_filter_goil_obj_message_908_13_ (goil_lexique & _inLexique,
                                GGS_filter_prop_obj  &var_cas_filter) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FILTER) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  switch (select_goil_obj_message_16 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ALWAYS) COMMA_HERE) ;
      var_cas_filter = GGS_always_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEVER) COMMA_HERE) ;
      var_cas_filter = GGS_never_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWEQUALSX) COMMA_HERE) ;
      nt_mask_x_attribute_ (_inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewequalsx_filter ::constructor_new (_inLexique, var_cas_mask, var_cas_x COMMA_HERE) ;
      } break ;
    case 4 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWDIFFERSX) COMMA_HERE) ;
      nt_mask_x_attribute_ (_inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewdiffersx_filter ::constructor_new (_inLexique, var_cas_mask, var_cas_x COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISEQUAL) COMMA_HERE) ;
      var_cas_filter = GGS_newisequal_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISDIFFERENT) COMMA_HERE) ;
      var_cas_filter = GGS_newisdifferent_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 7 : {
      GGS_luint64  var_cas_mask ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWEQUALSMASKEDOLD) COMMA_HERE) ;
      nt_mask_attribute_ (_inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewequalsmaskedold_filter ::constructor_new (_inLexique, var_cas_mask COMMA_HERE) ;
      } break ;
    case 8 : {
      GGS_luint64  var_cas_mask ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWDIFFERSMASKEDOLD) COMMA_HERE) ;
      nt_mask_attribute_ (_inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewdiffersmaskedold_filter ::constructor_new (_inLexique, var_cas_mask COMMA_HERE) ;
      } break ;
    case 9 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISWITHIN) COMMA_HERE) ;
      nt_min_max_attribute_ (_inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newiswithin ::constructor_new (_inLexique, var_cas_min, var_cas_max COMMA_HERE) ;
      } break ;
    case 10 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISOUTSIDE) COMMA_HERE) ;
      nt_min_max_attribute_ (_inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newisoutside ::constructor_new (_inLexique, var_cas_min, var_cas_max COMMA_HERE) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISGREATER) COMMA_HERE) ;
      var_cas_filter = GGS_newisgreater_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISLESSOREQUAL) COMMA_HERE) ;
      var_cas_filter = GGS_newislessorequal_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 13 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISLESS) COMMA_HERE) ;
      var_cas_filter = GGS_newisless_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 14 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISGREATEROREQUAL) COMMA_HERE) ;
      var_cas_filter = GGS_newisgreaterorequal_filter ::constructor_new (_inLexique COMMA_HERE) ;
      } break ;
    case 15 : {
      GGS_luint64  var_cas_period ;
      GGS_luint64  var_cas_offset ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ONEEVERYN) COMMA_HERE) ;
      nt_period_offset_attribute_ (_inLexique, var_cas_period, var_cas_offset) ;
      var_cas_filter = GGS_oneeveryn_filter ::constructor_new (_inLexique, var_cas_period, var_cas_offset COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_14 ;
  nt_description_ (_inLexique, automatic_var_14) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'mask_x_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_mask_x_attribute_goil_obj_message_974_23_ (goil_lexique & _inLexique,
                                GGS_luint64  &var_cas_mask,
                                GGS_luint64  &var_cas_x) {
  GGS_bool var_cas_has_mask ;
  var_cas_has_mask = GGS_bool (false) ;
  GGS_bool var_cas_has_x ;
  var_cas_has_x = GGS_bool (false) ;
  var_cas_mask = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_x = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
      switch (select_repeat_goil_obj_message_17 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_mask).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MASK is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (988)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASK) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_mask) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_15 ;
          nt_description_ (_inLexique, automatic_var_15) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_mask = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_x).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("X is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (994)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_X) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_x) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_16 ;
          nt_description_ (_inLexique, automatic_var_16) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_x = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_mask)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MASK is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1001)) ;
  }
  if (((var_cas_has_x)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("X is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1004)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'mask_attribute'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_mask_attribute_goil_obj_message_1007_21_ (goil_lexique & _inLexique,
                                GGS_luint64  &var_cas_mask) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASK) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_integerNumber (var_cas_mask) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
  GGS_lstring  automatic_var_17 ;
  nt_description_ (_inLexique, automatic_var_17) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'min_max_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_min_max_attribute_goil_obj_message_1015_24_ (goil_lexique & _inLexique,
                                GGS_luint64  &var_cas_min,
                                GGS_luint64  &var_cas_max) {
  GGS_bool var_cas_has_min ;
  var_cas_has_min = GGS_bool (false) ;
  GGS_bool var_cas_has_max ;
  var_cas_has_max = GGS_bool (false) ;
  var_cas_min = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_max = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_repeat_goil_obj_message_18 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_min).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MIN is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1029)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MIN) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_min) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_18 ;
          nt_description_ (_inLexique, automatic_var_18) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_min = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_max).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MAX is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1035)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MAX) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_max) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_19 ;
          nt_description_ (_inLexique, automatic_var_19) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_max = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_min)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MIN is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1042)) ;
  }
  if (((var_cas_has_max)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("MAX is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1045)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'period_offset_attribute'         *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_period_offset_attribute_goil_obj_message_1048_30_ (goil_lexique & _inLexique,
                                GGS_luint64  &var_cas_period,
                                GGS_luint64  &var_cas_offset) {
  GGS_bool var_cas_has_period ;
  var_cas_has_period = GGS_bool (false) ;
  GGS_bool var_cas_has_offset ;
  var_cas_has_offset = GGS_bool (false) ;
  var_cas_period = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_offset = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (0U), GGS_location (_inLexique) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_repeat_goil_obj_message_19 (_inLexique)) {
        case 2 : {
          if ((var_cas_has_period).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("PERIOD is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1062)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_PERIOD) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_period) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_20 ;
          nt_description_ (_inLexique, automatic_var_20) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_period = GGS_bool (true) ;
          } break ;
        case 3 : {
          if ((var_cas_has_offset).isBuiltAndTrue ()) {
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("OFFSET is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1068)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_OFFSET) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_offset) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          GGS_lstring  automatic_var_21 ;
          nt_description_ (_inLexique, automatic_var_21) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          var_cas_has_offset = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  if (((var_cas_has_period)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("PERIOD is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1075)) ;
  }
  if (((var_cas_has_offset)._operator_not ()).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string ("OFFSET is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1078)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'networkordercallout'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_networkordercallout_goil_obj_message_1081_26_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_net_order_callout) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NETWORKORDERCALLOUT) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_a_string (var_cas_net_order_callout) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_22 ;
  nt_description_ (_inLexique, automatic_var_22) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'cpuordercallout'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_cpuordercallout_goil_obj_message_1090_22_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_cpu_order_callout) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_CPUORDERCALLOUT) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_a_string (var_cas_cpu_order_callout) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_23 ;
  nt_description_ (_inLexique, automatic_var_23) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'initialvalue'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_initialvalue_goil_obj_message_1099_19_ (goil_lexique & _inLexique,
                                GGS_basic_type  &var_cas_initial_value) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_INITIALVALUE) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  switch (select_goil_obj_message_20 (_inLexique)) {
    case 1 : {
      GGS_luint64  var_cas_ival ;
      _inLexique._assignFromAttribute_integerNumber (var_cas_ival) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
      var_cas_initial_value = GGS_uint64_class ::constructor_new (_inLexique, var_cas_ival.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1107)), var_cas_ival.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1107)) COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_ldouble  var_cas_dval ;
      _inLexique._assignFromAttribute_floatNumber (var_cas_dval) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_float_5Fnumber) COMMA_HERE) ;
      var_cas_initial_value = GGS_float_class ::constructor_new (_inLexique, var_cas_dval.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1111)), var_cas_dval.reader_double (_inLexique COMMA_SOURCE_FILE_AT_LINE (1111)) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_sval ;
      _inLexique._assignFromAttribute_a_string (var_cas_sval) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_string) COMMA_HERE) ;
      var_cas_initial_value = GGS_string_class ::constructor_new (_inLexique, var_cas_sval.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1115)), var_cas_sval.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1115)) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_24 ;
  nt_description_ (_inLexique, automatic_var_24) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sendingmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_sendingmessage_goil_obj_message_1120_21_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_sending_message) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SENDINGMESSAGE) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_att_token (var_cas_sending_message) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_25 ;
  nt_description_ (_inLexique, automatic_var_25) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'queuesize'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_queuesize_goil_obj_message_1129_16_ (goil_lexique & _inLexique,
                                GGS_luint64  &var_cas_queue_size) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_QUEUESIZE) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  _inLexique._assignFromAttribute_integerNumber (var_cas_queue_size) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
  GGS_lstring  automatic_var_26 ;
  nt_description_ (_inLexique, automatic_var_26) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'link'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::
pr_link_goil_obj_message_1138_11_ (goil_lexique & _inLexique,
                                GGS_link_obj  &var_cas_link) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_LINK) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
  switch (select_goil_obj_message_21 (_inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_rcv_mess ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TRUE) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVEMESSAGE) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_att_token (var_cas_rcv_mess) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_27 ;
      nt_description_ (_inLexique, automatic_var_27) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      var_cas_link = GGS_true_link ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_rcv_mess COMMA_HERE) ;
      } break ;
    case 2 : {
      GGS_lstring  var_cas_net_mess ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FALSE) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NETWORKMESSAGE) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_att_token (var_cas_net_mess) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_28 ;
      nt_description_ (_inLexique, automatic_var_28) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      var_cas_link = GGS_false_link ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_net_mess COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_29 ;
  nt_description_ (_inLexique, automatic_var_29) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

