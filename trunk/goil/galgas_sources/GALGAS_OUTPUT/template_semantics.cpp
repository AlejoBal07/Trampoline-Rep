//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'template_semantics.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 22th, 2010, at 19h16'51"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "template_semantics.h"
#include "galgas-utilities/C_Compiler.h"
#include "galgas/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateType auto ptr type                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateType::GALGASap_goilTemplateType (const GALGASap_goilTemplateType & inSource) :
GALGASap_enum (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType::GALGASap_goilTemplateType (const GALGASap_object & inSource) :
GALGASap_enum (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateType) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType & GALGASap_goilTemplateType::operator = (const GALGASap_goilTemplateType & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGASap_goilTemplateType::readerCall_messageGoilTemplateType (LOCATION_ARGS) const {
  GALGASap_string result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_messageGoilTemplateType (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateType * GALGASap_goilTemplateType::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateType) ;
    return (GALGAS_goilTemplateType *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateType * GALGASap_goilTemplateType::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateType) ;
    return (const GALGAS_goilTemplateType *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType::GALGASap_goilTemplateType (const GALGAS_goilTemplateType * inSourcePtr) :
GALGASap_enum (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType & GALGASap_goilTemplateType::operator = (GALGAS_goilTemplateType * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType::GALGAS_goilTemplateType (const enumeration inValue
                                                  COMMA_LOCATION_ARGS) :
GALGAS_enum (THERE),
mEnumValue (inValue) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateType::constructor_boolType (LOCATION_ARGS) {
  GALGAS_goilTemplateType * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateType (GALGAS_goilTemplateType::kEnum_boolType COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateType::constructor_unsignedType (LOCATION_ARGS) {
  GALGAS_goilTemplateType * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateType (GALGAS_goilTemplateType::kEnum_unsignedType COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateType::constructor_stringType (LOCATION_ARGS) {
  GALGAS_goilTemplateType * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateType (GALGAS_goilTemplateType::kEnum_stringType COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateType::constructor_listType (LOCATION_ARGS) {
  GALGAS_goilTemplateType * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateType (GALGAS_goilTemplateType::kEnum_listType COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateType::constructor_structType (LOCATION_ARGS) {
  GALGAS_goilTemplateType * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateType (GALGAS_goilTemplateType::kEnum_structType COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_goilTemplateType_messageGoilTemplateType [5] = {
  "bool",
  "unsigned",
  "string",
  "list",
  "struct"
} ;

//---------------------------------------------------------------------------*

GALGASap_string GALGAS_goilTemplateType::reader_messageGoilTemplateType (LOCATION_ARGS) const {
  return GALGASap_string::constructor_new (gEnumNameArrayFor_goilTemplateType_messageGoilTemplateType [mEnumValue] COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_goilTemplateType [5] = {
  "boolType",
  "unsignedType",
  "stringType",
  "listType",
  "structType"
} ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateType::description (C_String & ioString,
                                           const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @goilTemplateType: " << gEnumNameArrayFor_goilTemplateType [mEnumValue] << ">" ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGASap_goilTemplateType::objectCompare (const GALGASap_goilTemplateType & inOperand1,
                                                               const GALGASap_goilTemplateType & inOperand2) {
  enumComparisonResult result = kOperandNotValid ;
  if (inOperand1.isValid () && inOperand2.isValid ()) {
    if (inOperand1.ptr (HERE)->mEnumValue < (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {
      result = kFirstOperandLowerThanSecond ;
    }else if (inOperand1.ptr (HERE)->mEnumValue > (PMSInt32) inOperand2.ptr (HERE)->mEnumValue) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    @goilTemplateType enumeration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateType ("goilTemplateType",
                                         & kTypeDescriptor_GALGAS_enum) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateType::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateType ;
}
//---------------------------------------------------------------------------*
//                                                                           *
//                    @goilTemplateTypeList auto ptr type                    *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList::GALGASap_goilTemplateTypeList (const GALGASap_goilTemplateTypeList & inSource) :
GALGASap_list (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList::GALGASap_goilTemplateTypeList (const GALGASap_object & inSource) :
GALGASap_list (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateTypeList) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList & GALGASap_goilTemplateTypeList::operator = (const GALGASap_goilTemplateTypeList & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateTypeList::readerCall_mTypeAtIndex (const GALGASap_uint & inOperand_0,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateType result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mTypeAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGASap_goilTemplateTypeList::readerCall_subListFromIndex (const GALGASap_uint & inOperand_0,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateTypeList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListFromIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGASap_goilTemplateTypeList::readerCall_subListWithRange (const GALGASap_uint & inOperand_0,
                                                                                          const GALGASap_uint & inOperand_1,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateTypeList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListWithRange (inOperand_0, inOperand_1, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateTypeList * GALGASap_goilTemplateTypeList::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateTypeList) ;
    return (GALGAS_goilTemplateTypeList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateTypeList * GALGASap_goilTemplateTypeList::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateTypeList) ;
    return (const GALGAS_goilTemplateTypeList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList::GALGASap_goilTemplateTypeList (const GALGAS_goilTemplateTypeList * inSourcePtr) :
GALGASap_list (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList & GALGASap_goilTemplateTypeList::operator = (GALGAS_goilTemplateTypeList * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@goilTemplateTypeList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateTypeList : public cCollectionElement {
//--- List attributes
  public : GALGASap_goilTemplateType mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_goilTemplateTypeList (const GALGASap_goilTemplateType & in_mType
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateTypeList::cCollectionElement_goilTemplateTypeList (const GALGASap_goilTemplateType & in_mType
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateTypeList::isValid (void) const {
  return mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateTypeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateTypeList (mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateTypeList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateTypeList::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateTypeList * operand = (cCollectionElement_goilTemplateTypeList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateType::objectCompare (mAttribute_mType, operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * kFieldList_goilTemplateTypeList [1] = {
  & kTypeDescriptor_GALGAS_goilTemplateType
} ;

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList::GALGAS_goilTemplateTypeList (LOCATION_ARGS) :
GALGAS_list (kFieldList_goilTemplateTypeList COMMA_THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGASap_goilTemplateTypeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateTypeList * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateTypeList (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGASap_goilTemplateTypeList::constructor_listWithValue (GALGASap_goilTemplateType & inOperand0
                                                                                        COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateTypeList result (constructor_emptyList (THERE)) ;
  cCollectionElement * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateTypeList (inOperand0 COMMA_THERE)) ;
  capCollectionElement attributes (p) ;
  result.ptr (HERE)->addObject (attributes) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateTypeList newList (constructor_emptyList (THERE)) ;
    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;
    *this = newList ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::addAssign_operation (const GALGASap_goilTemplateType inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid ()) {
    insulate (THERE) ;
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    ptr (HERE)->addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_prependValue (GALGASap_goilTemplateType inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_popFirst (GALGASap_goilTemplateType & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_popLast (GALGASap_goilTemplateType & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::method_first (GALGASap_goilTemplateType & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::method_last (GALGASap_goilTemplateType & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGASap_goilTemplateTypeList::operator_concat (const GALGASap_goilTemplateTypeList & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGASap_goilTemplateTypeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGAS_goilTemplateTypeList::reader_subListWithRange (const GALGASap_uint & inOperand0,
                                                                                    const GALGASap_uint & inOperand1,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateTypeList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGASap_goilTemplateTypeList::constructor_emptyList (THERE) ;
    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateTypeList GALGAS_goilTemplateTypeList::reader_subListFromIndex (const GALGASap_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateTypeList result ;
  if (inIndex.isValid ()) {
    result = GALGASap_goilTemplateTypeList::constructor_emptyList (THERE) ;
    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::dotAssign_operation (const GALGASap_goilTemplateTypeList inOperand
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand.isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_setMTypeAtIndex (GALGASap_goilTemplateType inOperand,
                                                            GALGASap_uint inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    p->mAttribute_mType = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGAS_goilTemplateTypeList::reader_mTypeAtIndex (const GALGASap_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateType result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateTypeList list type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateTypeList ("goilTemplateTypeList",
                                             & kTypeDescriptor_GALGAS_list) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateTypeList::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateTypeList ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::modifierCall_popFirst (GALGASap_goilTemplateType & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popFirst (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::modifierCall_popLast (GALGASap_goilTemplateType & outArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popLast (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::modifierCall_prependValue (GALGASap_goilTemplateType constinArgument0
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_prependValue (constinArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::modifierCall_setMTypeAtIndex (GALGASap_goilTemplateType constinArgument0,
                                                                  GALGASap_uint constinArgument1,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMTypeAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::instanceMethodCall_first (GALGASap_goilTemplateType & outArgument0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_first (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateTypeList::instanceMethodCall_last (GALGASap_goilTemplateType & outArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_last (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                  @goilTemplateTypeList list enumeration                   *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList::cEnumerator::cEnumerator (const GALGASap_goilTemplateTypeList & inEnumeratedObject,
                                                       const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_mType () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateTypeList) ;
  attribute_mType = p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    @goilTemplateFieldMap auto ptr type                    *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap::GALGASap_goilTemplateFieldMap (const GALGASap_goilTemplateFieldMap & inSource) :
GALGASap_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap::GALGASap_goilTemplateFieldMap (const GALGASap_object & inSource) :
GALGASap_map (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateFieldMap) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap & GALGASap_goilTemplateFieldMap::operator = (const GALGASap_goilTemplateFieldMap & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMap::readerCall_mListValueForKey (const GALGASap_string & inOperand_0,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mListValueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGASap_goilTemplateFieldMap::readerCall_mStringValueForKey (const GALGASap_string & inOperand_0,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  GALGASap_string result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mStringValueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateFieldMap::readerCall_mStructValueForKey (const GALGASap_string & inOperand_0,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMap result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mStructValueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateFieldMap::readerCall_mTypeForKey (const GALGASap_string & inOperand_0,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateType result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mTypeForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_uint_36__34_ GALGASap_goilTemplateFieldMap::readerCall_mUnsigned_36__34_ValueForKey (const GALGASap_string & inOperand_0,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGASap_uint_36__34_ result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mUnsigned_36__34_ValueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateFieldMap::readerCall_overriddenMap (LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMap result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_overriddenMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateFieldMap * GALGASap_goilTemplateFieldMap::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateFieldMap) ;
    return (GALGAS_goilTemplateFieldMap *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateFieldMap * GALGASap_goilTemplateFieldMap::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateFieldMap) ;
    return (const GALGAS_goilTemplateFieldMap *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap::GALGASap_goilTemplateFieldMap (const GALGAS_goilTemplateFieldMap * inSourcePtr) :
GALGASap_map (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap & GALGASap_goilTemplateFieldMap::operator = (GALGAS_goilTemplateFieldMap * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@goilTemplateFieldMap' map              *
//                                                                           *
//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateFieldMap::cCollectionElement_goilTemplateFieldMap (const GALGASap_lstring & inKey,
                                                                                  const GALGASap_goilTemplateType & in_mType,
                                                                                  const GALGASap_uint_36__34_ & in_mUnsigned_36__34_Value,
                                                                                  const GALGASap_string & in_mStringValue,
                                                                                  const GALGASap_goilTemplateFieldMapList & in_mListValue,
                                                                                  const GALGASap_goilTemplateFieldMap & in_mStructValue
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElementForMap (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mUnsigned_36__34_Value (in_mUnsigned_36__34_Value),
mAttribute_mStringValue (in_mStringValue),
mAttribute_mListValue (in_mListValue),
mAttribute_mStructValue (in_mStructValue) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateFieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mUnsigned_36__34_Value.isValid () && mAttribute_mStringValue.isValid () && mAttribute_mListValue.isValid () && mAttribute_mStructValue.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateFieldMap::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateFieldMap (mAttribute_lkey, mAttribute_mType, mAttribute_mUnsigned_36__34_Value, mAttribute_mStringValue, mAttribute_mListValue, mAttribute_mStructValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateFieldMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mType.description (ioString, inIndentation) ;
// mAttribute_mUnsigned_36__34_Value.description (ioString, inIndentation) ;
// mAttribute_mStringValue.description (ioString, inIndentation) ;
// mAttribute_mListValue.description (ioString, inIndentation) ;
// mAttribute_mStructValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateFieldMap::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateFieldMap * operand = (cCollectionElement_goilTemplateFieldMap *) inOperand ;
  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateType::objectCompare (mAttribute_mType, operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_uint_36__34_::objectCompare (mAttribute_mUnsigned_36__34_Value, operand->mAttribute_mUnsigned_36__34_Value) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_string::objectCompare (mAttribute_mStringValue, operand->mAttribute_mStringValue) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateFieldMapList::objectCompare (mAttribute_mListValue, operand->mAttribute_mListValue) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateFieldMap::objectCompare (mAttribute_mStructValue, operand->mAttribute_mStructValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap::GALGAS_goilTemplateFieldMap (LOCATION_ARGS) :
GALGAS_map (THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateFieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMap * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateFieldMap (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateFieldMap::constructor_mapWithMapToOverride (GALGASap_goilTemplateFieldMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateFieldMap result ;
  if (inMapToOverride.isValid ()) {
    result = constructor_emptyMap (THERE) ;
    result.ptr (HERE)->mOverridenMap = inMapToOverride ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateFieldMap newMap (constructor_emptyMap (THERE)) ;
    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;
    *this = newMap ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::reader_overriddenMap (LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMap result = mOverridenMap ;
  if (! result.isValid ()) {
    result = GALGASap_goilTemplateFieldMap::constructor_emptyMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_insertKey (GALGASap_lstring inKey,
                                                      GALGASap_goilTemplateType inArgument0,
                                                      GALGASap_uint_36__34_ inArgument1,
                                                      GALGASap_string inArgument2,
                                                      GALGASap_goilTemplateFieldMapList inArgument3,
                                                      GALGASap_goilTemplateFieldMap inArgument4,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes (p) ;
  const utf32 kInsertErrorMessage [54] = {
    TO_UNICODE ('a'),
    TO_UNICODE (' '),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE ('m'),
    TO_UNICODE ('p'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('e'),
    TO_UNICODE ('l'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('a'),
    TO_UNICODE ('m'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_goilTemplateFieldMap_searchKey [38] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::method_searchKey (GALGASap_lstring inKey,
                                                    GALGASap_goilTemplateType & outArgument0,
                                                    GALGASap_uint_36__34_ & outArgument1,
                                                    GALGASap_string & outArgument2,
                                                    GALGASap_goilTemplateFieldMapList & outArgument3,
                                                    GALGASap_goilTemplateFieldMap & outArgument4,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_goilTemplateFieldMap_searchKey COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mUnsigned_36__34_Value ;
    outArgument2 = p->mAttribute_mStringValue ;
    outArgument3 = p->mAttribute_mListValue ;
    outArgument4 = p->mAttribute_mStructValue ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGAS_goilTemplateFieldMap::reader_mTypeForKey (const GALGASap_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateType result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_uint_36__34_ GALGAS_goilTemplateFieldMap::reader_mUnsigned_36__34_ValueForKey (const GALGASap_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  GALGASap_uint_36__34_ result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mUnsigned_36__34_Value ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGAS_goilTemplateFieldMap::reader_mStringValueForKey (const GALGASap_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  GALGASap_string result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mStringValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGAS_goilTemplateFieldMap::reader_mListValueForKey (const GALGASap_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateFieldMapList result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mListValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::reader_mStructValueForKey (const GALGASap_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateFieldMap result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mStructValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMTypeForKey (GALGASap_goilTemplateType inAttributeValue,
                                                           GALGASap_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateFieldMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateFieldMap *", 0, 0) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMUnsigned_36__34_ValueForKey (GALGASap_uint_36__34_ inAttributeValue,
                                                                            GALGASap_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateFieldMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateFieldMap *", 0, 0) ;
    p->mAttribute_mUnsigned_36__34_Value = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMStringValueForKey (GALGASap_string inAttributeValue,
                                                                  GALGASap_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateFieldMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateFieldMap *", 0, 0) ;
    p->mAttribute_mStringValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMListValueForKey (GALGASap_goilTemplateFieldMapList inAttributeValue,
                                                                GALGASap_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateFieldMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateFieldMap *", 0, 0) ;
    p->mAttribute_mListValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMStructValueForKey (GALGASap_goilTemplateFieldMap inAttributeValue,
                                                                  GALGASap_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateFieldMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateFieldMap *", 0, 0) ;
    p->mAttribute_mStructValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGASap_goilTemplateFieldMap & ioMap,
                                                               GALGASap_string & inKey
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGASap_goilTemplateFieldMap & ioMap,
                                                                  GALGASap_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_goilTemplateFieldMap_searchKey COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateFieldMap map type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateFieldMap ("goilTemplateFieldMap",
                                             & kTypeDescriptor_GALGAS_map) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateFieldMap::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateFieldMap ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_insertKey (GALGASap_lstring constinArgument0,
                                                            GALGASap_goilTemplateType constinArgument1,
                                                            GALGASap_uint_36__34_ constinArgument2,
                                                            GALGASap_string constinArgument3,
                                                            GALGASap_goilTemplateFieldMapList constinArgument4,
                                                            GALGASap_goilTemplateFieldMap constinArgument5,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_insertKey (constinArgument0, constinArgument1, constinArgument2, constinArgument3, constinArgument4, constinArgument5, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_setMListValueForKey (GALGASap_goilTemplateFieldMapList constinArgument0,
                                                                      GALGASap_string constinArgument1,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMListValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_setMStringValueForKey (GALGASap_string constinArgument0,
                                                                        GALGASap_string constinArgument1,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMStringValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_setMStructValueForKey (GALGASap_goilTemplateFieldMap constinArgument0,
                                                                        GALGASap_string constinArgument1,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMStructValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_setMTypeForKey (GALGASap_goilTemplateType constinArgument0,
                                                                 GALGASap_string constinArgument1,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMTypeForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::modifierCall_setMUnsigned_36__34_ValueForKey (GALGASap_uint_36__34_ constinArgument0,
                                                                                  GALGASap_string constinArgument1,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMUnsigned_36__34_ValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMap::instanceMethodCall_searchKey (GALGASap_lstring constinArgument0,
                                                                  GALGASap_goilTemplateType & outArgument1,
                                                                  GALGASap_uint_36__34_ & outArgument2,
                                                                  GALGASap_string & outArgument3,
                                                                  GALGASap_goilTemplateFieldMapList & outArgument4,
                                                                  GALGASap_goilTemplateFieldMap & outArgument5,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
  outArgument2.drop () ;
  outArgument3.drop () ;
  outArgument4.drop () ;
  outArgument5.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_searchKey (constinArgument0, outArgument1, outArgument2, outArgument3, outArgument4, outArgument5, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                   @goilTemplateFieldMap map enumeration                   *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap::cEnumerator::cEnumerator (const GALGASap_goilTemplateFieldMap & inEnumeratedObject,
                                                       const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_lkey (),
attribute_mType (),
attribute_mUnsigned_36__34_Value (),
attribute_mStringValue (),
attribute_mListValue (),
attribute_mStructValue () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateFieldMap * p = (cCollectionElement_goilTemplateFieldMap *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateFieldMap) ;
  attribute_lkey = p->mAttribute_lkey ;
  attribute_mType = p->mAttribute_mType ;
  attribute_mUnsigned_36__34_Value = p->mAttribute_mUnsigned_36__34_Value ;
  attribute_mStringValue = p->mAttribute_mStringValue ;
  attribute_mListValue = p->mAttribute_mListValue ;
  attribute_mStructValue = p->mAttribute_mStructValue ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  @goilTemplateFieldMapList auto ptr type                  *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList::GALGASap_goilTemplateFieldMapList (const GALGASap_goilTemplateFieldMapList & inSource) :
GALGASap_list (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList::GALGASap_goilTemplateFieldMapList (const GALGASap_object & inSource) :
GALGASap_list (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateFieldMapList) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList & GALGASap_goilTemplateFieldMapList::operator = (const GALGASap_goilTemplateFieldMapList & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateFieldMapList::readerCall_mMapAtIndex (const GALGASap_uint & inOperand_0,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMap result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mMapAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMapList::readerCall_subListFromIndex (const GALGASap_uint & inOperand_0,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListFromIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMapList::readerCall_subListWithRange (const GALGASap_uint & inOperand_0,
                                                                                                  const GALGASap_uint & inOperand_1,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListWithRange (inOperand_0, inOperand_1, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateFieldMapList * GALGASap_goilTemplateFieldMapList::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateFieldMapList) ;
    return (GALGAS_goilTemplateFieldMapList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateFieldMapList * GALGASap_goilTemplateFieldMapList::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateFieldMapList) ;
    return (const GALGAS_goilTemplateFieldMapList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList::GALGASap_goilTemplateFieldMapList (const GALGAS_goilTemplateFieldMapList * inSourcePtr) :
GALGASap_list (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList & GALGASap_goilTemplateFieldMapList::operator = (GALGAS_goilTemplateFieldMapList * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for element of '@goilTemplateFieldMapList' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateFieldMapList : public cCollectionElement {
//--- List attributes
  public : GALGASap_goilTemplateFieldMap mAttribute_mMap ;

//--- Constructor
  public : cCollectionElement_goilTemplateFieldMapList (const GALGASap_goilTemplateFieldMap & in_mMap
                                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateFieldMapList::cCollectionElement_goilTemplateFieldMapList (const GALGASap_goilTemplateFieldMap & in_mMap
                                                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mMap (in_mMap) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateFieldMapList::isValid (void) const {
  return mAttribute_mMap.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateFieldMapList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateFieldMapList (mAttribute_mMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateFieldMapList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateFieldMapList::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateFieldMapList * operand = (cCollectionElement_goilTemplateFieldMapList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateFieldMap::objectCompare (mAttribute_mMap, operand->mAttribute_mMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * kFieldList_goilTemplateFieldMapList [1] = {
  & kTypeDescriptor_GALGAS_goilTemplateFieldMap
} ;

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList::GALGAS_goilTemplateFieldMapList (LOCATION_ARGS) :
GALGAS_list (kFieldList_goilTemplateFieldMapList COMMA_THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMapList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMapList * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateFieldMapList (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMapList::constructor_listWithValue (GALGASap_goilTemplateFieldMap & inOperand0
                                                                                                COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateFieldMapList result (constructor_emptyList (THERE)) ;
  cCollectionElement * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (inOperand0 COMMA_THERE)) ;
  capCollectionElement attributes (p) ;
  result.ptr (HERE)->addObject (attributes) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateFieldMapList newList (constructor_emptyList (THERE)) ;
    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;
    *this = newList ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::addAssign_operation (const GALGASap_goilTemplateFieldMap inOperand0
                                                             COMMA_LOCATION_ARGS) {
  if (isValid ()) {
    insulate (THERE) ;
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    ptr (HERE)->addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_prependValue (GALGASap_goilTemplateFieldMap inOperand0
                                                             COMMA_LOCATION_ARGS) {
  if (inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_popFirst (GALGASap_goilTemplateFieldMap & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_popLast (GALGASap_goilTemplateFieldMap & outOperand0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::method_first (GALGASap_goilTemplateFieldMap & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::method_last (GALGASap_goilTemplateFieldMap & outOperand0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateFieldMapList::operator_concat (const GALGASap_goilTemplateFieldMapList & inOperand
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::reader_subListWithRange (const GALGASap_uint & inOperand0,
                                                                                            const GALGASap_uint & inOperand1,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGASap_goilTemplateFieldMapList::constructor_emptyList (THERE) ;
    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::reader_subListFromIndex (const GALGASap_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateFieldMapList result ;
  if (inIndex.isValid ()) {
    result = GALGASap_goilTemplateFieldMapList::constructor_emptyList (THERE) ;
    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::dotAssign_operation (const GALGASap_goilTemplateFieldMapList inOperand
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand.isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_setMMapAtIndex (GALGASap_goilTemplateFieldMap inOperand,
                                                               GALGASap_uint inIndex,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    p->mAttribute_mMap = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGAS_goilTemplateFieldMapList::reader_mMapAtIndex (const GALGASap_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateFieldMap result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    result = p->mAttribute_mMap ;
  }
  return result ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @goilTemplateFieldMapList list type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateFieldMapList ("goilTemplateFieldMapList",
                                                 & kTypeDescriptor_GALGAS_list) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateFieldMapList::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateFieldMapList ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::modifierCall_popFirst (GALGASap_goilTemplateFieldMap & outArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popFirst (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::modifierCall_popLast (GALGASap_goilTemplateFieldMap & outArgument0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popLast (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::modifierCall_prependValue (GALGASap_goilTemplateFieldMap constinArgument0
                                                                   COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_prependValue (constinArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::modifierCall_setMMapAtIndex (GALGASap_goilTemplateFieldMap constinArgument0,
                                                                     GALGASap_uint constinArgument1,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMMapAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::instanceMethodCall_first (GALGASap_goilTemplateFieldMap & outArgument0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_first (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateFieldMapList::instanceMethodCall_last (GALGASap_goilTemplateFieldMap & outArgument0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_last (outArgument0, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                @goilTemplateFieldMapList list enumeration                 *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList::cEnumerator::cEnumerator (const GALGASap_goilTemplateFieldMapList & inEnumeratedObject,
                                                           const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_mMap () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateFieldMapList) ;
  attribute_mMap = p->mAttribute_mMap ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue::GALGASap_goilTemplateValue (void) :
mAttribute_mUnsigned_36__34_Value (),
mAttribute_mStringValue (),
mAttribute_mMapListValue (),
mAttribute_mStructValue () {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue::GALGASap_goilTemplateValue (const GALGASap_goilTemplateValue & inSource) :
mAttribute_mUnsigned_36__34_Value (inSource.mAttribute_mUnsigned_36__34_Value),
mAttribute_mStringValue (inSource.mAttribute_mStringValue),
mAttribute_mMapListValue (inSource.mAttribute_mMapListValue),
mAttribute_mStructValue (inSource.mAttribute_mStructValue) {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue::GALGAS_goilTemplateValue (const GALGASap_uint_36__34_ & inOperand0,
                                                    const GALGASap_string & inOperand1,
                                                    const GALGASap_goilTemplateFieldMapList & inOperand2,
                                                    const GALGASap_goilTemplateFieldMap & inOperand3 
                                                    COMMA_LOCATION_ARGS) :
GALGAS_struct (THERE),
mAttribute_mUnsigned_36__34_Value (inOperand0),
mAttribute_mStringValue (inOperand1),
mAttribute_mMapListValue (inOperand2),
mAttribute_mStructValue (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue & GALGASap_goilTemplateValue::operator = (const GALGASap_goilTemplateValue & inOperand) {
  mAttribute_mUnsigned_36__34_Value = inOperand.mAttribute_mUnsigned_36__34_Value ;
  mAttribute_mStringValue = inOperand.mAttribute_mStringValue ;
  mAttribute_mMapListValue = inOperand.mAttribute_mMapListValue ;
  mAttribute_mStructValue = inOperand.mAttribute_mStructValue ;
  return *this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGASap_goilTemplateValue::constructor_new (const GALGASap_uint_36__34_ & inOperand0,
                                                                        const GALGASap_string & inOperand1,
                                                                        const GALGASap_goilTemplateFieldMapList & inOperand2,
                                                                        const GALGASap_goilTemplateFieldMap & inOperand3 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGASap_goilTemplateValue result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGASap_goilTemplateValue (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue::GALGASap_goilTemplateValue (const GALGASap_uint_36__34_ & inOperand0,
                                                        const GALGASap_string & inOperand1,
                                                        const GALGASap_goilTemplateFieldMapList & inOperand2,
                                                        const GALGASap_goilTemplateFieldMap & inOperand3) :
mAttribute_mUnsigned_36__34_Value (inOperand0),
mAttribute_mStringValue (inOperand1),
mAttribute_mMapListValue (inOperand2),
mAttribute_mStructValue (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue::~ GALGAS_goilTemplateValue (void) {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateValue::description (C_String & ioString,
                                            const PMSInt32 inIndentation) const {
  ioString << "<struct @goilTemplateValue:" ;
  mAttribute_mUnsigned_36__34_Value.ptr (HERE)->description (ioString, inIndentation  + 1) ;
  ioString << ", " ;
  mAttribute_mStringValue.ptr (HERE)->description (ioString, inIndentation  + 1) ;
  ioString << ", " ;
  mAttribute_mMapListValue.ptr (HERE)->description (ioString, inIndentation  + 1) ;
  ioString << ", " ;
  mAttribute_mStructValue.ptr (HERE)->description (ioString, inIndentation  + 1) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGASap_uint_36__34_ GALGASap_goilTemplateValue::readerCall_mUnsigned_36__34_Value (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUnsigned_36__34_Value ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGASap_goilTemplateValue::readerCall_mStringValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringValue ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMapList GALGASap_goilTemplateValue::readerCall_mMapListValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMapListValue ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateFieldMap GALGASap_goilTemplateValue::readerCall_mStructValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStructValue ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGASap_goilTemplateValue::objectCompare (const GALGASap_goilTemplateValue & inOperand1,
                                                                const GALGASap_goilTemplateValue & inOperand2) {
   enumComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = GALGASap_uint_36__34_::objectCompare (inOperand1.mAttribute_mUnsigned_36__34_Value, inOperand2.mAttribute_mUnsigned_36__34_Value) ;
  }
  if (result == kOperandEqual) {
    result = GALGASap_string::objectCompare (inOperand1.mAttribute_mStringValue, inOperand2.mAttribute_mStringValue) ;
  }
  if (result == kOperandEqual) {
    result = GALGASap_goilTemplateFieldMapList::objectCompare (inOperand1.mAttribute_mMapListValue, inOperand2.mAttribute_mMapListValue) ;
  }
  if (result == kOperandEqual) {
    result = GALGASap_goilTemplateFieldMap::objectCompare (inOperand1.mAttribute_mStructValue, inOperand2.mAttribute_mStructValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGASap_goilTemplateValue::isValid (void) const {
  return mAttribute_mUnsigned_36__34_Value.isValid () && mAttribute_mStringValue.isValid () && mAttribute_mMapListValue.isValid () && mAttribute_mStructValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateValue::drop (void) {
  mAttribute_mUnsigned_36__34_Value.drop () ;
  mAttribute_mStringValue.drop () ;
  mAttribute_mMapListValue.drop () ;
  mAttribute_mStructValue.drop () ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue::GALGASap_goilTemplateValue (const GALGASap_object & inSource) :
mAttribute_mUnsigned_36__34_Value (),
                                                                mAttribute_mStringValue (),
                                                                mAttribute_mMapListValue (),
                                                                mAttribute_mStructValue () {
  const GALGAS_object * object = inSource.ptrNoVerif () ;
  if (NULL != object) {
    macroValidObject (object, const GALGAS_goilTemplateValue) ;
    const GALGAS_goilTemplateValue * p = (GALGAS_goilTemplateValue *) object ;
    mAttribute_mUnsigned_36__34_Value = p->mAttribute_mUnsigned_36__34_Value ;
    mAttribute_mStringValue = p->mAttribute_mStringValue ;
    mAttribute_mMapListValue = p->mAttribute_mMapListValue ;
    mAttribute_mStructValue = p->mAttribute_mStructValue ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_object GALGASap_goilTemplateValue::embedObject (void) const {
  GALGAS_object * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateValue (mAttribute_mUnsigned_36__34_Value, mAttribute_mStringValue, mAttribute_mMapListValue, mAttribute_mStructValue COMMA_HERE)) ;
  }
  return GALGASap_object (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateValue struct type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateValue ("goilTemplateValue",
                                          & kTypeDescriptor_GALGAS_struct) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateValue::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateValue ;
}
//---------------------------------------------------------------------------*
//                                                                           *
//                  @goilTemplateVariableMap auto ptr type                   *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap::GALGASap_goilTemplateVariableMap (const GALGASap_goilTemplateVariableMap & inSource) :
GALGASap_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap::GALGASap_goilTemplateVariableMap (const GALGASap_object & inSource) :
GALGASap_map (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateVariableMap) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap & GALGASap_goilTemplateVariableMap::operator = (const GALGASap_goilTemplateVariableMap & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateVariableMap::readerCall_mTypeForKey (const GALGASap_string & inOperand_0,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateType result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mTypeForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGASap_goilTemplateVariableMap::readerCall_mValueForKey (const GALGASap_string & inOperand_0,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateValue result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mValueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap GALGASap_goilTemplateVariableMap::readerCall_overriddenMap (LOCATION_ARGS) const {
  GALGASap_goilTemplateVariableMap result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_overriddenMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateVariableMap * GALGASap_goilTemplateVariableMap::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateVariableMap) ;
    return (GALGAS_goilTemplateVariableMap *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateVariableMap * GALGASap_goilTemplateVariableMap::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateVariableMap) ;
    return (const GALGAS_goilTemplateVariableMap *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap::GALGASap_goilTemplateVariableMap (const GALGAS_goilTemplateVariableMap * inSourcePtr) :
GALGASap_map (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap & GALGASap_goilTemplateVariableMap::operator = (GALGAS_goilTemplateVariableMap * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Class for element of '@goilTemplateVariableMap' map            *
//                                                                           *
//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateVariableMap::cCollectionElement_goilTemplateVariableMap (const GALGASap_lstring & inKey,
                                                                                        const GALGASap_goilTemplateType & in_mType,
                                                                                        const GALGASap_goilTemplateValue & in_mValue
                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElementForMap (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateVariableMap::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateVariableMap (mAttribute_lkey, mAttribute_mType, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateVariableMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mType.description (ioString, inIndentation) ;
// mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateVariableMap::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateVariableMap * operand = (cCollectionElement_goilTemplateVariableMap *) inOperand ;
  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateType::objectCompare (mAttribute_mType, operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateValue::objectCompare (mAttribute_mValue, operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap::GALGAS_goilTemplateVariableMap (LOCATION_ARGS) :
GALGAS_map (THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap GALGASap_goilTemplateVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_goilTemplateVariableMap * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateVariableMap (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap GALGASap_goilTemplateVariableMap::constructor_mapWithMapToOverride (GALGASap_goilTemplateVariableMap & inMapToOverride
                                                                                                     COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateVariableMap result ;
  if (inMapToOverride.isValid ()) {
    result = constructor_emptyMap (THERE) ;
    result.ptr (HERE)->mOverridenMap = inMapToOverride ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateVariableMap newMap (constructor_emptyMap (THERE)) ;
    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;
    *this = newMap ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateVariableMap GALGAS_goilTemplateVariableMap::reader_overriddenMap (LOCATION_ARGS) const {
  GALGASap_goilTemplateVariableMap result = mOverridenMap ;
  if (! result.isValid ()) {
    result = GALGASap_goilTemplateVariableMap::constructor_emptyMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_insertKey (GALGASap_lstring inKey,
                                                         GALGASap_goilTemplateType inArgument0,
                                                         GALGASap_goilTemplateValue inArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateVariableMap * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateVariableMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes (p) ;
  const utf32 kInsertErrorMessage [57] = {
    TO_UNICODE ('a'),
    TO_UNICODE (' '),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE ('m'),
    TO_UNICODE ('p'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('v'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('i'),
    TO_UNICODE ('a'),
    TO_UNICODE ('b'),
    TO_UNICODE ('l'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('a'),
    TO_UNICODE ('m'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_goilTemplateVariableMap_searchKey [41] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('v'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('a'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::method_searchKey (GALGASap_lstring inKey,
                                                       GALGASap_goilTemplateType & outArgument0,
                                                       GALGASap_goilTemplateValue & outArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_goilTemplateVariableMap_searchKey COMMA_THERE) ;
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateVariableMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_removeKey (GALGASap_lstring inKey,
                                                         GALGASap_goilTemplateType & outArgument0,
                                                         GALGASap_goilTemplateValue & outArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  const utf32 kRemoveErrorMessage [41] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('o'),
    TO_UNICODE (' '),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE ('m'),
    TO_UNICODE ('p'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('v'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('i'),
    TO_UNICODE ('a'),
    TO_UNICODE ('b'),
    TO_UNICODE ('l'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('a'),
    TO_UNICODE ('m'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (0)
  } ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateVariableMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGAS_goilTemplateVariableMap::reader_mTypeForKey (const GALGASap_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateType result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateVariableMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGAS_goilTemplateVariableMap::reader_mValueForKey (const GALGASap_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateValue result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateVariableMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_setMTypeForKey (GALGASap_goilTemplateType inAttributeValue,
                                                              GALGASap_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateVariableMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateVariableMap *", 0, 0) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_setMValueForKey (GALGASap_goilTemplateValue inAttributeValue,
                                                               GALGASap_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_goilTemplateVariableMap *> (p) != NULL, "p is not an instance of cCollectionElement_goilTemplateVariableMap *", 0, 0) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGASap_goilTemplateVariableMap & ioMap,
                                                               GALGASap_string & inKey
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGASap_goilTemplateVariableMap & ioMap,
                                                                  GALGASap_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_goilTemplateVariableMap_searchKey COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     @goilTemplateVariableMap map type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateVariableMap ("goilTemplateVariableMap",
                                                & kTypeDescriptor_GALGAS_map) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateVariableMap::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateVariableMap ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::modifierCall_insertKey (GALGASap_lstring constinArgument0,
                                                               GALGASap_goilTemplateType constinArgument1,
                                                               GALGASap_goilTemplateValue constinArgument2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_insertKey (constinArgument0, constinArgument1, constinArgument2, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::modifierCall_removeKey (GALGASap_lstring constinArgument0,
                                                               GALGASap_goilTemplateType & outArgument1,
                                                               GALGASap_goilTemplateValue & outArgument2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
  outArgument2.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_removeKey (constinArgument0, outArgument1, outArgument2, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::modifierCall_setMTypeForKey (GALGASap_goilTemplateType constinArgument0,
                                                                    GALGASap_string constinArgument1,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMTypeForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::modifierCall_setMValueForKey (GALGASap_goilTemplateValue constinArgument0,
                                                                     GALGASap_string constinArgument1,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateVariableMap::instanceMethodCall_searchKey (GALGASap_lstring constinArgument0,
                                                                     GALGASap_goilTemplateType & outArgument1,
                                                                     GALGASap_goilTemplateValue & outArgument2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
  outArgument2.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_searchKey (constinArgument0, outArgument1, outArgument2, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                 @goilTemplateVariableMap map enumeration                  *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap::cEnumerator::cEnumerator (const GALGASap_goilTemplateVariableMap & inEnumeratedObject,
                                                          const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_lkey (),
attribute_mType (),
attribute_mValue () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateVariableMap * p = (cCollectionElement_goilTemplateVariableMap *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateVariableMap) ;
  attribute_lkey = p->mAttribute_lkey ;
  attribute_mType = p->mAttribute_mType ;
  attribute_mValue = p->mAttribute_mValue ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 @goilTemplateExpressionList auto ptr type                 *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList::GALGASap_goilTemplateExpressionList (const GALGASap_goilTemplateExpressionList & inSource) :
GALGASap_list (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList::GALGASap_goilTemplateExpressionList (const GALGASap_object & inSource) :
GALGASap_list (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateExpressionList) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList & GALGASap_goilTemplateExpressionList::operator = (const GALGASap_goilTemplateExpressionList & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGASap_goilTemplateExpressionList::readerCall_mTypeAtIndex (const GALGASap_uint & inOperand_0,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateType result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mTypeAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGASap_goilTemplateExpressionList::readerCall_mValueAtIndex (const GALGASap_uint & inOperand_0,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateValue result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mValueAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGASap_goilTemplateExpressionList::readerCall_subListFromIndex (const GALGASap_uint & inOperand_0,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateExpressionList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListFromIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGASap_goilTemplateExpressionList::readerCall_subListWithRange (const GALGASap_uint & inOperand_0,
                                                                                                      const GALGASap_uint & inOperand_1,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateExpressionList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListWithRange (inOperand_0, inOperand_1, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateExpressionList * GALGASap_goilTemplateExpressionList::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateExpressionList) ;
    return (GALGAS_goilTemplateExpressionList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateExpressionList * GALGASap_goilTemplateExpressionList::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateExpressionList) ;
    return (const GALGAS_goilTemplateExpressionList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList::GALGASap_goilTemplateExpressionList (const GALGAS_goilTemplateExpressionList * inSourcePtr) :
GALGASap_list (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList & GALGASap_goilTemplateExpressionList::operator = (GALGAS_goilTemplateExpressionList * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@goilTemplateExpressionList' list          *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateExpressionList : public cCollectionElement {
//--- List attributes
  public : GALGASap_goilTemplateValue mAttribute_mValue ;
  public : GALGASap_goilTemplateType mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_goilTemplateExpressionList (const GALGASap_goilTemplateValue & in_mValue,
                                                          const GALGASap_goilTemplateType & in_mType
                                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateExpressionList::cCollectionElement_goilTemplateExpressionList (const GALGASap_goilTemplateValue & in_mValue,
                                                                                              const GALGASap_goilTemplateType & in_mType
                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mValue (in_mValue),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateExpressionList::isValid (void) const {
  return mAttribute_mValue.isValid () && mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateExpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateExpressionList (mAttribute_mValue, mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateExpressionList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mValue.description (ioString, inIndentation) ;
// mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateExpressionList::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateExpressionList * operand = (cCollectionElement_goilTemplateExpressionList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateValue::objectCompare (mAttribute_mValue, operand->mAttribute_mValue) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateType::objectCompare (mAttribute_mType, operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * kFieldList_goilTemplateExpressionList [2] = {
  & kTypeDescriptor_GALGAS_goilTemplateValue,
  & kTypeDescriptor_GALGAS_goilTemplateType
} ;

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList::GALGAS_goilTemplateExpressionList (LOCATION_ARGS) :
GALGAS_list (kFieldList_goilTemplateExpressionList COMMA_THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGASap_goilTemplateExpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateExpressionList * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateExpressionList (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGASap_goilTemplateExpressionList::constructor_listWithValue (GALGASap_goilTemplateValue & inOperand0,
                                                                                                    GALGASap_goilTemplateType & inOperand1
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateExpressionList result (constructor_emptyList (THERE)) ;
  cCollectionElement * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
  capCollectionElement attributes (p) ;
  result.ptr (HERE)->addObject (attributes) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateExpressionList newList (constructor_emptyList (THERE)) ;
    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;
    *this = newList ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::addAssign_operation (const GALGASap_goilTemplateValue inOperand0,
                                                               const GALGASap_goilTemplateType inOperand1
                                                               COMMA_LOCATION_ARGS) {
  if (isValid ()) {
    insulate (THERE) ;
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    ptr (HERE)->addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_prependValue (GALGASap_goilTemplateValue inOperand0,
                                                               GALGASap_goilTemplateType inOperand1
                                                               COMMA_LOCATION_ARGS) {
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_popFirst (GALGASap_goilTemplateValue & outOperand0,
                                                           GALGASap_goilTemplateType & outOperand1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_popLast (GALGASap_goilTemplateValue & outOperand0,
                                                          GALGASap_goilTemplateType & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::method_first (GALGASap_goilTemplateValue & outOperand0,
                                                      GALGASap_goilTemplateType & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::method_last (GALGASap_goilTemplateValue & outOperand0,
                                                     GALGASap_goilTemplateType & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGASap_goilTemplateExpressionList::operator_concat (const GALGASap_goilTemplateExpressionList & inOperand
                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGASap_goilTemplateExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::reader_subListWithRange (const GALGASap_uint & inOperand0,
                                                                                                const GALGASap_uint & inOperand1,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateExpressionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGASap_goilTemplateExpressionList::constructor_emptyList (THERE) ;
    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::reader_subListFromIndex (const GALGASap_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateExpressionList result ;
  if (inIndex.isValid ()) {
    result = GALGASap_goilTemplateExpressionList::constructor_emptyList (THERE) ;
    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::dotAssign_operation (const GALGASap_goilTemplateExpressionList inOperand
                                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand.isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_setMValueAtIndex (GALGASap_goilTemplateValue inOperand,
                                                                   GALGASap_uint inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    p->mAttribute_mValue = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_setMTypeAtIndex (GALGASap_goilTemplateType inOperand,
                                                                  GALGASap_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    p->mAttribute_mType = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGAS_goilTemplateExpressionList::reader_mValueAtIndex (const GALGASap_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateValue result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateType GALGAS_goilTemplateExpressionList::reader_mTypeAtIndex (const GALGASap_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateType result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @goilTemplateExpressionList list type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateExpressionList ("goilTemplateExpressionList",
                                                   & kTypeDescriptor_GALGAS_list) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateExpressionList::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateExpressionList ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::modifierCall_popFirst (GALGASap_goilTemplateValue & outArgument0,
                                                                 GALGASap_goilTemplateType & outArgument1,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popFirst (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::modifierCall_popLast (GALGASap_goilTemplateValue & outArgument0,
                                                                GALGASap_goilTemplateType & outArgument1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popLast (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::modifierCall_prependValue (GALGASap_goilTemplateValue constinArgument0,
                                                                     GALGASap_goilTemplateType constinArgument1
                                                                     COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_prependValue (constinArgument0, constinArgument1 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::modifierCall_setMTypeAtIndex (GALGASap_goilTemplateType constinArgument0,
                                                                        GALGASap_uint constinArgument1,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMTypeAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::modifierCall_setMValueAtIndex (GALGASap_goilTemplateValue constinArgument0,
                                                                         GALGASap_uint constinArgument1,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMValueAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::instanceMethodCall_first (GALGASap_goilTemplateValue & outArgument0,
                                                                    GALGASap_goilTemplateType & outArgument1,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_first (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateExpressionList::instanceMethodCall_last (GALGASap_goilTemplateValue & outArgument0,
                                                                   GALGASap_goilTemplateType & outArgument1,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_last (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//               @goilTemplateExpressionList list enumeration                *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList::cEnumerator::cEnumerator (const GALGASap_goilTemplateExpressionList & inEnumeratedObject,
                                                             const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_mValue (),
attribute_mType () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateExpressionList) ;
  attribute_mValue = p->mAttribute_mValue ;
  attribute_mType = p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 @goilTemplateEnumationList auto ptr type                  *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList::GALGASap_goilTemplateEnumationList (const GALGASap_goilTemplateEnumationList & inSource) :
GALGASap_list (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList::GALGASap_goilTemplateEnumationList (const GALGASap_object & inSource) :
GALGASap_list (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_goilTemplateEnumationList) ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList & GALGASap_goilTemplateEnumationList::operator = (const GALGASap_goilTemplateEnumationList & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGASap_goilTemplateEnumationList::readerCall_mEnumeratedValueAtIndex (const GALGASap_uint & inOperand_0,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateValue result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mEnumeratedValueAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGASap_goilTemplateEnumationList::readerCall_mPrefixAtIndex (const GALGASap_uint & inOperand_0,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGASap_string result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_mPrefixAtIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGASap_goilTemplateEnumationList::readerCall_subListFromIndex (const GALGASap_uint & inOperand_0,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateEnumationList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListFromIndex (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGASap_goilTemplateEnumationList::readerCall_subListWithRange (const GALGASap_uint & inOperand_0,
                                                                                                    const GALGASap_uint & inOperand_1,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateEnumationList result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_subListWithRange (inOperand_0, inOperand_1, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_goilTemplateEnumationList * GALGASap_goilTemplateEnumationList::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_goilTemplateEnumationList) ;
    return (GALGAS_goilTemplateEnumationList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_goilTemplateEnumationList * GALGASap_goilTemplateEnumationList::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_goilTemplateEnumationList) ;
    return (const GALGAS_goilTemplateEnumationList *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList::GALGASap_goilTemplateEnumationList (const GALGAS_goilTemplateEnumationList * inSourcePtr) :
GALGASap_list (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList & GALGASap_goilTemplateEnumationList::operator = (GALGAS_goilTemplateEnumationList * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@goilTemplateEnumationList' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateEnumationList : public cCollectionElement {
//--- List attributes
  public : GALGASap_goilTemplateValue mAttribute_mEnumeratedValue ;
  public : GALGASap_string mAttribute_mPrefix ;

//--- Constructor
  public : cCollectionElement_goilTemplateEnumationList (const GALGASap_goilTemplateValue & in_mEnumeratedValue,
                                                         const GALGASap_string & in_mPrefix
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateEnumationList::cCollectionElement_goilTemplateEnumationList (const GALGASap_goilTemplateValue & in_mEnumeratedValue,
                                                                                            const GALGASap_string & in_mPrefix
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mEnumeratedValue (in_mEnumeratedValue),
mAttribute_mPrefix (in_mPrefix) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateEnumationList::isValid (void) const {
  return mAttribute_mEnumeratedValue.isValid () && mAttribute_mPrefix.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateEnumationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateEnumationList (mAttribute_mEnumeratedValue, mAttribute_mPrefix COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateEnumationList::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mEnumeratedValue.description (ioString, inIndentation) ;
// mAttribute_mPrefix.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_goilTemplateEnumationList::compare (const cCollectionElement * inOperand) {
  cCollectionElement_goilTemplateEnumationList * operand = (cCollectionElement_goilTemplateEnumationList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = GALGASap_goilTemplateValue::objectCompare (mAttribute_mEnumeratedValue, operand->mAttribute_mEnumeratedValue) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_string::objectCompare (mAttribute_mPrefix, operand->mAttribute_mPrefix) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * kFieldList_goilTemplateEnumationList [2] = {
  & kTypeDescriptor_GALGAS_goilTemplateValue,
  & kTypeDescriptor_GALGAS_string
} ;

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList::GALGAS_goilTemplateEnumationList (LOCATION_ARGS) :
GALGAS_list (kFieldList_goilTemplateEnumationList COMMA_THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGASap_goilTemplateEnumationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateEnumationList * result = NULL ;
  macroMyNew (result, GALGAS_goilTemplateEnumationList (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGASap_goilTemplateEnumationList::constructor_listWithValue (GALGASap_goilTemplateValue & inOperand0,
                                                                                                  GALGASap_string & inOperand1
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGASap_goilTemplateEnumationList result (constructor_emptyList (THERE)) ;
  cCollectionElement * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateEnumationList (inOperand0, inOperand1 COMMA_THERE)) ;
  capCollectionElement attributes (p) ;
  result.ptr (HERE)->addObject (attributes) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_goilTemplateEnumationList newList (constructor_emptyList (THERE)) ;
    newList.ptr (HERE)->copyFrom (ptr (HERE)) ;
    *this = newList ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::addAssign_operation (const GALGASap_goilTemplateValue inOperand0,
                                                              const GALGASap_string inOperand1
                                                              COMMA_LOCATION_ARGS) {
  if (isValid ()) {
    insulate (THERE) ;
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateEnumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    ptr (HERE)->addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_prependValue (GALGASap_goilTemplateValue inOperand0,
                                                              GALGASap_string inOperand1
                                                              COMMA_LOCATION_ARGS) {
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateEnumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_popFirst (GALGASap_goilTemplateValue & outOperand0,
                                                          GALGASap_string & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_popLast (GALGASap_goilTemplateValue & outOperand0,
                                                         GALGASap_string & outOperand1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::method_first (GALGASap_goilTemplateValue & outOperand0,
                                                     GALGASap_string & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::method_last (GALGASap_goilTemplateValue & outOperand0,
                                                    GALGASap_string & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGASap_goilTemplateEnumationList::operator_concat (const GALGASap_goilTemplateEnumationList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGASap_goilTemplateEnumationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::reader_subListWithRange (const GALGASap_uint & inOperand0,
                                                                                              const GALGASap_uint & inOperand1,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateEnumationList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGASap_goilTemplateEnumationList::constructor_emptyList (THERE) ;
    const bool ok = subListWithRange (result.ptr (HERE), inOperand0, inOperand1, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::reader_subListFromIndex (const GALGASap_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGASap_goilTemplateEnumationList result ;
  if (inIndex.isValid ()) {
    result = GALGASap_goilTemplateEnumationList::constructor_emptyList (THERE) ;
    const bool ok = subListFromIndex (result.ptr (HERE), inIndex, inCompiler COMMA_THERE) ;
    if (! ok) {
      result.drop () ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::dotAssign_operation (const GALGASap_goilTemplateEnumationList inOperand
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand.isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->appendList (inOperand.ptr (HERE)) ;
  }
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_setMEnumeratedValueAtIndex (GALGASap_goilTemplateValue inOperand,
                                                                            GALGASap_uint inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    p->mAttribute_mEnumeratedValue = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_setMPrefixAtIndex (GALGASap_string inOperand,
                                                                   GALGASap_uint inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) writeObjectAccessAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    p->mAttribute_mPrefix = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue GALGAS_goilTemplateEnumationList::reader_mEnumeratedValueAtIndex (const GALGASap_uint & inIndex,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  GALGASap_goilTemplateValue result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    result = p->mAttribute_mEnumeratedValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_string GALGAS_goilTemplateEnumationList::reader_mPrefixAtIndex (const GALGASap_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptrNoVerif () ;
  GALGASap_string result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
    result = p->mAttribute_mPrefix ;
  }
  return result ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @goilTemplateEnumationList list type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateEnumationList ("goilTemplateEnumationList",
                                                  & kTypeDescriptor_GALGAS_list) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateEnumationList::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateEnumationList ;
}
//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::modifierCall_popFirst (GALGASap_goilTemplateValue & outArgument0,
                                                                GALGASap_string & outArgument1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popFirst (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::modifierCall_popLast (GALGASap_goilTemplateValue & outArgument0,
                                                               GALGASap_string & outArgument1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_popLast (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::modifierCall_prependValue (GALGASap_goilTemplateValue constinArgument0,
                                                                    GALGASap_string constinArgument1
                                                                    COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_prependValue (constinArgument0, constinArgument1 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::modifierCall_setMEnumeratedValueAtIndex (GALGASap_goilTemplateValue constinArgument0,
                                                                                  GALGASap_uint constinArgument1,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMEnumeratedValueAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::modifierCall_setMPrefixAtIndex (GALGASap_string constinArgument0,
                                                                         GALGASap_uint constinArgument1,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setMPrefixAtIndex (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::instanceMethodCall_first (GALGASap_goilTemplateValue & outArgument0,
                                                                   GALGASap_string & outArgument1,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_first (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_goilTemplateEnumationList::instanceMethodCall_last (GALGASap_goilTemplateValue & outArgument0,
                                                                  GALGASap_string & outArgument1,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument0.drop () ;
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_last (outArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                @goilTemplateEnumationList list enumeration                *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList::cEnumerator::cEnumerator (const GALGASap_goilTemplateEnumationList & inEnumeratedObject,
                                                            const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_mEnumeratedValue (),
attribute_mPrefix () {
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_goilTemplateEnumationList) ;
  attribute_mEnumeratedValue = p->mAttribute_mEnumeratedValue ;
  attribute_mPrefix = p->mAttribute_mPrefix ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithBool'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue function_valueWithBool (GALGASap_bool & constinArgument_inValue,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGASap_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_uint_36__34_ temp_0 (constinArgument_inValue.readerCall_uint_36__34_ (SOURCE_FILE_AT_LINE (108))) ;
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_1 ("" COMMA_SOURCE_FILE_AT_LINE (110)) ;
  GALGASap_goilTemplateFieldMapList temp_2 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (110))) ;
  GALGASap_goilTemplateFieldMap temp_3 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (111))) ;
  GALGASap_goilTemplateValue temp_4 (GALGASap_goilTemplateValue::constructor_new (temp_0, temp_1, temp_2, temp_3 COMMA_SOURCE_FILE_AT_LINE (107))) ;
  result_goilTemplateValue = temp_4 ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Introspection                                                            *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithBool [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGASap_object functionWithGenericHeader_valueWithBool (C_Compiler * inCompiler,
                                                                cRootObjectArray & inEffectiveParameterArray,
                                                                const GALGASap_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  const bool ok = inCompiler->checkFunctionCallArguments ("valueWithBool",
                                                          1,
                                                          functionArgs_valueWithBool,
                                                          inEffectiveParameterArray,
                                                          inErrorLocation
                                                          COMMA_THERE) ;
  GALGASap_object result ;
  if (ok) {
    GALGASap_bool operand0 = inEffectiveParameterArray.objectAtIndex (0 COMMA_THERE) ;
    result = function_valueWithBool (operand0, inCompiler COMMA_THERE).embedObject () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithBool ("valueWithBool",
                                                               functionWithGenericHeader_valueWithBool,
                                                               & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                               1,
                                                               functionArgs_valueWithBool) ;


//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'valueWithUnsigned'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue function_valueWithUnsigned (GALGASap_uint_36__34_ & constinArgument_inValue,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGASap_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_0 ("" COMMA_SOURCE_FILE_AT_LINE (124)) ;
  GALGASap_goilTemplateFieldMapList temp_1 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (124))) ;
  GALGASap_goilTemplateFieldMap temp_2 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (125))) ;
  GALGASap_goilTemplateValue temp_3 (GALGASap_goilTemplateValue::constructor_new (constinArgument_inValue, temp_0, temp_1, temp_2 COMMA_SOURCE_FILE_AT_LINE (121))) ;
  result_goilTemplateValue = temp_3 ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Introspection                                                            *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithUnsigned [2] = {
  & kTypeDescriptor_GALGAS_uint_36__34_,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGASap_object functionWithGenericHeader_valueWithUnsigned (C_Compiler * inCompiler,
                                                                    cRootObjectArray & inEffectiveParameterArray,
                                                                    const GALGASap_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  const bool ok = inCompiler->checkFunctionCallArguments ("valueWithUnsigned",
                                                          1,
                                                          functionArgs_valueWithUnsigned,
                                                          inEffectiveParameterArray,
                                                          inErrorLocation
                                                          COMMA_THERE) ;
  GALGASap_object result ;
  if (ok) {
    GALGASap_uint_36__34_ operand0 = inEffectiveParameterArray.objectAtIndex (0 COMMA_THERE) ;
    result = function_valueWithUnsigned (operand0, inCompiler COMMA_THERE).embedObject () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithUnsigned ("valueWithUnsigned",
                                                                   functionWithGenericHeader_valueWithUnsigned,
                                                                   & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                                   1,
                                                                   functionArgs_valueWithUnsigned) ;


//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'valueWithString'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_goilTemplateValue function_valueWithString (GALGASap_string & constinArgument_inValue,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGASap_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  //--- @literalUInt64ExpressionForGeneration
  GALGASap_uint_36__34_ temp_0 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (136)) ;
  GALGASap_goilTemplateFieldMapList temp_1 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (138))) ;
  GALGASap_goilTemplateFieldMap temp_2 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (139))) ;
  GALGASap_goilTemplateValue temp_3 (GALGASap_goilTemplateValue::constructor_new (temp_0, constinArgument_inValue, temp_1, temp_2 COMMA_SOURCE_FILE_AT_LINE (135))) ;
  result_goilTemplateValue = temp_3 ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Introspection                                                            *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithString [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGASap_object functionWithGenericHeader_valueWithString (C_Compiler * inCompiler,
                                                                  cRootObjectArray & inEffectiveParameterArray,
                                                                  const GALGASap_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  const bool ok = inCompiler->checkFunctionCallArguments ("valueWithString",
                                                          1,
                                                          functionArgs_valueWithString,
                                                          inEffectiveParameterArray,
                                                          inErrorLocation
                                                          COMMA_THERE) ;
  GALGASap_object result ;
  if (ok) {
    GALGASap_string operand0 = inEffectiveParameterArray.objectAtIndex (0 COMMA_THERE) ;
    result = function_valueWithString (operand0, inCompiler COMMA_THERE).embedObject () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithString ("valueWithString",
                                                                 functionWithGenericHeader_valueWithString,
                                                                 & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                                 1,
                                                                 functionArgs_valueWithString) ;


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addBoolValue'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addBoolValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                           GALGASap_lstring constinArgument_inVariableName,
                           GALGASap_bool constinArgument_inValue,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (152))) ;
  //--- @functionCallExpressionForGeneration
  GALGASap_goilTemplateValue temp_1 (function_valueWithBool (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (153))) ;
  ioArgument_ioTemplateVariableMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addUnsignedValue'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addUnsignedValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                               GALGASap_lstring constinArgument_inVariableName,
                               GALGASap_uint_36__34_ constinArgument_inValue,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (167))) ;
  //--- @functionCallExpressionForGeneration
  GALGASap_goilTemplateValue temp_1 (function_valueWithUnsigned (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (168))) ;
  ioArgument_ioTemplateVariableMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (165)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addLUnsignedValue'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLUnsignedValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                                GALGASap_string constinArgument_inVariableName,
                                GALGASap_luint_36__34_ constinArgument_inValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_location temp_0 (constinArgument_inValue.readerCall_location (SOURCE_FILE_AT_LINE (180))) ;
  GALGASap_lstring temp_1 (GALGASap_lstring::constructor_new (constinArgument_inVariableName, temp_0 COMMA_SOURCE_FILE_AT_LINE (180))) ;
  //--- @readerCallExpressionForGeneration
  GALGASap_uint_36__34_ temp_2 (constinArgument_inValue.readerCall_uint_36__34_ (SOURCE_FILE_AT_LINE (180))) ;
  routine_addUnsignedValue (ioArgument_ioTemplateVariableMap, temp_1, temp_2, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addStringValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addStringValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                             GALGASap_lstring constinArgument_inVariableName,
                             GALGASap_string constinArgument_inValue,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (192))) ;
  //--- @functionCallExpressionForGeneration
  GALGASap_goilTemplateValue temp_1 (function_valueWithString (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (193))) ;
  ioArgument_ioTemplateVariableMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (190)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addLStringValue'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLStringValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                              GALGASap_string constinArgument_inVariableName,
                              GALGASap_lstring constinArgument_inValue,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_location temp_0 (constinArgument_inValue.readerCall_location (SOURCE_FILE_AT_LINE (205))) ;
  GALGASap_lstring temp_1 (GALGASap_lstring::constructor_new (constinArgument_inVariableName, temp_0 COMMA_SOURCE_FILE_AT_LINE (205))) ;
  //--- @readerCallExpressionForGeneration
  GALGASap_string temp_2 (constinArgument_inValue.readerCall_string (SOURCE_FILE_AT_LINE (205))) ;
  routine_addStringValue (ioArgument_ioTemplateVariableMap, temp_1, temp_2, inCompiler COMMA_SOURCE_FILE_AT_LINE (205)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addListValue'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addListValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                           GALGASap_lstring constinArgument_inVariableName,
                           GALGASap_goilTemplateFieldMapList constinArgument_inValue,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_listType (SOURCE_FILE_AT_LINE (217))) ;
  //--- @literalUInt64ExpressionForGeneration
  GALGASap_uint_36__34_ temp_1 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (218)) ;
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_2 ("" COMMA_SOURCE_FILE_AT_LINE (218)) ;
  GALGASap_goilTemplateFieldMap temp_3 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (218))) ;
  GALGASap_goilTemplateValue temp_4 (GALGASap_goilTemplateValue::constructor_new (temp_1, temp_2, constinArgument_inValue, temp_3 COMMA_SOURCE_FILE_AT_LINE (218))) ;
  ioArgument_ioTemplateVariableMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_4, inCompiler COMMA_SOURCE_FILE_AT_LINE (215)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addStructValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addStructValue (GALGASap_goilTemplateVariableMap & ioArgument_ioTemplateVariableMap,
                             GALGASap_lstring constinArgument_inVariableName,
                             GALGASap_goilTemplateFieldMap constinArgument_inValue,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_structType (SOURCE_FILE_AT_LINE (231))) ;
  //--- @literalUInt64ExpressionForGeneration
  GALGASap_uint_36__34_ temp_1 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (232)) ;
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_2 ("" COMMA_SOURCE_FILE_AT_LINE (232)) ;
  GALGASap_goilTemplateFieldMapList temp_3 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (232))) ;
  GALGASap_goilTemplateValue temp_4 (GALGASap_goilTemplateValue::constructor_new (temp_1, temp_2, temp_3, constinArgument_inValue COMMA_SOURCE_FILE_AT_LINE (232))) ;
  ioArgument_ioTemplateVariableMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_4, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addBoolFieldValue'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addBoolFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                GALGASap_lstring constinArgument_inVariableName,
                                GALGASap_bool constinArgument_inValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_boolType (SOURCE_FILE_AT_LINE (249))) ;
  //--- @ifExpressionForGeneration
  GALGASap_uint_36__34_ temp_1 ;
  if (isValidAndTrue (constinArgument_inValue)) {
    //--- @literalUInt64ExpressionForGeneration
    GALGASap_uint_36__34_ temp_2 ((PMUInt64) 1ULL COMMA_SOURCE_FILE_AT_LINE (250)) ;
    temp_1 = temp_2 ;
  }else{
    //--- @literalUInt64ExpressionForGeneration
    GALGASap_uint_36__34_ temp_3 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (250)) ;
    temp_1 = temp_3 ;
  }
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_4 ("" COMMA_SOURCE_FILE_AT_LINE (252)) ;
  GALGASap_goilTemplateFieldMapList temp_5 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (252))) ;
  GALGASap_goilTemplateFieldMap temp_6 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (253))) ;
  ioArgument_ioTemplateFieldMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, temp_4, temp_5, temp_6, inCompiler COMMA_SOURCE_FILE_AT_LINE (247)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'addUnsignedFieldValue'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addUnsignedFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                    GALGASap_lstring constinArgument_inVariableName,
                                    GALGASap_uint_36__34_ constinArgument_inValue,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_unsignedType (SOURCE_FILE_AT_LINE (266))) ;
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_1 ("" COMMA_SOURCE_FILE_AT_LINE (269)) ;
  GALGASap_goilTemplateFieldMapList temp_2 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (269))) ;
  GALGASap_goilTemplateFieldMap temp_3 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (270))) ;
  ioArgument_ioTemplateFieldMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, constinArgument_inValue, temp_1, temp_2, temp_3, inCompiler COMMA_SOURCE_FILE_AT_LINE (264)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'addLUnsignedFieldValue'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLUnsignedFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                     GALGASap_string constinArgument_inVariableName,
                                     GALGASap_luint_36__34_ constinArgument_inValue,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_location temp_0 (constinArgument_inValue.readerCall_location (SOURCE_FILE_AT_LINE (283))) ;
  GALGASap_lstring temp_1 (GALGASap_lstring::constructor_new (constinArgument_inVariableName, temp_0 COMMA_SOURCE_FILE_AT_LINE (283))) ;
  //--- @readerCallExpressionForGeneration
  GALGASap_uint_36__34_ temp_2 (constinArgument_inValue.readerCall_uint_36__34_ (SOURCE_FILE_AT_LINE (284))) ;
  routine_addUnsignedFieldValue (ioArgument_ioTemplateFieldMap, temp_1, temp_2, inCompiler COMMA_SOURCE_FILE_AT_LINE (281)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'addStringFieldValue'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addStringFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                  GALGASap_lstring constinArgument_inVariableName,
                                  GALGASap_string constinArgument_inValue,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_stringType (SOURCE_FILE_AT_LINE (296))) ;
  //--- @literalUInt64ExpressionForGeneration
  GALGASap_uint_36__34_ temp_1 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (297)) ;
  GALGASap_goilTemplateFieldMapList temp_2 (GALGASap_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (299))) ;
  GALGASap_goilTemplateFieldMap temp_3 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (300))) ;
  ioArgument_ioTemplateFieldMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, constinArgument_inValue, temp_2, temp_3, inCompiler COMMA_SOURCE_FILE_AT_LINE (294)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'addLStringFieldValue'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLStringFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                   GALGASap_string constinArgument_inVariableName,
                                   GALGASap_lstring constinArgument_inValue,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGASap_location temp_0 (constinArgument_inValue.readerCall_location (SOURCE_FILE_AT_LINE (313))) ;
  GALGASap_lstring temp_1 (GALGASap_lstring::constructor_new (constinArgument_inVariableName, temp_0 COMMA_SOURCE_FILE_AT_LINE (313))) ;
  //--- @readerCallExpressionForGeneration
  GALGASap_string temp_2 (constinArgument_inValue.readerCall_string (SOURCE_FILE_AT_LINE (314))) ;
  routine_addStringFieldValue (ioArgument_ioTemplateFieldMap, temp_1, temp_2, inCompiler COMMA_SOURCE_FILE_AT_LINE (311)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addListFieldValue'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addListFieldValue (GALGASap_goilTemplateFieldMap & ioArgument_ioTemplateFieldMap,
                                GALGASap_lstring constinArgument_inVariableName,
                                GALGASap_goilTemplateFieldMapList constinArgument_inValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  GALGASap_goilTemplateType temp_0 (GALGASap_goilTemplateType::constructor_listType (SOURCE_FILE_AT_LINE (326))) ;
  //--- @literalUInt64ExpressionForGeneration
  GALGASap_uint_36__34_ temp_1 ((PMUInt64) 0ULL COMMA_SOURCE_FILE_AT_LINE (327)) ;
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_2 ("" COMMA_SOURCE_FILE_AT_LINE (329)) ;
  GALGASap_goilTemplateFieldMap temp_3 (GALGASap_goilTemplateFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (330))) ;
  ioArgument_ioTemplateFieldMap.modifierCall_insertKey (constinArgument_inVariableName, temp_0, temp_1, temp_2, constinArgument_inValue, temp_3, inCompiler COMMA_SOURCE_FILE_AT_LINE (324)) ;
  } //-------- END @typeMethodInstructionForGeneration
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


