//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'goil_types_resource.h'                        *
//                        Generated by version 1.8.5                         *
//                      june 19th, 2009, at 17h46'22"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_types_resource_DEFINED
#define goil_types_resource_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "goil_basic_types.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_obj ;
class cPtr_resource_property_obj ;
class GGS_resource_property_void_obj ;
class cPtr_resource_property_void_obj ;
class GGS_resource_property_standard_obj ;
class cPtr_resource_property_standard_obj ;
class GGS_resource_property_linked_obj ;
class cPtr_resource_property_linked_obj ;
class GGS_resource_property_internal_obj ;
class cPtr_resource_property_internal_obj ;
class GGS_resource_obj ;
class cPtr_resource_obj ;
class GGS_resource_map ;
class GGS_linked_resources ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_resource_property_obj'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_obj : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_resource_property_obj (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_resource_property_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_property_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_property_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_property_obj * getPtr (void) const {
    return (cPtr_resource_property_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_location (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_property_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_property_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_property_obj *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__resource_property_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_resource_property_void_obj'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_void_obj : public GGS_resource_property_obj {
//--- Default constructor
  public : inline GGS_resource_property_void_obj (void) :
  GGS_resource_property_obj () {}

//--- Pointer assignment constructor
  public : GGS_resource_property_void_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_property_void_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_property_void_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_resource_property_void_obj constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_property_void_obj * getPtr (void) const {
    return (cPtr_resource_property_void_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_property_void_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_property_void_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_property_void_obj *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__resource_property_void_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_resource_property_standard_obj'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_standard_obj : public GGS_resource_property_obj {
//--- Default constructor
  public : inline GGS_resource_property_standard_obj (void) :
  GGS_resource_property_obj () {}

//--- Pointer assignment constructor
  public : GGS_resource_property_standard_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_property_standard_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_property_standard_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_resource_property_standard_obj constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_property_standard_obj * getPtr (void) const {
    return (cPtr_resource_property_standard_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_property_standard_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_property_standard_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_property_standard_obj *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__resource_property_standard_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_resource_property_linked_obj'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_linked_obj : public GGS_resource_property_obj {
//--- Default constructor
  public : inline GGS_resource_property_linked_obj (void) :
  GGS_resource_property_obj () {}

//--- Pointer assignment constructor
  public : GGS_resource_property_linked_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_property_linked_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_property_linked_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_resource_property_linked_obj constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_property_linked_obj * getPtr (void) const {
    return (cPtr_resource_property_linked_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_linked_resource (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_property_linked_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_property_linked_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_property_linked_obj *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__resource_property_linked_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_resource_property_internal_obj'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_property_internal_obj : public GGS_resource_property_obj {
//--- Default constructor
  public : inline GGS_resource_property_internal_obj (void) :
  GGS_resource_property_obj () {}

//--- Pointer assignment constructor
  public : GGS_resource_property_internal_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_property_internal_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_property_internal_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_resource_property_internal_obj constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_property_internal_obj * getPtr (void) const {
    return (cPtr_resource_property_internal_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_property_internal_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_property_internal_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_property_internal_obj *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__resource_property_internal_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_resource_obj'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_resource_obj : public GGS_oil_obj {
//--- Default constructor
  public : inline GGS_resource_obj (void) :
  GGS_oil_obj () {}

//--- Pointer assignment constructor
  public : GGS_resource_obj (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_resource_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_resource_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_resource_obj constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_resource_property_obj & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_resource_obj * getPtr (void) const {
    return (cPtr_resource_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_resource_property_obj  reader_property (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_acc_apps (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers
  public : void modifier_setProperty (C_Compiler & inLexique, const GGS_resource_property_obj  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setAcc_apps (C_Compiler & inLexique, const GGS_lstringlist  & inValue COMMA_LOCATION_ARGS) ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_resource_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_resource_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_resource_obj *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__resource_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@resource_map'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_resource_map ;

class GGS_resource_map : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_resource_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_resource_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_resource_map & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_resource_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_resource_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_resource_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_del [] ;

//--- 'del' Remove Modifier
  public : void modifier_del (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_resource_obj & outParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_resource_obj &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_resource_obj   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_resource_obj & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_resource_obj & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_resource_obj & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_resource_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_resource_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_resource_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_resource_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_resource_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_resource_obj   & _resource (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@linked_resources'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_linked_resources ;

class GGS_linked_resources : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_linked_resources cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_linked_resources & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_linked_resources & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_linked_resources * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_linked_resources * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_linked_resources constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_linked_resources constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_linked_resources & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_linked_resources reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_linked_resources & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_linked_resources & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _linked_resource (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'default_resource_obj'                       *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_resource_obj  function_default_resource_obj (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_resource_property_obj'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_property_obj : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_resource_property_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_property_obj (void) {}
  #endif

//--- Attributes
  public : GGS_location  location ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_resource_property_void_obj'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_property_void_obj : public cPtr_resource_property_obj {
  private : typedef cPtr_resource_property_obj inherited ;
//--- Constructor
  public : cPtr_resource_property_void_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_property_void_obj (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_resource_property_standard_obj'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_property_standard_obj : public cPtr_resource_property_obj {
  private : typedef cPtr_resource_property_obj inherited ;
//--- Constructor
  public : cPtr_resource_property_standard_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_property_standard_obj (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_resource_property_linked_obj'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_property_linked_obj : public cPtr_resource_property_obj {
  private : typedef cPtr_resource_property_obj inherited ;
//--- Constructor
  public : cPtr_resource_property_linked_obj (const GGS_location & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_property_linked_obj (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  linked_resource ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_resource_property_internal_obj'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_property_internal_obj : public cPtr_resource_property_obj {
  private : typedef cPtr_resource_property_obj inherited ;
//--- Constructor
  public : cPtr_resource_property_internal_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_property_internal_obj (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_resource_obj'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_resource_obj : public cPtr_oil_obj {
  private : typedef cPtr_oil_obj inherited ;
//--- Constructor
  public : cPtr_resource_obj (const GGS_lstring & ,
                                const GGS_resource_property_obj & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_resource_obj (void) {}
  #endif

//--- Attributes
  public : GGS_resource_property_obj  property ;
  public : GGS_lstringlist  acc_apps ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@resource_map'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_resource_map {
  public : GGS_resource_obj  resource ;

  public : e_resource_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_resource_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_resource_map (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_resource_map & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_resource_map * nextObject (void) const { return (elementOf_GGS_resource_map *) mNextItem ; }
  public : inline elementOf_GGS_resource_map * infObject (void) const { return (elementOf_GGS_resource_map *) mInfPtr ; }
  public : inline elementOf_GGS_resource_map * supObject (void) const { return (elementOf_GGS_resource_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_resource_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@linked_resources'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_linked_resources {
  public : GGS_lstring  linked_resource ;

  public : e_linked_resources (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_linked_resources : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_linked_resources (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_linked_resources & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_linked_resources * nextObject (void) const { return (elementOf_GGS_linked_resources *) mNextItem ; }
  public : inline elementOf_GGS_linked_resources * infObject (void) const { return (elementOf_GGS_linked_resources *) mInfPtr ; }
  public : inline elementOf_GGS_linked_resources * supObject (void) const { return (elementOf_GGS_linked_resources *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_linked_resources mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#endif
