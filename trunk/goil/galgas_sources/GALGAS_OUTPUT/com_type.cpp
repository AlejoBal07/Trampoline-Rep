//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'com_type.cpp'                             *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 17th, 2010, at 19h29'53"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "com_type.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "com_type.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                          Function 'void_com_obj'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_com function_void_5F_com_5F_obj (C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_com result_com ; // Returned variable
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_void var_void_5F_obj = GALGAS_void::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (82)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_lstring var_emptyString = GALGAS_lstring::constructor_new (GALGAS_string (""), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (83)) ;
  //-------- @assignmentInstructionForGeneration
  result_com = GALGAS_com::constructor_new (var_emptyString, GALGAS_bool (false), var_void_5F_obj, var_void_5F_obj, var_void_5F_obj, var_void_5F_obj, var_void_5F_obj, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (92)), var_emptyString, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (84)) ;
//---
  return result_com ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_void_5F_com_5F_obj [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_void_5F_com_5F_obj (C_Compiler * inCompiler,
                                                                   const cObjectArray & /* inEffectiveParameterArray */,
                                                                   const GALGAS_location & /* inErrorLocation */
                                                                   COMMA_LOCATION_ARGS) {
  return function_void_5F_com_5F_obj (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_void_5F_com_5F_obj ("void_com_obj",
                                                                    functionWithGenericHeader_void_5F_com_5F_obj,
                                                                    & kTypeDescriptor_GALGAS_com,
                                                                    0,
                                                                    functionArgs_void_5F_com_5F_obj) ;

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_com::objectCompare (const GALGAS_com & inOperand) const {
  enumComparisonResult result = GALGAS_oil_5F_obj::objectCompare (inOperand) ;
  const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_com) ;
  const cPtr_com * q = (const cPtr_com *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_com) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_usecom.objectCompare (q->mAttribute_usecom) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_timebase.objectCompare (q->mAttribute_timebase) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_errorhook.objectCompare (q->mAttribute_errorhook) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_usegetserviceid.objectCompare (q->mAttribute_usegetserviceid) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_useparameteraccess.objectCompare (q->mAttribute_useparameteraccess) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_startcomextension.objectCompare (q->mAttribute_startcomextension) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_appmodes.objectCompare (q->mAttribute_appmodes) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_status.objectCompare (q->mAttribute_status) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_uses.objectCompare (q->mAttribute_uses) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_com::GALGAS_com (void) :
GALGAS_oil_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_com::GALGAS_com (const cPtr_com * inSourcePtr) :
GALGAS_oil_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_com) ;
}

//---------------------------------------------------------------------------*

GALGAS_com GALGAS_com::constructor_new (const GALGAS_lstring & inAttribute_desc,
                                        const GALGAS_bool & inAttribute_usecom,
                                        const GALGAS_basic_5F_type & inAttribute_timebase,
                                        const GALGAS_basic_5F_type & inAttribute_errorhook,
                                        const GALGAS_basic_5F_type & inAttribute_usegetserviceid,
                                        const GALGAS_basic_5F_type & inAttribute_useparameteraccess,
                                        const GALGAS_basic_5F_type & inAttribute_startcomextension,
                                        const GALGAS_lstringlist & inAttribute_appmodes,
                                        const GALGAS_lstring & inAttribute_status,
                                        const GALGAS_lstringlist & inAttribute_uses
                                        COMMA_LOCATION_ARGS) {
  GALGAS_com result ;
  if (inAttribute_desc.isValid () && inAttribute_usecom.isValid () && inAttribute_timebase.isValid () && inAttribute_errorhook.isValid () && inAttribute_usegetserviceid.isValid () && inAttribute_useparameteraccess.isValid () && inAttribute_startcomextension.isValid () && inAttribute_appmodes.isValid () && inAttribute_status.isValid () && inAttribute_uses.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_com (inAttribute_desc, inAttribute_usecom, inAttribute_timebase, inAttribute_errorhook, inAttribute_usegetserviceid, inAttribute_useparameteraccess, inAttribute_startcomextension, inAttribute_appmodes, inAttribute_status, inAttribute_uses COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_com::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_com * p = (cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_com) ;
    cPtr_com * r = NULL ;
    macroMyNew (r, cPtr_com (p->mAttribute_desc, p->mAttribute_usecom, p->mAttribute_timebase, p->mAttribute_errorhook, p->mAttribute_usegetserviceid, p->mAttribute_useparameteraccess, p->mAttribute_startcomextension, p->mAttribute_appmodes, p->mAttribute_status, p->mAttribute_uses COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_com::reader_usecom (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_usecom ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_basic_5F_type GALGAS_com::reader_timebase (UNUSED_LOCATION_ARGS) const {
  GALGAS_basic_5F_type result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_timebase ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_basic_5F_type GALGAS_com::reader_errorhook (UNUSED_LOCATION_ARGS) const {
  GALGAS_basic_5F_type result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_errorhook ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_basic_5F_type GALGAS_com::reader_usegetserviceid (UNUSED_LOCATION_ARGS) const {
  GALGAS_basic_5F_type result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_usegetserviceid ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_basic_5F_type GALGAS_com::reader_useparameteraccess (UNUSED_LOCATION_ARGS) const {
  GALGAS_basic_5F_type result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_useparameteraccess ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_basic_5F_type GALGAS_com::reader_startcomextension (UNUSED_LOCATION_ARGS) const {
  GALGAS_basic_5F_type result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_startcomextension ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_com::reader_appmodes (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_appmodes ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_com::reader_status (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_status ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_com::reader_uses (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_com * p = (const cPtr_com *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_com) ;
    result = p->mAttribute_uses ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                       Pointer class for @com class                        *
//---------------------------------------------------------------------------*

cPtr_com::cPtr_com (const GALGAS_lstring & in_desc,
                    const GALGAS_bool & in_usecom,
                    const GALGAS_basic_5F_type & in_timebase,
                    const GALGAS_basic_5F_type & in_errorhook,
                    const GALGAS_basic_5F_type & in_usegetserviceid,
                    const GALGAS_basic_5F_type & in_useparameteraccess,
                    const GALGAS_basic_5F_type & in_startcomextension,
                    const GALGAS_lstringlist & in_appmodes,
                    const GALGAS_lstring & in_status,
                    const GALGAS_lstringlist & in_uses
                    COMMA_LOCATION_ARGS) :
cPtr_oil_5F_obj (in_desc COMMA_THERE),
mAttribute_usecom (in_usecom),
mAttribute_timebase (in_timebase),
mAttribute_errorhook (in_errorhook),
mAttribute_usegetserviceid (in_usegetserviceid),
mAttribute_useparameteraccess (in_useparameteraccess),
mAttribute_startcomextension (in_startcomextension),
mAttribute_appmodes (in_appmodes),
mAttribute_status (in_status),
mAttribute_uses (in_uses) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_com::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_com ;
}

void cPtr_com::description (C_String & ioString,
                            const PMSInt32 inIndentation) const {
  ioString << "[@com:" ;
  mAttribute_desc.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_usecom.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_timebase.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_errorhook.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_usegetserviceid.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_useparameteraccess.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_startcomextension.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_appmodes.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_status.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_uses.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                                 @com type                                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_com ("com",
                            & kTypeDescriptor_GALGAS_oil_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_com::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_com ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_com::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_com (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_com GALGAS_com::extractObject (const GALGAS_object & inObject,
                                      C_Compiler * inCompiler,
                                      const GALGAS_location & inErrorLocation
                                      COMMA_LOCATION_ARGS) {
  GALGAS_com result ;
  const GALGAS_com * p = (const GALGAS_com *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_com *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "com", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


