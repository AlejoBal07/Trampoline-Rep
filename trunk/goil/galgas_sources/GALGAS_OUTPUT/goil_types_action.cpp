//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'goil_types_action.cpp'                        *
//                    Generated by version version 2.1.4                     *
//                     january 10th, 2011, at 14h31'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != 926
  #error "This file has been compiled with a version of GALGAS that uses libpm version 926, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "goil_types_action.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_types_action.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_action_5F_obj::objectCompare (const GALGAS_action_5F_obj & inOperand) const {
  enumComparisonResult result = kOperandEqual ;
  const cPtr_action_5F_obj * p = (const cPtr_action_5F_obj *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_action_5F_obj) ;
  const cPtr_action_5F_obj * q = (const cPtr_action_5F_obj *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_action_5F_obj) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_location.objectCompare (q->mAttribute_location) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_action_5F_obj::GALGAS_action_5F_obj (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_action_5F_obj::GALGAS_action_5F_obj (const cPtr_action_5F_obj * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_action_5F_obj) ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_action_5F_obj::reader_location (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_action_5F_obj * p = (const cPtr_action_5F_obj *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_action_5F_obj) ;
    result = p->mAttribute_location ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @action_obj class                    *
//---------------------------------------------------------------------------*

cPtr_action_5F_obj::cPtr_action_5F_obj (const GALGAS_location & in_location
                                        COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_location (in_location) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @action_obj type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_action_5F_obj ("action_obj",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_action_5F_obj::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_action_5F_obj ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_action_5F_obj::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_action_5F_obj (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_action_5F_obj GALGAS_action_5F_obj::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_action_5F_obj result ;
  const GALGAS_action_5F_obj * p = (const GALGAS_action_5F_obj *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_action_5F_obj *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "action_obj", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_activatetask_5F_action::objectCompare (const GALGAS_activatetask_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_activatetask_5F_action * p = (const cPtr_activatetask_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_activatetask_5F_action) ;
  const cPtr_activatetask_5F_action * q = (const cPtr_activatetask_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_activatetask_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_task_5F_name.objectCompare (q->mAttribute_task_5F_name) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_activatetask_5F_action::GALGAS_activatetask_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_activatetask_5F_action::GALGAS_activatetask_5F_action (const cPtr_activatetask_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_activatetask_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_activatetask_5F_action GALGAS_activatetask_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                                              const GALGAS_lstring & inAttribute_task_5F_name
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_activatetask_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_task_5F_name.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_activatetask_5F_action (inAttribute_location, inAttribute_task_5F_name COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_activatetask_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_activatetask_5F_action * p = (cPtr_activatetask_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_activatetask_5F_action) ;
    cPtr_activatetask_5F_action * r = NULL ;
    macroMyNew (r, cPtr_activatetask_5F_action (p->mAttribute_location, p->mAttribute_task_5F_name COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_activatetask_5F_action::reader_task_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_activatetask_5F_action * p = (const cPtr_activatetask_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_activatetask_5F_action) ;
    result = p->mAttribute_task_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @activatetask_action class                *
//---------------------------------------------------------------------------*

cPtr_activatetask_5F_action::cPtr_activatetask_5F_action (const GALGAS_location & in_location,
                                                          const GALGAS_lstring & in_task_5F_name
                                                          COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_task_5F_name (in_task_5F_name) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_activatetask_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_activatetask_5F_action ;
}

void cPtr_activatetask_5F_action::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "[@activatetask_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_task_5F_name.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @activatetask_action type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_activatetask_5F_action ("activatetask_action",
                                               & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_activatetask_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_activatetask_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_activatetask_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_activatetask_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_activatetask_5F_action GALGAS_activatetask_5F_action::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_activatetask_5F_action result ;
  const GALGAS_activatetask_5F_action * p = (const GALGAS_activatetask_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_activatetask_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "activatetask_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_callback_5F_action::objectCompare (const GALGAS_callback_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_callback_5F_action * p = (const cPtr_callback_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_callback_5F_action) ;
  const cPtr_callback_5F_action * q = (const cPtr_callback_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_callback_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_function_5F_name.objectCompare (q->mAttribute_function_5F_name) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_callback_5F_action::GALGAS_callback_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_callback_5F_action::GALGAS_callback_5F_action (const cPtr_callback_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_callback_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_callback_5F_action GALGAS_callback_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                                      const GALGAS_lstring & inAttribute_function_5F_name
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_callback_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_function_5F_name.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_callback_5F_action (inAttribute_location, inAttribute_function_5F_name COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_callback_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_callback_5F_action * p = (cPtr_callback_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_callback_5F_action) ;
    cPtr_callback_5F_action * r = NULL ;
    macroMyNew (r, cPtr_callback_5F_action (p->mAttribute_location, p->mAttribute_function_5F_name COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_callback_5F_action::reader_function_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_callback_5F_action * p = (const cPtr_callback_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_callback_5F_action) ;
    result = p->mAttribute_function_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @callback_action class                  *
//---------------------------------------------------------------------------*

cPtr_callback_5F_action::cPtr_callback_5F_action (const GALGAS_location & in_location,
                                                  const GALGAS_lstring & in_function_5F_name
                                                  COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_function_5F_name (in_function_5F_name) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_callback_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_callback_5F_action ;
}

void cPtr_callback_5F_action::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@callback_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_function_5F_name.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @callback_action type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_callback_5F_action ("callback_action",
                                           & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_callback_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_callback_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_callback_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_callback_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_callback_5F_action GALGAS_callback_5F_action::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_callback_5F_action result ;
  const GALGAS_callback_5F_action * p = (const GALGAS_callback_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_callback_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "callback_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_finalize_5F_st_5F_action::objectCompare (const GALGAS_finalize_5F_st_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_finalize_5F_st_5F_action * p = (const cPtr_finalize_5F_st_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_finalize_5F_st_5F_action) ;
  const cPtr_finalize_5F_st_5F_action * q = (const cPtr_finalize_5F_st_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_finalize_5F_st_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_scheduleTableName.objectCompare (q->mAttribute_scheduleTableName) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_finalize_5F_st_5F_action::GALGAS_finalize_5F_st_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_finalize_5F_st_5F_action::GALGAS_finalize_5F_st_5F_action (const cPtr_finalize_5F_st_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_finalize_5F_st_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_finalize_5F_st_5F_action GALGAS_finalize_5F_st_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                                                  const GALGAS_lstring & inAttribute_scheduleTableName
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_finalize_5F_st_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_scheduleTableName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_finalize_5F_st_5F_action (inAttribute_location, inAttribute_scheduleTableName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_finalize_5F_st_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_finalize_5F_st_5F_action * p = (cPtr_finalize_5F_st_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_finalize_5F_st_5F_action) ;
    cPtr_finalize_5F_st_5F_action * r = NULL ;
    macroMyNew (r, cPtr_finalize_5F_st_5F_action (p->mAttribute_location, p->mAttribute_scheduleTableName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_finalize_5F_st_5F_action::reader_scheduleTableName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_finalize_5F_st_5F_action * p = (const cPtr_finalize_5F_st_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_finalize_5F_st_5F_action) ;
    result = p->mAttribute_scheduleTableName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @finalize_st_action class                *
//---------------------------------------------------------------------------*

cPtr_finalize_5F_st_5F_action::cPtr_finalize_5F_st_5F_action (const GALGAS_location & in_location,
                                                              const GALGAS_lstring & in_scheduleTableName
                                                              COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_scheduleTableName (in_scheduleTableName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_finalize_5F_st_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_finalize_5F_st_5F_action ;
}

void cPtr_finalize_5F_st_5F_action::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "[@finalize_st_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_scheduleTableName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @finalize_st_action type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_finalize_5F_st_5F_action ("finalize_st_action",
                                                 & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_finalize_5F_st_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_finalize_5F_st_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_finalize_5F_st_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_finalize_5F_st_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_finalize_5F_st_5F_action GALGAS_finalize_5F_st_5F_action::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_finalize_5F_st_5F_action result ;
  const GALGAS_finalize_5F_st_5F_action * p = (const GALGAS_finalize_5F_st_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_finalize_5F_st_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "finalize_st_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_flag_5F_action::objectCompare (const GALGAS_flag_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_flag_5F_action * p = (const cPtr_flag_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_flag_5F_action) ;
  const cPtr_flag_5F_action * q = (const cPtr_flag_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_flag_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_flag_5F_name.objectCompare (q->mAttribute_flag_5F_name) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_flag_5F_action::GALGAS_flag_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_flag_5F_action::GALGAS_flag_5F_action (const cPtr_flag_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_flag_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_flag_5F_action GALGAS_flag_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                              const GALGAS_lstring & inAttribute_flag_5F_name
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_flag_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_flag_5F_name.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_flag_5F_action (inAttribute_location, inAttribute_flag_5F_name COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_flag_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_flag_5F_action * p = (cPtr_flag_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_flag_5F_action) ;
    cPtr_flag_5F_action * r = NULL ;
    macroMyNew (r, cPtr_flag_5F_action (p->mAttribute_location, p->mAttribute_flag_5F_name COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_flag_5F_action::reader_flag_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_flag_5F_action * p = (const cPtr_flag_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_flag_5F_action) ;
    result = p->mAttribute_flag_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @flag_action class                    *
//---------------------------------------------------------------------------*

cPtr_flag_5F_action::cPtr_flag_5F_action (const GALGAS_location & in_location,
                                          const GALGAS_lstring & in_flag_5F_name
                                          COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_flag_5F_name (in_flag_5F_name) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_flag_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_flag_5F_action ;
}

void cPtr_flag_5F_action::description (C_String & ioString,
                                       const PMSInt32 inIndentation) const {
  ioString << "[@flag_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_flag_5F_name.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @flag_action type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_flag_5F_action ("flag_action",
                                       & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_flag_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_flag_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_flag_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_flag_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_flag_5F_action GALGAS_flag_5F_action::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_flag_5F_action result ;
  const GALGAS_flag_5F_action * p = (const GALGAS_flag_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_flag_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "flag_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_incrementcounter_5F_action::objectCompare (const GALGAS_incrementcounter_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_incrementcounter_5F_action * p = (const cPtr_incrementcounter_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_incrementcounter_5F_action) ;
  const cPtr_incrementcounter_5F_action * q = (const cPtr_incrementcounter_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_incrementcounter_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_counter_5F_name.objectCompare (q->mAttribute_counter_5F_name) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_incrementcounter_5F_action::GALGAS_incrementcounter_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_incrementcounter_5F_action::GALGAS_incrementcounter_5F_action (const cPtr_incrementcounter_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_incrementcounter_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_incrementcounter_5F_action GALGAS_incrementcounter_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                                                      const GALGAS_lstring & inAttribute_counter_5F_name
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_incrementcounter_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_counter_5F_name.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_incrementcounter_5F_action (inAttribute_location, inAttribute_counter_5F_name COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_incrementcounter_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_incrementcounter_5F_action * p = (cPtr_incrementcounter_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_incrementcounter_5F_action) ;
    cPtr_incrementcounter_5F_action * r = NULL ;
    macroMyNew (r, cPtr_incrementcounter_5F_action (p->mAttribute_location, p->mAttribute_counter_5F_name COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_incrementcounter_5F_action::reader_counter_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_incrementcounter_5F_action * p = (const cPtr_incrementcounter_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_incrementcounter_5F_action) ;
    result = p->mAttribute_counter_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @incrementcounter_action class              *
//---------------------------------------------------------------------------*

cPtr_incrementcounter_5F_action::cPtr_incrementcounter_5F_action (const GALGAS_location & in_location,
                                                                  const GALGAS_lstring & in_counter_5F_name
                                                                  COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_counter_5F_name (in_counter_5F_name) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_incrementcounter_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_incrementcounter_5F_action ;
}

void cPtr_incrementcounter_5F_action::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "[@incrementcounter_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_counter_5F_name.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @incrementcounter_action type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_incrementcounter_5F_action ("incrementcounter_action",
                                                   & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_incrementcounter_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_incrementcounter_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_incrementcounter_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_incrementcounter_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_incrementcounter_5F_action GALGAS_incrementcounter_5F_action::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_incrementcounter_5F_action result ;
  const GALGAS_incrementcounter_5F_action * p = (const GALGAS_incrementcounter_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_incrementcounter_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "incrementcounter_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_setevent_5F_action::objectCompare (const GALGAS_setevent_5F_action & inOperand) const {
  enumComparisonResult result = GALGAS_action_5F_obj::objectCompare (inOperand) ;
  const cPtr_setevent_5F_action * p = (const cPtr_setevent_5F_action *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_setevent_5F_action) ;
  const cPtr_setevent_5F_action * q = (const cPtr_setevent_5F_action *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_setevent_5F_action) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_task_5F_name.objectCompare (q->mAttribute_task_5F_name) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_event_5F_name.objectCompare (q->mAttribute_event_5F_name) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_setevent_5F_action::GALGAS_setevent_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_setevent_5F_action::GALGAS_setevent_5F_action (const cPtr_setevent_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_setevent_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_setevent_5F_action GALGAS_setevent_5F_action::constructor_new (const GALGAS_location & inAttribute_location,
                                                                      const GALGAS_lstring & inAttribute_task_5F_name,
                                                                      const GALGAS_lstring & inAttribute_event_5F_name
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_setevent_5F_action result ;
  if (inAttribute_location.isValid () && inAttribute_task_5F_name.isValid () && inAttribute_event_5F_name.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_setevent_5F_action (inAttribute_location, inAttribute_task_5F_name, inAttribute_event_5F_name COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_setevent_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_setevent_5F_action * p = (cPtr_setevent_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_setevent_5F_action) ;
    cPtr_setevent_5F_action * r = NULL ;
    macroMyNew (r, cPtr_setevent_5F_action (p->mAttribute_location, p->mAttribute_task_5F_name, p->mAttribute_event_5F_name COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_setevent_5F_action::reader_task_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_setevent_5F_action * p = (const cPtr_setevent_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_setevent_5F_action) ;
    result = p->mAttribute_task_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_setevent_5F_action::reader_event_5F_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_setevent_5F_action * p = (const cPtr_setevent_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_setevent_5F_action) ;
    result = p->mAttribute_event_5F_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @setevent_action class                  *
//---------------------------------------------------------------------------*

cPtr_setevent_5F_action::cPtr_setevent_5F_action (const GALGAS_location & in_location,
                                                  const GALGAS_lstring & in_task_5F_name,
                                                  const GALGAS_lstring & in_event_5F_name
                                                  COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE),
mAttribute_task_5F_name (in_task_5F_name),
mAttribute_event_5F_name (in_event_5F_name) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_setevent_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_setevent_5F_action ;
}

void cPtr_setevent_5F_action::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@setevent_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_task_5F_name.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_event_5F_name.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @setevent_action type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_setevent_5F_action ("setevent_action",
                                           & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_setevent_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_setevent_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_setevent_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_setevent_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_setevent_5F_action GALGAS_setevent_5F_action::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_setevent_5F_action result ;
  const GALGAS_setevent_5F_action * p = (const GALGAS_setevent_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_setevent_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "setevent_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_void_5F_action::objectCompare (const GALGAS_void_5F_action & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_void_5F_action::GALGAS_void_5F_action (void) :
GALGAS_action_5F_obj () {
}

//---------------------------------------------------------------------------*

GALGAS_void_5F_action::GALGAS_void_5F_action (const cPtr_void_5F_action * inSourcePtr) :
GALGAS_action_5F_obj (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_void_5F_action) ;
}

//---------------------------------------------------------------------------*

GALGAS_void_5F_action GALGAS_void_5F_action::constructor_new (const GALGAS_location & inAttribute_location
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_void_5F_action result ;
  if (inAttribute_location.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_void_5F_action (inAttribute_location COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_void_5F_action::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_void_5F_action * p = (cPtr_void_5F_action *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_void_5F_action) ;
    cPtr_void_5F_action * r = NULL ;
    macroMyNew (r, cPtr_void_5F_action (p->mAttribute_location COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*
//                   Pointer class for @void_action class                    *
//---------------------------------------------------------------------------*

cPtr_void_5F_action::cPtr_void_5F_action (const GALGAS_location & in_location
                                          COMMA_LOCATION_ARGS) :
cPtr_action_5F_obj (in_location COMMA_THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_void_5F_action::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_void_5F_action ;
}

void cPtr_void_5F_action::description (C_String & ioString,
                                       const PMSInt32 inIndentation) const {
  ioString << "[@void_action:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @void_action type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_void_5F_action ("void_action",
                                       & kTypeDescriptor_GALGAS_action_5F_obj) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_void_5F_action::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_void_5F_action ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_void_5F_action::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_void_5F_action (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_void_5F_action GALGAS_void_5F_action::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_void_5F_action result ;
  const GALGAS_void_5F_action * p = (const GALGAS_void_5F_action *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_void_5F_action *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "void_action", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


