//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'goil_imp_def.cpp'                           *
//                        Generated by version 1.8.0                         *
//                       march 5th, 2009, at 9h28'13"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != 451
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "goil_imp_def.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_imp_def.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'implementation_definition'        *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_implementation_definition_goil_imp_def_85_32_ (goil_lexique & _inLexique,
                                GGS_implementation  &var_cas_imp) {
  GGS_lstring  var_cas_imp_name ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_IMPLEMENTATION) COMMA_HERE) ;
  _inLexique._assignFromAttribute_att_token (var_cas_imp_name) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  nt_implementation_spec_list_ (_inLexique, var_cas_imp) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  GGS_lstring  automatic_var_0 ;
  nt_description_ (_inLexique, automatic_var_0) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'implementation_spec_list'        *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_implementation_spec_list_goil_imp_def_99_31_ (goil_lexique & _inLexique,
                                GGS_implementation  &var_cas_imp) {
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_goil_imp_def_0 (_inLexique)) {
        case 2 : {
          nt_implementation_spec_ (_inLexique, var_cas_imp) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'implementation_spec'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_implementation_spec_goil_imp_def_105_26_ (goil_lexique & _inLexique,
                                GGS_implementation  &var_cas_imp) {
  switch (select_goil_imp_def_1 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_OS) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "os"), var_cas_imp) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TASK) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "task"), var_cas_imp) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COUNTER) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "counter"), var_cas_imp) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ALARM) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "alarm"), var_cas_imp) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RESOURCE) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "resource"), var_cas_imp) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_EVENT) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "event"), var_cas_imp) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ISR) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "isr"), var_cas_imp) ;
      } break ;
    case 8 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MESSAGE) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "message"), var_cas_imp) ;
      } break ;
    case 9 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COM) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "com"), var_cas_imp) ;
      } break ;
    case 10 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NM) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "nm"), var_cas_imp) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_APPMODE) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "appmode"), var_cas_imp) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_IPDU) COMMA_HERE) ;
      nt_implementation_list_ (_inLexique, GGS_string (true, "ipdu"), var_cas_imp) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_1 ;
  nt_description_ (_inLexique, automatic_var_1) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'implementation_list'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_implementation_list_goil_imp_def_125_26_ (goil_lexique & _inLexique,
                                GGS_string var_cas_obj_kind,
                                GGS_implementation  &var_cas_imp) {
  GGS_implementation_spec  var_cas_spec ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (_inLexique, var_cas_obj_kind, GGS_location (_inLexique) COMMA_HERE) ;
  if ((var_cas_imp.reader_hasKey (_inLexique, var_cas_obj_kind COMMA_SOURCE_FILE_AT_LINE (131))).isBuiltAndTrue ()) {
    var_cas_imp.modifier_del (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_obj_kind, GGS_location (_inLexique) COMMA_HERE), var_cas_spec COMMA_SOURCE_FILE_AT_LINE (132)) ;
  }else{
    var_cas_spec = GGS_implementation_spec ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_goil_imp_def_2 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_attr_name ;
          GGS_imp_type  var_cas_attr ;
          nt_impl_attr_def_ (_inLexique, var_cas_attr_name, var_cas_attr) ;
          var_cas_spec.modifier_put (_inLexique, var_cas_attr_name, var_cas_attr COMMA_SOURCE_FILE_AT_LINE (143)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
  var_cas_imp.modifier_put (_inLexique, var_cas_key, var_cas_spec COMMA_SOURCE_FILE_AT_LINE (148)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_151_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_bool var_cas_with_auto ;
  GGS_uint32_set  var_cas_set ;
  GGS_bool var_cas_multiple ;
  GGS_uint32_class  var_cas_default_number ;
  GGS_lstring  var_cas_desc ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_UINT32) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_with_auto) ;
  nt_uint32_number_set_ (_inLexique, var_cas_set) ;
  nt_uint32_attribute_name_ (_inLexique, var_cas_attr_name) ;
  nt_multiple_specifier_ (_inLexique, var_cas_multiple) ;
  nt_default_uint32_number_ (_inLexique, var_cas_default_number) ;
  nt_description_ (_inLexique, var_cas_desc) ;
  { const GGS_uint32_class _var_5064 = var_cas_default_number ; // CAST instruction
    if (_var_5064.getPtr () != NULL) {
      macroValidPointer (_var_5064.getPtr ()) ;
      if (typeid (cPtr_uint32_class) == typeid (* (_var_5064.getPtr ()))) {
        const GGS_uint32_class var_cas_dn (_var_5064.getPtr ()) ;
        ::routine_check_uint32_range (_inLexique,  var_cas_set,  var_cas_dn.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (173)),  var_cas_dn.reader_value (_inLexique COMMA_SOURCE_FILE_AT_LINE (173)) COMMA_SOURCE_FILE_AT_LINE (173)) ;
      }else{
      }
    }
  }
  var_cas_attr = GGS_uint32_type ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_desc, var_cas_multiple, var_cas_with_auto, var_cas_default_number, var_cas_set COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_188_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_bool var_cas_with_auto ;
  GGS_sint32_set  var_cas_set ;
  GGS_bool var_cas_multiple ;
  GGS_sint32_class  var_cas_default_number ;
  GGS_lstring  var_cas_desc ;
  GGS_lstring  var_cas_type ;
  GGS_bool var_cas_has_range ;
  GGS_number_set  var_cas_range ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_INT32) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_with_auto) ;
  nt_sint32_number_set_ (_inLexique, var_cas_set) ;
  nt_attribute_name_ (_inLexique, var_cas_attr_name) ;
  nt_multiple_specifier_ (_inLexique, var_cas_multiple) ;
  nt_default_sint32_number_ (_inLexique, var_cas_default_number) ;
  nt_description_ (_inLexique, var_cas_desc) ;
  var_cas_attr = GGS_sint32_type ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_desc, var_cas_multiple, var_cas_with_auto, var_cas_default_number, var_cas_set COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_218_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_bool var_cas_auto ;
  GGS_bool var_cas_multiple ;
  GGS_luint64  var_cas_default_number ;
  GGS_bool var_cas_has_default ;
  GGS_lstring  var_cas_type ;
  _inLexique._assignFromAttribute_att_token (var_cas_type) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_UINT64) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_auto) ;
  nt_attribute_name_ (_inLexique, var_cas_attr_name) ;
  nt_multiple_specifier_ (_inLexique, var_cas_multiple) ;
  nt_default_number_ (_inLexique, var_cas_has_default, var_cas_default_number) ;
  var_cas_attr = GGS_void_type ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE), GGS_bool (true, false) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_238_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_bool var_cas_auto ;
  GGS_bool var_cas_multiple ;
  GGS_luint64  var_cas_default_number ;
  GGS_bool var_cas_has_default ;
  GGS_lstring  var_cas_type ;
  _inLexique._assignFromAttribute_att_token (var_cas_type) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_INT64) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_auto) ;
  nt_attribute_name_ (_inLexique, var_cas_attr_name) ;
  nt_multiple_specifier_ (_inLexique, var_cas_multiple) ;
  nt_default_number_ (_inLexique, var_cas_has_default, var_cas_default_number) ;
  var_cas_attr = GGS_void_type ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE), GGS_bool (true, false) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_257_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_lstring  var_cas_type ;
  GGS_bool var_cas_auto ;
  _inLexique._assignFromAttribute_att_token (var_cas_type) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FLOAT) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_auto) ;
  var_cas_attr_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_attr = GGS_void_type ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE), GGS_bool (true, false) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'impl_attr_def'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_attr_def_goil_imp_def_271_20_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_attr_name,
                                GGS_imp_type  &var_cas_attr) {
  GGS_lstring  var_cas_type ;
  GGS_bool var_cas_auto ;
  GGS_stringset  var_cas_en ;
  _inLexique._assignFromAttribute_att_token (var_cas_type) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ENUM) COMMA_HERE) ;
  nt_auto_specifier_ (_inLexique, var_cas_auto) ;
  nt_enumeration_ (_inLexique, var_cas_en) ;
  GGS_lstring  automatic_var_2 ;
  nt_attribute_name_ (_inLexique, automatic_var_2) ;
  GGS_bool automatic_var_3 ;
  nt_multiple_specifier_ (_inLexique, automatic_var_3) ;
  GGS_bool automatic_var_4 ;
  GGS_lstring  automatic_var_5 ;
  nt_default_name_ (_inLexique, automatic_var_4, automatic_var_5) ;
  var_cas_attr_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
  var_cas_attr = GGS_void_type ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE), GGS_bool (true, false) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'auto_specifier'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_auto_specifier_goil_imp_def_287_21_ (goil_lexique & _inLexique,
                                GGS_bool &var_cas_auto) {
  switch (select_goil_imp_def_3 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_WITH_5FAUTO) COMMA_HERE) ;
      var_cas_auto = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_auto = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'uint32_number_set'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_uint32_number_set_goil_imp_def_298_24_ (goil_lexique & _inLexique,
                                GGS_uint32_set  &var_cas_set) {
  switch (select_goil_imp_def_4 (_inLexique)) {
    case 1 : {
      GGS_luint64  var_cas_first ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5B) COMMA_HERE) ;
      switch (select_goil_imp_def_5 (_inLexique)) {
        case 1 : {
          GGS_luint64  var_cas_last ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_first) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_set_5Fstart_5Fuint_5Fnumber) COMMA_HERE) ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_last) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          var_cas_set = GGS_uint32_range ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_first.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (310)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (310)), var_cas_last.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (311)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (311)) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique._assignFromAttribute_integerNumber (var_cas_first) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          switch (select_goil_imp_def_6 (_inLexique)) {
            case 1 : {
              GGS_luint64  var_cas_last ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2E_2E) COMMA_HERE) ;
              _inLexique._assignFromAttribute_integerNumber (var_cas_last) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
              if (((var_cas_first.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (320)))._operator_strictSup (var_cas_last.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (320)))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "Empty range") COMMA_SOURCE_FILE_AT_LINE (321)) ;
              }
              var_cas_set = GGS_uint32_range ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_first.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (326)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (326)), var_cas_last.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (327)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (327)) COMMA_HERE) ;
              } break ;
            case 2 : {
              GGS_list_uint32  var_cas_numList ;
              var_cas_numList = GGS_list_uint32 ::constructor_emptyList () ;
              var_cas_numList._addAssign_operation (var_cas_first.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (331)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (331))) ;
              { bool syntaxRepeat_7 = true ;
                while (syntaxRepeat_7) {
                  switch (select_repeat_goil_imp_def_7 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2C) COMMA_HERE) ;
                      _inLexique._assignFromAttribute_integerNumber (var_cas_first) ;
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
                      var_cas_numList._addAssign_operation (var_cas_first.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (336)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (336))) ;
                      } break ;
                    default :
                      syntaxRepeat_7 = false ;
                      break ;
                  }
                }
              }
              var_cas_set = GGS_uint32_list ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_numList COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5D) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_set = GGS_uint32_empty_set ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'sint32_number_set'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_sint32_number_set_goil_imp_def_347_24_ (goil_lexique & _inLexique,
                                GGS_sint32_set  &var_cas_set) {
  switch (select_goil_imp_def_8 (_inLexique)) {
    case 1 : {
      GGS_luint64  var_cas_ssfirst ;
      GGS_sint64  var_cas_first ;
      GGS_sint64  var_cas_fs ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5B) COMMA_HERE) ;
      switch (select_goil_imp_def_9 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2D) COMMA_HERE) ;
          var_cas_fs = GGS_sint64 (true, 1LL)._operator_unary_minus (_inLexique COMMA_HERE) ;
          } break ;
        case 2 : {
          var_cas_fs = GGS_sint64 (true, 1LL) ;
          } break ;
        default :
          break ;
      }
      switch (select_goil_imp_def_10 (_inLexique)) {
        case 1 : {
          GGS_sint64  var_cas_last ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_ssfirst) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_set_5Fstart_5Fuint_5Fnumber) COMMA_HERE) ;
          var_cas_first = var_cas_fs._multiply_operation (_inLexique, var_cas_ssfirst.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (357)).reader_sint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (357)) ;
          nt_signed_number_ (_inLexique, var_cas_last) ;
          var_cas_set = GGS_sint32_range ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_first.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (361)), var_cas_last.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (362)) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique._assignFromAttribute_integerNumber (var_cas_ssfirst) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          var_cas_first = var_cas_fs._multiply_operation (_inLexique, var_cas_ssfirst.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (366)).reader_sint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (366)) COMMA_SOURCE_FILE_AT_LINE (366)) ;
          switch (select_goil_imp_def_11 (_inLexique)) {
            case 1 : {
              GGS_sint64  var_cas_last ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2E_2E) COMMA_HERE) ;
              nt_signed_number_ (_inLexique, var_cas_last) ;
              var_cas_set = GGS_sint32_range ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_first.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (373)), var_cas_last.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (374)) COMMA_HERE) ;
              } break ;
            case 2 : {
              GGS_list_sint32  var_cas_numList ;
              var_cas_numList = GGS_list_sint32 ::constructor_emptyList () ;
              var_cas_numList._addAssign_operation (var_cas_first.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (378))) ;
              { bool syntaxRepeat_12 = true ;
                while (syntaxRepeat_12) {
                  switch (select_repeat_goil_imp_def_12 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2C) COMMA_HERE) ;
                      nt_signed_number_ (_inLexique, var_cas_first) ;
                      var_cas_numList._addAssign_operation (var_cas_first.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (383))) ;
                      } break ;
                    default :
                      syntaxRepeat_12 = false ;
                      break ;
                  }
                }
              }
              var_cas_set = GGS_sint32_list ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_numList COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5D) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_set = GGS_sint32_empty_set ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'uint64_number_set'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_uint64_number_set_goil_imp_def_394_24_ (goil_lexique & _inLexique,
                                GGS_uint64_set  &var_cas_set) {
  var_cas_set = GGS_uint64_empty_set ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'sint64_number_set'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_sint64_number_set_goil_imp_def_398_24_ (goil_lexique & _inLexique,
                                GGS_sint64_set  &var_cas_set) {
  var_cas_set = GGS_sint64_empty_set ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'float_number_set'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_float_number_set_goil_imp_def_402_23_ (goil_lexique & _inLexique,
                                GGS_float_set  &var_cas_set) {
  var_cas_set = GGS_float_empty_set ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'default_uint32_number'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_uint32_number_goil_imp_def_407_28_ (goil_lexique & _inLexique,
                                GGS_uint32_class  &var_cas_def) {
  switch (select_goil_imp_def_13 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      switch (select_goil_imp_def_14 (_inLexique)) {
        case 1 : {
          GGS_luint64  var_cas_default_number ;
          _inLexique._assignFromAttribute_integerNumber (var_cas_default_number) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
          var_cas_def = GGS_uint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_default_number.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (413)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (413)) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NO_5FDEFAULT) COMMA_HERE) ;
          var_cas_def = GGS_void_uint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_uint (true, 0U) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_AUTO) COMMA_HERE) ;
          var_cas_def = GGS_auto_uint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_uint (true, 0U) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      var_cas_def = GGS_void_uint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_uint (true, 0U) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'default_sint32_number'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_sint32_number_goil_imp_def_427_28_ (goil_lexique & _inLexique,
                                GGS_sint32_class  &var_cas_def) {
  switch (select_goil_imp_def_15 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      switch (select_goil_imp_def_16 (_inLexique)) {
        case 1 : {
          GGS_sint64  var_cas_default_number ;
          nt_signed_number_ (_inLexique, var_cas_default_number) ;
          var_cas_def = GGS_sint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), var_cas_default_number.reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (433)) COMMA_HERE) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NO_5FDEFAULT) COMMA_HERE) ;
          var_cas_def = GGS_void_sint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_sint (true, 0L) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_AUTO) COMMA_HERE) ;
          var_cas_def = GGS_auto_sint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_sint (true, 0L) COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      var_cas_def = GGS_void_sint32_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_sint (true, 0L) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'default_uint64_number'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_uint64_number_goil_imp_def_447_28_ (goil_lexique & _inLexique,
                                GGS_uint64_class  &var_cas_def) {
  var_cas_def = GGS_void_uint64_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_uint64 (true, 0LLU) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'default_sint64_number'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_sint64_number_goil_imp_def_451_28_ (goil_lexique & _inLexique,
                                GGS_sint64_class  &var_cas_def) {
  var_cas_def = GGS_void_sint64_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_sint64 (true, 0LL) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'default_float_number'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_float_number_goil_imp_def_455_27_ (goil_lexique & _inLexique,
                                GGS_float_class  &var_cas_def) {
  var_cas_def = GGS_void_float_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_double (true, 0.000000e+00) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'default_string'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_string_goil_imp_def_459_21_ (goil_lexique & _inLexique,
                                GGS_string_class  &var_cas_def) {
  var_cas_def = GGS_void_string_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_string (true, "") COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'default_enum'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_enum_goil_imp_def_463_19_ (goil_lexique & _inLexique,
                                GGS_basic_type  &var_cas_def) {
  var_cas_def = GGS_void ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'default_bool'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_bool_goil_imp_def_467_19_ (goil_lexique & _inLexique,
                                GGS_bool_class  &var_cas_def) {
  var_cas_def = GGS_void_bool_class ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, false) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'signed_number'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_signed_number_goil_imp_def_471_20_ (goil_lexique & _inLexique,
                                GGS_sint64  &var_cas_num) {
  GGS_luint64  var_cas_number ;
  GGS_sint64  var_cas_sign ;
  var_cas_sign = GGS_sint64 (true, 1LL) ;
  switch (select_goil_imp_def_17 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2D) COMMA_HERE) ;
      var_cas_sign = GGS_sint64 (true, 1LL)._operator_unary_minus (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
  _inLexique._assignFromAttribute_integerNumber (var_cas_number) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
  var_cas_num = var_cas_sign._multiply_operation (_inLexique, var_cas_number.reader_uint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (476)).reader_sint64 (_inLexique COMMA_SOURCE_FILE_AT_LINE (476)) COMMA_SOURCE_FILE_AT_LINE (476)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'uint32_attribute_name'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_uint32_attribute_name_goil_imp_def_482_28_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_name) {
  switch (select_goil_imp_def_18 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_PRIORITY) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PRIORITY"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ACTIVATION) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "ACTIVATION"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MAXALLOWEDVALUE) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "MAXALLOWEDVALUE"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_TICKSPERBASE) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TICKSPERBASE"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MINCYCLE) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "MINCYCLE"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_CATEGORY) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "CATEGORY"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_QUEUESIZE) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "QUEUESIZE"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 8 : {
      _inLexique._assignFromAttribute_att_token (var_cas_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'attribute_name'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_attribute_name_goil_imp_def_502_21_ (goil_lexique & _inLexique,
                                GGS_lstring  &var_cas_name) {
  switch (select_goil_imp_def_19 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_STATUS) COMMA_HERE) ;
      var_cas_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique._assignFromAttribute_att_token (var_cas_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'multiple_specifier'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_multiple_specifier_goil_imp_def_510_25_ (goil_lexique & _inLexique,
                                GGS_bool &var_cas_multiple) {
  switch (select_goil_imp_def_20 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5B) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5D) COMMA_HERE) ;
      var_cas_multiple = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_multiple = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'default_number'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_number_goil_imp_def_519_21_ (goil_lexique & _inLexique,
                                GGS_bool &var_cas_has_default,
                                GGS_luint64  &var_cas_default_number) {
  switch (select_goil_imp_def_21 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_integerNumber (var_cas_default_number) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_uint_5Fnumber) COMMA_HERE) ;
      var_cas_has_default = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_default_number = GGS_luint64 ::constructor_new (_inLexique, GGS_uint64 (true, 0LLU), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_has_default = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'default_name'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_default_name_goil_imp_def_530_19_ (goil_lexique & _inLexique,
                                GGS_bool &var_cas_has_default,
                                GGS_lstring  &var_cas_default_name) {
  switch (select_goil_imp_def_22 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3D) COMMA_HERE) ;
      _inLexique._assignFromAttribute_att_token (var_cas_default_name) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      var_cas_has_default = GGS_bool (true, true) ;
      } break ;
    case 2 : {
      var_cas_default_name = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_has_default = GGS_bool (true, false) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'enumeration'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_enumeration_goil_imp_def_544_18_ (goil_lexique & _inLexique,
                                GGS_stringset  &var_cas_en) {
  var_cas_en = GGS_stringset ::constructor_emptySet () ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5B) COMMA_HERE) ;
  nt_enumerator_ (_inLexique, var_cas_en) ;
  { bool syntaxRepeat_23 = true ;
    while (syntaxRepeat_23) {
      switch (select_repeat_goil_imp_def_23 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__2C) COMMA_HERE) ;
          nt_enumerator_ (_inLexique, var_cas_en) ;
          } break ;
        default :
          syntaxRepeat_23 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__5D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'enumerator'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_enumerator_goil_imp_def_558_17_ (goil_lexique & _inLexique,
                                GGS_stringset  &var_cas_en) {
  switch (select_goil_imp_def_24 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_EXTENDED) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "EXTENDED") COMMA_SOURCE_FILE_AT_LINE (561)) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_STANDARD) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "STANDARD") COMMA_SOURCE_FILE_AT_LINE (562)) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NON) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NON") COMMA_SOURCE_FILE_AT_LINE (563)) ;
      } break ;
    case 4 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FULL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "FULL") COMMA_SOURCE_FILE_AT_LINE (564)) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FSTATIC_5FINTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SEND_STATIC_INTERNAL") COMMA_SOURCE_FILE_AT_LINE (565)) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FSTATIC_5FEXTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SEND_STATIC_EXTERNAL") COMMA_SOURCE_FILE_AT_LINE (566)) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FDYNAMIC_5FEXTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SEND_DYNAMIC_EXTERNAL") COMMA_SOURCE_FILE_AT_LINE (567)) ;
      } break ;
    case 8 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FZERO_5FINTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SEND_ZERO_INTERNAL") COMMA_SOURCE_FILE_AT_LINE (568)) ;
      } break ;
    case 9 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SEND_5FZERO_5FEXTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SEND_ZERO_EXTERNAL") COMMA_SOURCE_FILE_AT_LINE (569)) ;
      } break ;
    case 10 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FZERO_5FINTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "RECEIVE_ZERO_INTERNAL") COMMA_SOURCE_FILE_AT_LINE (570)) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FZERO_5FEXTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "RECEIVE_ZERO_EXTERNAL") COMMA_SOURCE_FILE_AT_LINE (571)) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVE_5FUNQUEUED_5FINTERNAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "RECEIVE_UNQUEUED_INTERNAL") COMMA_SOURCE_FILE_AT_LINE (572)) ;
      } break ;
    case 13 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ALWAYS) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "ALWAYS") COMMA_SOURCE_FILE_AT_LINE (573)) ;
      } break ;
    case 14 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEVER) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEVER") COMMA_SOURCE_FILE_AT_LINE (574)) ;
      } break ;
    case 15 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWEQUALSX) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "MASKEDNEWEQUALSX") COMMA_SOURCE_FILE_AT_LINE (575)) ;
      } break ;
    case 16 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWDIFFERSX) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "MASKEDNEWDIFFERSX") COMMA_SOURCE_FILE_AT_LINE (576)) ;
      } break ;
    case 17 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISEQUAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISEQUAL") COMMA_SOURCE_FILE_AT_LINE (577)) ;
      } break ;
    case 18 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISDIFFERENT) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISDIFFERENT") COMMA_SOURCE_FILE_AT_LINE (578)) ;
      } break ;
    case 19 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWEQUALSMASKEDOLD) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "MASKEDNEWEQUALSMASKEDOLD") COMMA_SOURCE_FILE_AT_LINE (579)) ;
      } break ;
    case 20 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MASKEDNEWDIFFERSMASKEDOLD) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "MASKEDNEWDIFFERSMASKEDOLD") COMMA_SOURCE_FILE_AT_LINE (580)) ;
      } break ;
    case 21 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISWITHIN) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISWITHIN") COMMA_SOURCE_FILE_AT_LINE (581)) ;
      } break ;
    case 22 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISOUTSIDE) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISOUTSIDE") COMMA_SOURCE_FILE_AT_LINE (582)) ;
      } break ;
    case 23 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISGREATER) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISGREATER") COMMA_SOURCE_FILE_AT_LINE (583)) ;
      } break ;
    case 24 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISLESSOREQUAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISLESSOREQUAL") COMMA_SOURCE_FILE_AT_LINE (584)) ;
      } break ;
    case 25 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISLESS) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISLESS") COMMA_SOURCE_FILE_AT_LINE (585)) ;
      } break ;
    case 26 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NEWISGREATEROREQUAL) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NEWISGREATEROREQUAL") COMMA_SOURCE_FILE_AT_LINE (586)) ;
      } break ;
    case 27 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ONEEVERYN) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "ONEEVERYN") COMMA_SOURCE_FILE_AT_LINE (587)) ;
      } break ;
    case 28 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_NONE) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "NONE") COMMA_SOURCE_FILE_AT_LINE (588)) ;
      } break ;
    case 29 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_ACTIVATETASK) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "ACTIVATETASK") COMMA_SOURCE_FILE_AT_LINE (589)) ;
      } break ;
    case 30 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SETEVENT) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SETEVENT") COMMA_SOURCE_FILE_AT_LINE (590)) ;
      } break ;
    case 31 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COMCALLBACK) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "COMCALLBACK") COMMA_SOURCE_FILE_AT_LINE (591)) ;
      } break ;
    case 32 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_FLAG) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "FLAG") COMMA_SOURCE_FILE_AT_LINE (592)) ;
      } break ;
    case 33 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_INMCALLBACK) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "INMCALLBACK") COMMA_SOURCE_FILE_AT_LINE (593)) ;
      } break ;
    case 34 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_STATIC) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "STATIC") COMMA_SOURCE_FILE_AT_LINE (594)) ;
      } break ;
    case 35 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_DYNAMIC) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "DYNAMIC") COMMA_SOURCE_FILE_AT_LINE (595)) ;
      } break ;
    case 36 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COMSTANDARD) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "COMSTANDARD") COMMA_SOURCE_FILE_AT_LINE (597)) ;
      } break ;
    case 37 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_COMEXTENDED) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "COMEXTENDED") COMMA_SOURCE_FILE_AT_LINE (598)) ;
      } break ;
    case 38 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_SENT) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "SENT") COMMA_SOURCE_FILE_AT_LINE (599)) ;
      } break ;
    case 39 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_RECEIVED) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "RECEIVED") COMMA_SOURCE_FILE_AT_LINE (600)) ;
      } break ;
    case 40 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_DIRECT) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "DIRECT") COMMA_SOURCE_FILE_AT_LINE (601)) ;
      } break ;
    case 41 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_PERIODIC) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "PERIODIC") COMMA_SOURCE_FILE_AT_LINE (602)) ;
      } break ;
    case 42 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_MIXED) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  GGS_string (true, "MIXED") COMMA_SOURCE_FILE_AT_LINE (603)) ;
      } break ;
    case 43 : {
      GGS_lstring  var_cas_idf ;
      _inLexique._assignFromAttribute_att_token (var_cas_idf) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
      ::routine_add_to_stringset (_inLexique,  var_cas_en,  var_cas_idf.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (604)) COMMA_SOURCE_FILE_AT_LINE (604)) ;
      } break ;
    default :
      break ;
  }
  nt_impl_parameter_list_ (_inLexique) ;
  GGS_lstring  automatic_var_6 ;
  nt_description_ (_inLexique, automatic_var_6) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'impl_parameter_list'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_impl_parameter_list_goil_imp_def_610_26_ (goil_lexique & _inLexique) {
  switch (select_goil_imp_def_25 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7B) COMMA_HERE) ;
      { bool syntaxRepeat_26 = true ;
        while (syntaxRepeat_26) {
          switch (select_repeat_goil_imp_def_26 (_inLexique)) {
            case 2 : {
              nt_implementation_def_ (_inLexique) ;
              } break ;
            default :
              syntaxRepeat_26 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__7D) COMMA_HERE) ;
      } break ;
    case 2 : {
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'implementation_def'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_imp_def::
pr_implementation_def_goil_imp_def_622_25_ (goil_lexique & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1_idf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (goil_lexique::goil_lexique_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

