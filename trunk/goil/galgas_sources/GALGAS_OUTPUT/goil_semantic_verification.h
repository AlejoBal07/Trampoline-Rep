//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'goil_semantic_verification.h'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 12th, 2009, at 14h44'53"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_semantic_verification_DEFINED
#define goil_semantic_verification_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "goil_alarm_verif.h"
#include "goil_app_verif.h"
#include "goil_message_verif.h"
#include "goil_options.h"
#include "goil_semantic_types.h"
#include "goil_types_root.h"
#include "isrs_verif.h"
#include "resources_verif.h"
#include "scheduletable_verif.h"
#include "tasks_verif.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'counters_well_formed'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_counters_well_formed (C_Compiler &,
                                const GGS_counter_map   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'alarms_well_formed'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_alarms_well_formed (C_Compiler &,
                                const GGS_alarm_map   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'events_well_formed'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_events_well_formed (C_Compiler &,
                                const GGS_event_map   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Routine 'all_events_and_resources_and_messages_defined_and_used'      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_events_and_resources_and_messages_defined_and_used (C_Compiler &,
                                const GGS_root_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'all_event_masks_different'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_event_masks_different (C_Compiler &,
                                GGS_event_map   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'all_alarm_actions_correct'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_alarm_actions_correct (C_Compiler &,
                                GGS_alarm_map  ,
                                GGS_task_map  ,
                                GGS_counter_map   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'verify_all'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verify_all (C_Compiler &,
                                GGS_root_obj  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

#endif
