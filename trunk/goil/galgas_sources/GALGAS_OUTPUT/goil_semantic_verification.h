//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'goil_semantic_verification.h'                     *
//                    Generated by version version 2.1.4                     *
//                     january 10th, 2011, at 14h31'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_semantic_verification_ENTITIES_DEFINED
#define goil_semantic_verification_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "resources_verif.h"
#include "goil_types_resource.h"
#include "goil_basic_types.h"
#include "scheduletable_verif.h"
#include "goil_types_root.h"
#include "goil_types_os.h"
#include "goil_routines.h"
#include "com_type.h"
#include "goil_semantic_types.h"
#include "goil_types_action.h"
#include "goil_types_task.h"
#include "goil_types_timing_prot.h"
#include "cfg_types.h"
#include "goil_types_isr.h"
#include "goil_types_counter.h"
#include "goil_types_scheduletable.h"
#include "goil_types_app.h"
#include "goil_types_networkmessage.h"
#include "tasks_verif.h"
#include "isrs_verif.h"
#include "goil_message_verif.h"
#include "goil_alarm_verif.h"
#include "goil_app_verif.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'counters_well_formed'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_counters_5F_well_5F_formed (const GALGAS_counter_5F_map constinArgument0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'alarms_well_formed'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_alarms_5F_well_5F_formed (const GALGAS_alarm_5F_map constinArgument0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'events_well_formed'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_events_5F_well_5F_formed (const GALGAS_event_5F_map constinArgument0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Routine 'all_events_and_resources_and_messages_defined_and_used'      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_5F_events_5F_and_5F_resources_5F_and_5F_messages_5F_defined_5F_and_5F_used (const GALGAS_root_5F_obj constinArgument0,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'all_event_masks_different'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_5F_event_5F_masks_5F_different (GALGAS_event_5F_map inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'all_alarm_actions_correct'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_all_5F_alarm_5F_actions_5F_correct (GALGAS_alarm_5F_map inArgument0,
                                                 GALGAS_task_5F_map inArgument1,
                                                 GALGAS_counter_5F_map inArgument2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'verify_all'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verify_5F_all (GALGAS_root_5F_obj & ioArgument0,
                            C_Compiler * inCompiler
                            COMMA_LOCATION_ARGS) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
