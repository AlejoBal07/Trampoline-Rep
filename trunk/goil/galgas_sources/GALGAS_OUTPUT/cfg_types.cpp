//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'cfg_types.cpp'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 22th, 2010, at 19h16'57"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "cfg_types.h"
#include "galgas-utilities/C_Compiler.h"
#include "galgas/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "cfg_types.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                           @config auto ptr type                           *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_config::GALGASap_config (const GALGASap_config & inSource) :
GALGASap_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_config::GALGASap_config (const GALGASap_object & inSource) :
GALGASap_map (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_config) ;
}

//---------------------------------------------------------------------------*

GALGASap_config & GALGASap_config::operator = (const GALGASap_config & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_config GALGASap_config::readerCall_overriddenMap (LOCATION_ARGS) const {
  GALGASap_config result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_overriddenMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_basic_5F_type GALGASap_config::readerCall_valueForKey (const GALGASap_string & inOperand_0,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGASap_basic_5F_type result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_valueForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_config * GALGASap_config::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_config) ;
    return (GALGAS_config *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_config * GALGASap_config::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_config) ;
    return (const GALGAS_config *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_config::GALGASap_config (const GALGAS_config * inSourcePtr) :
GALGASap_map (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_config & GALGASap_config::operator = (GALGAS_config * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Class for element of '@config' map                     *
//                                                                           *
//---------------------------------------------------------------------------*

cCollectionElement_config::cCollectionElement_config (const GALGASap_lstring & inKey,
                                                      const GALGASap_basic_5F_type & in_value
                                                      COMMA_LOCATION_ARGS) :
cCollectionElementForMap (inKey COMMA_THERE),
mAttribute_value (in_value) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_config::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_value.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_config::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_config (mAttribute_lkey, mAttribute_value COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_config::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_value.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_config::compare (const cCollectionElement * inOperand) {
  cCollectionElement_config * operand = (cCollectionElement_config *) inOperand ;
  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = GALGASap_basic_5F_type::objectCompare (mAttribute_value, operand->mAttribute_value) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_config::GALGAS_config (LOCATION_ARGS) :
GALGAS_map (THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_config GALGASap_config::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_config * result = NULL ;
  macroMyNew (result, GALGAS_config (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_config GALGASap_config::constructor_mapWithMapToOverride (GALGASap_config & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGASap_config result ;
  if (inMapToOverride.isValid ()) {
    result = constructor_emptyMap (THERE) ;
    result.ptr (HERE)->mOverridenMap = inMapToOverride ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_config::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_config newMap (constructor_emptyMap (THERE)) ;
    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;
    *this = newMap ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_config GALGAS_config::reader_overriddenMap (LOCATION_ARGS) const {
  GALGASap_config result = mOverridenMap ;
  if (! result.isValid ()) {
    result = GALGASap_config::constructor_emptyMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_config::modifier_put (GALGASap_lstring inKey,
                                  GALGASap_basic_5F_type inArgument0,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_config * p = NULL ;
  macroMyNew (p, cCollectionElement_config (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes (p) ;
  const utf32 kInsertErrorMessage [27] = {
    TO_UNICODE ('K'),
    TO_UNICODE ('e'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('u'),
    TO_UNICODE ('p'),
    TO_UNICODE ('l'),
    TO_UNICODE ('i'),
    TO_UNICODE ('c'),
    TO_UNICODE ('a'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_config_get [22] = {
  TO_UNICODE ('K'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_config::method_get (GALGASap_lstring inKey,
                                GALGASap_basic_5F_type & outArgument0,
                                C_Compiler * inCompiler
                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_config_get COMMA_THERE) ;
  cCollectionElement_config * p = (cCollectionElement_config *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_config) ;
    outArgument0 = p->mAttribute_value ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_config::modifier_del (GALGASap_lstring inKey,
                                  GALGASap_basic_5F_type & outArgument0,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) {
  const utf32 kRemoveErrorMessage [22] = {
    TO_UNICODE ('K'),
    TO_UNICODE ('e'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('o'),
    TO_UNICODE ('t'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (0)
  } ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cCollectionElement_config * p = (cCollectionElement_config *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_config) ;
    outArgument0 = p->mAttribute_value ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_basic_5F_type GALGAS_config::reader_valueForKey (const GALGASap_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_config * p = (cCollectionElement_config *) attributes.ptrNoVerif () ;
  GALGASap_basic_5F_type result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_config) ;
    result = p->mAttribute_value ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_config::modifier_setValueForKey (GALGASap_basic_5F_type inAttributeValue,
                                             GALGASap_string inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_config * p = (cCollectionElement_config *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_config *> (p) != NULL, "p is not an instance of cCollectionElement_config *", 0, 0) ;
    p->mAttribute_value = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_get (C_Compiler * inCompiler,
                                                            GALGASap_config & ioMap,
                                                            GALGASap_lstring & inKey
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_config_get COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGASap_config & ioMap,
                                                               GALGASap_string & inKey
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             @config map type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_config ("config",
                               & kTypeDescriptor_GALGAS_map) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_config::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_config ;
}
//---------------------------------------------------------------------------*

void GALGASap_config::modifierCall_del (GALGASap_lstring constinArgument0,
                                        GALGASap_basic_5F_type & outArgument1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_del (constinArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_config::modifierCall_put (GALGASap_lstring constinArgument0,
                                        GALGASap_basic_5F_type constinArgument1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_put (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_config::modifierCall_setValueForKey (GALGASap_basic_5F_type constinArgument0,
                                                   GALGASap_string constinArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setValueForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_config::instanceMethodCall_get (GALGASap_lstring constinArgument0,
                                              GALGASap_basic_5F_type & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_get (constinArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                          @config map enumeration                          *
//---------------------------------------------------------------------------*

GALGAS_config::cEnumerator::cEnumerator (const GALGASap_config & inEnumeratedObject,
                                         const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_lkey (),
attribute_value () {
}

//---------------------------------------------------------------------------*

void GALGAS_config::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_config * p = (cCollectionElement_config *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_config) ;
  attribute_lkey = p->mAttribute_lkey ;
  attribute_value = p->mAttribute_value ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         @cfg_attrs auto ptr type                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs::GALGASap_cfg_5F_attrs (const GALGASap_cfg_5F_attrs & inSource) :
GALGASap_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs::GALGASap_cfg_5F_attrs (const GALGASap_object & inSource) :
GALGASap_map (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_cfg_5F_attrs) ;
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs & GALGASap_cfg_5F_attrs::operator = (const GALGASap_cfg_5F_attrs & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGASap_cfg_5F_attrs::readerCall_overriddenMap (LOCATION_ARGS) const {
  GALGASap_cfg_5F_attrs result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_overriddenMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_lstring GALGASap_cfg_5F_attrs::readerCall_tpl_5F_attrForKey (const GALGASap_string & inOperand_0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGASap_lstring result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_tpl_5F_attrForKey (inOperand_0, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_cfg_5F_attrs * GALGASap_cfg_5F_attrs::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_cfg_5F_attrs) ;
    return (GALGAS_cfg_5F_attrs *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_cfg_5F_attrs * GALGASap_cfg_5F_attrs::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_cfg_5F_attrs) ;
    return (const GALGAS_cfg_5F_attrs *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs::GALGASap_cfg_5F_attrs (const GALGAS_cfg_5F_attrs * inSourcePtr) :
GALGASap_map (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs & GALGASap_cfg_5F_attrs::operator = (GALGAS_cfg_5F_attrs * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for element of '@cfg_5F_attrs' map                  *
//                                                                           *
//---------------------------------------------------------------------------*

cCollectionElement_cfg_5F_attrs::cCollectionElement_cfg_5F_attrs (const GALGASap_lstring & inKey,
                                                                  const GALGASap_lstring & in_tpl_5F_attr
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElementForMap (inKey COMMA_THERE),
mAttribute_tpl_5F_attr (in_tpl_5F_attr) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_cfg_5F_attrs::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_tpl_5F_attr.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_cfg_5F_attrs::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_cfg_5F_attrs (mAttribute_lkey, mAttribute_tpl_5F_attr COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_cfg_5F_attrs::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_tpl_5F_attr.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_cfg_5F_attrs::compare (const cCollectionElement * inOperand) {
  cCollectionElement_cfg_5F_attrs * operand = (cCollectionElement_cfg_5F_attrs *) inOperand ;
  enumComparisonResult result = GALGASap_lstring::objectCompare (mAttribute_lkey, operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = GALGASap_lstring::objectCompare (mAttribute_tpl_5F_attr, operand->mAttribute_tpl_5F_attr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_cfg_5F_attrs::GALGAS_cfg_5F_attrs (LOCATION_ARGS) :
GALGAS_map (THERE) {
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGASap_cfg_5F_attrs::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_cfg_5F_attrs * result = NULL ;
  macroMyNew (result, GALGAS_cfg_5F_attrs (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGASap_cfg_5F_attrs::constructor_mapWithMapToOverride (GALGASap_cfg_5F_attrs & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGASap_cfg_5F_attrs result ;
  if (inMapToOverride.isValid ()) {
    result = constructor_emptyMap (THERE) ;
    result.ptr (HERE)->mOverridenMap = inMapToOverride ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGASap_cfg_5F_attrs::insulate (LOCATION_ARGS) {
  if (ptr (HERE)->retainCount () > 1) {
    GALGASap_cfg_5F_attrs newMap (constructor_emptyMap (THERE)) ;
    newMap.ptr (HERE)->copyFrom (ptr(HERE)) ;
    *this = newMap ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGAS_cfg_5F_attrs::reader_overriddenMap (LOCATION_ARGS) const {
  GALGASap_cfg_5F_attrs result = mOverridenMap ;
  if (! result.isValid ()) {
    result = GALGASap_cfg_5F_attrs::constructor_emptyMap (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_cfg_5F_attrs::modifier_put (GALGASap_lstring inKey,
                                        GALGASap_lstring inArgument0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_cfg_5F_attrs * p = NULL ;
  macroMyNew (p, cCollectionElement_cfg_5F_attrs (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes (p) ;
  const utf32 kInsertErrorMessage [29] = {
    TO_UNICODE ('A'),
    TO_UNICODE ('t'),
    TO_UNICODE ('t'),
    TO_UNICODE ('r'),
    TO_UNICODE ('i'),
    TO_UNICODE ('b'),
    TO_UNICODE ('u'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE (' '),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_cfg_5F_attrs_get [28] = {
  TO_UNICODE ('A'),
  TO_UNICODE ('t'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('b'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_cfg_5F_attrs::method_get (GALGASap_lstring inKey,
                                      GALGASap_lstring & outArgument0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_cfg_5F_attrs_get COMMA_THERE) ;
  cCollectionElement_cfg_5F_attrs * p = (cCollectionElement_cfg_5F_attrs *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_cfg_5F_attrs) ;
    outArgument0 = p->mAttribute_tpl_5F_attr ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_cfg_5F_attrs::modifier_del (GALGASap_lstring inKey,
                                        GALGASap_lstring & outArgument0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  const utf32 kRemoveErrorMessage [28] = {
    TO_UNICODE ('A'),
    TO_UNICODE ('t'),
    TO_UNICODE ('t'),
    TO_UNICODE ('r'),
    TO_UNICODE ('i'),
    TO_UNICODE ('b'),
    TO_UNICODE ('u'),
    TO_UNICODE ('t'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('o'),
    TO_UNICODE ('t'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (0)
  } ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cCollectionElement_cfg_5F_attrs * p = (cCollectionElement_cfg_5F_attrs *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_cfg_5F_attrs) ;
    outArgument0 = p->mAttribute_tpl_5F_attr ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_lstring GALGAS_cfg_5F_attrs::reader_tpl_5F_attrForKey (const GALGASap_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  cCollectionElement_cfg_5F_attrs * p = (cCollectionElement_cfg_5F_attrs *) attributes.ptrNoVerif () ;
  GALGASap_lstring result ;
  if (NULL != p) {
    macroValidObject (p, cCollectionElement_cfg_5F_attrs) ;
    result = p->mAttribute_tpl_5F_attr ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_cfg_5F_attrs::modifier_setTpl_5F_attrForKey (GALGASap_lstring inAttributeValue,
                                                         GALGASap_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_cfg_5F_attrs * p = (cCollectionElement_cfg_5F_attrs *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    MF_Assert (dynamic_cast <cCollectionElement_cfg_5F_attrs *> (p) != NULL, "p is not an instance of cCollectionElement_cfg_5F_attrs *", 0, 0) ;
    p->mAttribute_tpl_5F_attr = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_get (C_Compiler * inCompiler,
                                                            GALGASap_cfg_5F_attrs & ioMap,
                                                            GALGASap_lstring & inKey
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_cfg_5F_attrs_get COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGASap_cfg_5F_attrs & ioMap,
                                                               GALGASap_string & inKey
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * result = NULL ;
  if (ioMap.isValid () && inKey.isValid ()) {
    ioMap.insulate (THERE) ;
    result = ioMap.ptr (HERE)->searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                            @cfg_attrs map type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_cfg_5F_attrs ("cfg_attrs",
                                     & kTypeDescriptor_GALGAS_map) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_cfg_5F_attrs::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_cfg_5F_attrs ;
}
//---------------------------------------------------------------------------*

void GALGASap_cfg_5F_attrs::modifierCall_del (GALGASap_lstring constinArgument0,
                                              GALGASap_lstring & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_del (constinArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_cfg_5F_attrs::modifierCall_put (GALGASap_lstring constinArgument0,
                                              GALGASap_lstring constinArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_put (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_cfg_5F_attrs::modifierCall_setTpl_5F_attrForKey (GALGASap_lstring constinArgument0,
                                                               GALGASap_string constinArgument1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setTpl_5F_attrForKey (constinArgument0, constinArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_cfg_5F_attrs::instanceMethodCall_get (GALGASap_lstring constinArgument0,
                                                    GALGASap_lstring & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
  outArgument1.drop () ;
//---
  if (isValid ()) {
    ptr (HERE)->method_get (constinArgument0, outArgument1, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                        @cfg_attrs map enumeration                         *
//---------------------------------------------------------------------------*

GALGAS_cfg_5F_attrs::cEnumerator::cEnumerator (const GALGASap_cfg_5F_attrs & inEnumeratedObject,
                                               const bool inAscending) :
AC_GALGAS_Enumerator (inEnumeratedObject.ptrNoVerif (), inAscending),
attribute_lkey (),
attribute_tpl_5F_attr () {
}

//---------------------------------------------------------------------------*

void GALGAS_cfg_5F_attrs::cEnumerator::updateAttributeProxies (void) {
  capCollectionElement object = currentObject () ;
  cCollectionElement_cfg_5F_attrs * p = (cCollectionElement_cfg_5F_attrs *) object.ptrNoVerif () ;
  macroValidObject (p, cCollectionElement_cfg_5F_attrs) ;
  attribute_lkey = p->mAttribute_lkey ;
  attribute_tpl_5F_attr = p->mAttribute_tpl_5F_attr ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                           @attrs auto ptr type                            *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_attrs::GALGASap_attrs (const GALGASap_attrs & inSource) :
GALGASap_basic_5F_type (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_attrs::GALGASap_attrs (const GALGASap_object & inSource) :
GALGASap_basic_5F_type (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_attrs) ;
}

//---------------------------------------------------------------------------*

GALGASap_attrs & GALGASap_attrs::operator = (const GALGASap_attrs & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGASap_attrs::readerCall_attrs (LOCATION_ARGS) const {
  GALGASap_cfg_5F_attrs result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_attrs (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_attrs * GALGASap_attrs::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_attrs) ;
    return (GALGAS_attrs *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_attrs * GALGASap_attrs::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_attrs) ;
    return (const GALGAS_attrs *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_attrs::GALGASap_attrs (const GALGAS_attrs * inSourcePtr) :
GALGASap_basic_5F_type (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_attrs & GALGASap_attrs::operator = (GALGAS_attrs * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGASap_attrs::objectCompare (const GALGASap_attrs & inOperand1,
                                                    const GALGASap_attrs & inOperand2) {
  enumComparisonResult result = GALGASap_basic_5F_type::objectCompare (inOperand1, inOperand2) ;
  if (kOperandEqual == result) {
    result = GALGASap_cfg_5F_attrs::objectCompare (inOperand1.ptr (HERE)->mAttribute_attrs, inOperand2.ptr (HERE)->mAttribute_attrs) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_attrs::GALGAS_attrs (const GALGASap_location & constinAttribute_location,
                            const GALGASap_cfg_5F_attrs & constinAttribute_attrs
                            COMMA_LOCATION_ARGS) :
GALGAS_basic_5F_type (constinAttribute_location COMMA_THERE),
mAttribute_attrs (constinAttribute_attrs) {
}

//---------------------------------------------------------------------------*

GALGASap_attrs GALGASap_attrs::constructor_new (GALGASap_location & inAttribute_location,
                                                GALGASap_cfg_5F_attrs & inAttribute_attrs
                                                COMMA_LOCATION_ARGS) {
  GALGAS_attrs * result = NULL ;
  if (inAttribute_location.isValid () && inAttribute_attrs.isValid ()) {
    macroMyNew (result, GALGAS_attrs (inAttribute_location, inAttribute_attrs COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attrs::description (C_String & ioString,
                                const PMSInt32 /* inIndentation */) const {
  ioString << "<class @"
           << typeDescriptor ()->mGalgasTypeName
           << ":" ;
//  mAttribute_attrs->description (ioString, inIndentation + 1) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_attrs::~GALGAS_attrs (void) {
}

//---------------------------------------------------------------------------*

void GALGASap_attrs::insulate (LOCATION_ARGS) {
  if (isValid () && (ptr (HERE)->retainCount () > 1)) {
    GALGASap_attrs p = constructor_new (ptr (HERE)->mAttribute_location, ptr (HERE)->mAttribute_attrs COMMA_THERE) ;
    *this = p ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attrs::method_string (GALGASap_string & outArgument_s,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_s.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_0 ("" COMMA_SOURCE_FILE_AT_LINE (23)) ;
  outArgument_s = temp_0 ;
}

//---------------------------------------------------------------------------*

GALGASap_cfg_5F_attrs GALGAS_attrs::reader_attrs (UNUSED_LOCATION_ARGS) const {
  return mAttribute_attrs ;
}

//---------------------------------------------------------------------------*

void GALGAS_attrs::modifier_setLocation (GALGASap_location inValue
                                         COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_location = inValue ;
}

//---------------------------------------------------------------------------*

void GALGAS_attrs::modifier_setAttrs (GALGASap_cfg_5F_attrs inValue
                                      COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_attrs = inValue ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             @attrs class type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attrs ("attrs",
                              & kTypeDescriptor_GALGAS_basic_5F_type) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attrs::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attrs ;
}
//---------------------------------------------------------------------------*

void GALGASap_attrs::modifierCall_setAttrs (GALGASap_cfg_5F_attrs inArgument0
                                            COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setAttrs (inArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_attrs::modifierCall_setLocation (GALGASap_location inArgument0
                                               COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setLocation (inArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         @interrupts auto ptr type                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGASap_interrupts::GALGASap_interrupts (const GALGASap_interrupts & inSource) :
GALGASap_basic_5F_type (inSource) {
}

//---------------------------------------------------------------------------*

GALGASap_interrupts::GALGASap_interrupts (const GALGASap_object & inSource) :
GALGASap_basic_5F_type (inSource) {
  macroNullOrValidObject (mPtr, GALGAS_interrupts) ;
}

//---------------------------------------------------------------------------*

GALGASap_interrupts & GALGASap_interrupts::operator = (const GALGASap_interrupts & inSource) {
  macroAssignObject (mPtr, inSource.mPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGASap_luint_36__34_ GALGASap_interrupts::readerCall_it_5F_count (LOCATION_ARGS) const {
  GALGASap_luint_36__34_ result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_it_5F_count (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGASap_ident_5F_map GALGASap_interrupts::readerCall_it_5F_sources (LOCATION_ARGS) const {
  GALGASap_ident_5F_map result ;
  if (isValid ()) {
    result = ptr (HERE)->reader_it_5F_sources (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS_interrupts * GALGASap_interrupts::ptr (LOCATION_ARGS) {
    macroValidObjectThere (mPtr, GALGAS_interrupts) ;
    return (GALGAS_interrupts *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  const GALGAS_interrupts * GALGASap_interrupts::ptr (LOCATION_ARGS) const {
    macroValidObjectThere (mPtr, const GALGAS_interrupts) ;
    return (const GALGAS_interrupts *) mPtr ;
  }
#endif

//---------------------------------------------------------------------------*

GALGASap_interrupts::GALGASap_interrupts (const GALGAS_interrupts * inSourcePtr) :
GALGASap_basic_5F_type (inSourcePtr) {
}

//---------------------------------------------------------------------------*

GALGASap_interrupts & GALGASap_interrupts::operator = (GALGAS_interrupts * inSourcePtr) {
  macroAssignObject (mPtr, inSourcePtr) ;
  return *this ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGASap_interrupts::objectCompare (const GALGASap_interrupts & inOperand1,
                                                         const GALGASap_interrupts & inOperand2) {
  enumComparisonResult result = GALGASap_basic_5F_type::objectCompare (inOperand1, inOperand2) ;
  if (kOperandEqual == result) {
    result = GALGASap_luint_36__34_::objectCompare (inOperand1.ptr (HERE)->mAttribute_it_5F_count, inOperand2.ptr (HERE)->mAttribute_it_5F_count) ;
  }
  if (kOperandEqual == result) {
    result = GALGASap_ident_5F_map::objectCompare (inOperand1.ptr (HERE)->mAttribute_it_5F_sources, inOperand2.ptr (HERE)->mAttribute_it_5F_sources) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_interrupts::GALGAS_interrupts (const GALGASap_location & constinAttribute_location,
                                      const GALGASap_luint_36__34_ & constinAttribute_it_5F_count,
                                      const GALGASap_ident_5F_map & constinAttribute_it_5F_sources
                                      COMMA_LOCATION_ARGS) :
GALGAS_basic_5F_type (constinAttribute_location COMMA_THERE),
mAttribute_it_5F_count (constinAttribute_it_5F_count),
mAttribute_it_5F_sources (constinAttribute_it_5F_sources) {
}

//---------------------------------------------------------------------------*

GALGASap_interrupts GALGASap_interrupts::constructor_new (GALGASap_location & inAttribute_location,
                                                          GALGASap_luint_36__34_ & inAttribute_it_5F_count,
                                                          GALGASap_ident_5F_map & inAttribute_it_5F_sources
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_interrupts * result = NULL ;
  if (inAttribute_location.isValid () && inAttribute_it_5F_count.isValid () && inAttribute_it_5F_sources.isValid ()) {
    macroMyNew (result, GALGAS_interrupts (inAttribute_location, inAttribute_it_5F_count, inAttribute_it_5F_sources COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_interrupts::description (C_String & ioString,
                                     const PMSInt32 /* inIndentation */) const {
  ioString << "<class @"
           << typeDescriptor ()->mGalgasTypeName
           << ":" ;
//  mAttribute_it_5F_count->description (ioString, inIndentation + 1) ;
  ioString << ", " ;
//  mAttribute_it_5F_sources->description (ioString, inIndentation + 1) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_interrupts::~GALGAS_interrupts (void) {
}

//---------------------------------------------------------------------------*

void GALGASap_interrupts::insulate (LOCATION_ARGS) {
  if (isValid () && (ptr (HERE)->retainCount () > 1)) {
    GALGASap_interrupts p = constructor_new (ptr (HERE)->mAttribute_location, ptr (HERE)->mAttribute_it_5F_count, ptr (HERE)->mAttribute_it_5F_sources COMMA_THERE) ;
    *this = p ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_interrupts::method_string (GALGASap_string & outArgument_s,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_s.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGASap_string temp_0 ("" COMMA_SOURCE_FILE_AT_LINE (29)) ;
  outArgument_s = temp_0 ;
}

//---------------------------------------------------------------------------*

GALGASap_luint_36__34_ GALGAS_interrupts::reader_it_5F_count (UNUSED_LOCATION_ARGS) const {
  return mAttribute_it_5F_count ;
}

//---------------------------------------------------------------------------*

GALGASap_ident_5F_map GALGAS_interrupts::reader_it_5F_sources (UNUSED_LOCATION_ARGS) const {
  return mAttribute_it_5F_sources ;
}

//---------------------------------------------------------------------------*

void GALGAS_interrupts::modifier_setLocation (GALGASap_location inValue
                                              COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_location = inValue ;
}

//---------------------------------------------------------------------------*

void GALGAS_interrupts::modifier_setIt_5F_count (GALGASap_luint_36__34_ inValue
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_it_5F_count = inValue ;
}

//---------------------------------------------------------------------------*

void GALGAS_interrupts::modifier_setIt_5F_sources (GALGASap_ident_5F_map inValue
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_it_5F_sources = inValue ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          @interrupts class type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_interrupts ("interrupts",
                                   & kTypeDescriptor_GALGAS_basic_5F_type) ;


//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_interrupts::typeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_interrupts ;
}
//---------------------------------------------------------------------------*

void GALGASap_interrupts::modifierCall_setIt_5F_count (GALGASap_luint_36__34_ inArgument0
                                                       COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setIt_5F_count (inArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_interrupts::modifierCall_setIt_5F_sources (GALGASap_ident_5F_map inArgument0
                                                         COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setIt_5F_sources (inArgument0 COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGASap_interrupts::modifierCall_setLocation (GALGASap_location inArgument0
                                                    COMMA_LOCATION_ARGS) {
//--- Release 'output' arguments
//---
  if (isValid ()) {
    insulate (THERE) ;
    ptr (HERE)->modifier_setLocation (inArgument0 COMMA_THERE) ;
  }
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


