semantics goil_semantics :
  import option goil_options in "goil_options.ggs" ;

list @number_list {
    @luint64 number ;
}

abstract class @number_set {}

class @uint_range extends @number_set {
    @luint64 first ;
    @luint64 last ;
}

class @uint_list extends @number_set {
    @number_list numbers ;
}

map @implementationSpec {
    @lstring type ;
}

map @implementation {
    @implementationSpec spec ;
    insert insertSpec error message "%K is duplicated in %L";
}

action generateHeader
    ?@lstring version
    ?@lstring description
;

map @os_imp {
    @lstring type ;
    
}

abstract class @oil_obj {
    @lstring description ;
}

#
# Alarm classes
#
abstract class @action_obj {}
abstract class @autostart_obj {}

class @void_action extends @action_obj {
}

class @setevent_action extends @action_obj {
    @lstring task_name ;
    @lstring event_name ;
}

class @activatetask_action extends @action_obj {
    @lstring task_name ;
}

class @callback_action extends @action_obj {
    @lstring function_name ;
}

class @autostart_void extends @autostart_obj {
}

class @autostart_true_params extends @autostart_obj {
    @luint64   alarm_time ;
    @luint64   cycle_time ;
    @stringset app_modes ;
}

class @alarm_obj extends @oil_obj {
    @lstring        counter_name ;
    @action_obj     action_params ;
    @autostart_obj  autostart_params ;
}

map @alarm_map {
    @alarm_obj  alarm ;
    insert insertAlarm error message "Alarm %K is duplicated in %L";
}

#
# ISR classes
#

class @isr_obj extends @oil_obj {
    @luint64   category ;
    @stringset resources ;
    @stringset messages ;
}

map @isr_map {
    @isr_obj isr ;
    insert insertISR error message "ISR %K is duplicated in %L" ;
}

end semantics ;
