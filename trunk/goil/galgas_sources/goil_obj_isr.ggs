#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est protégé par la loi sur la propriété intellectuelle
#
# This software is distributed under the Lesser GNU Public Licence
#
# GOIL isr object parser
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

syntax goil_obj_isr :

import lexique goil_lexique in "goil_lexique.ggs" ;
import option goil_options in "goil_options.ggs" ;
import semantics goil_semantics in "goil_semantics.ggs" ;

nonterminal <isr>
    ?!@isr_map isrs ;

nonterminal <isr_attributes>
    ?!@luint64   category
    ?!@luint64   priority
    ?!@stringset resources
    ?!@stringset messages
    ?!@ident_map other_fields ;

#
# external nonterminals
#
nonterminal <description>
    !@lstring description ;

nonterminal <free_field> ?!@ident_map ids ;

#
# isr rules implementation
#
rule <isr>
    ?!@isr_map isrs :

    @lstring isr_name ;
    @isr_obj isr ;
    @luint64 category := [@luint64 new !0L !here] ;
    @luint64 priority := [@luint64 new !0L !here] ;
    @lstring description := [@lstring new !"" !here] ;
    @stringset resources := [@stringset emptySet] ;
    @stringset messages := [@stringset emptySet] ;
    @ident_map other_fields [emptyMap] ;

    $ISR$ ;
    $idf$ ?isr_name ;
    ${$ ;
    <isr_attributes> !?category !?priority !?resources !?messages !?other_fields;
    $}$ ;
    <description> ?description ;
    $;$ ;

    if [category uint64] == 0L then
        error here : "CATEGORY missing for ISR ".[isr_name string] ;
    end if ;
    if [priority uint64] == 0L then
        error here : "PRIORITY missing or equal to 0 for ISR ".[isr_name string] ;
    end if ;

    isr := [@isr_obj new !description !category !priority !resources !messages !other_fields] ;
    [!?isrs insertISR !isr_name !isr] ;
end rule ;

rule <isr_attributes>
    ?!@luint64   category
    ?!@luint64   priority
    ?!@stringset resources
    ?!@stringset messages
    ?!@ident_map other_fields
:
    @bool has_priority := false ;

    repeat
    while
        @uint64 cat := [category uint64] ;
        if cat != 0L then
            error here : "ISR category attribute already defined for this ISR" ;
        end if ;
        $CATEGORY$ ; $=$ ; $uint_number$ ?category ; $;$ ;
        cat := [category uint64] ;
        if (cat != 1L) & (cat != 2L) then
            error here : "ISR category should be 1 ou 2" ;
        end if ;
    while
        if has_priority then
            error here : "PRIORITY already defined for this ISR" ;
        end if ;
        $PRIORITY$ ; $=$ ; $uint_number$ ?priority ; $;$ ;
        has_priority := true ;
    while
        @lstring rez ;
        $RESOURCE$ ; $=$ ; $idf$ ?rez ; $;$ ;
        resources += ![rez string] ;
    while
        @lstring mess ;
        $MESSAGE$ ; $=$ ; $idf$ ?mess ; $;$ ;
        messages += ![mess string] ;
    while
        <free_field> !?other_fields ;
        $;$ ;
    end repeat;
end rule ;

end syntax ;
# vim:ft=ggs:ts=4:sw=4
