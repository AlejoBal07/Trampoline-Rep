#
# @file trace_description.ggs
#
# @section File description
#
# Generation of an application description for trace
# visualisation tools.
#
# @section Copyright
#
# Goil OIL compiler for Trampoline
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est protégé par la loi sur la propriété intellectuelle
#
# This software is distributed under the GNU Public Licence v2
#
# @section File informations
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

semantics trace_description:

import semantics goil_types_root in "goil_types_root.ggs";
import semantics goil_routines in "goil_routines.ggs";

routine generate_description
  ??@root_obj cpu
:
  @trace tr := [[cpu os] trace];
  cast tr:
  when == @trace_on to do
    if get_bool(![to desc] !false) then
      @string res := "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n";
      res .= "<app name=\"".[getProjectName() lastPathComponent]."\">\n";

      @tasks_by_type stasks [emptySortedList];
      # sort tasks according to type (basic or extended)
      foreach [cpu tasks] do
        if [[task events] length] > 0 then
          stasks += !0 ![key string];
        else
          stasks += !1 ![key string];
        end if ;
      end foreach ;

      @uint id := 0;
      if get_bool(![to trace_task] !true) then
        res .= "<tasks>\n";
        @tasks_by_type stasks [emptySortedList];
        # sort tasks according to type (basic or extended)
        foreach [cpu tasks] do
          if [[task events] length] > 0 then
            stasks += !0 ![key string];
          else
            stasks += !1 ![key string];
          end if ;
        end foreach ;
      
       foreach stasks do
          res .= "  <task name=\"".name."\" id=\"".[id string]."\"/>\n";
          id++;
        end foreach;
        res .= "</tasks>\n";
      end if;
    
      id := [stasks length];
      if get_bool(![to trace_isr] !true) then
        res .= "<isrs>\n";
        foreach [cpu isrs] do
          res .= "  <isr name=\"".[key string]."\" id=\"".[id string]."\"/>\n";
          id++;
        end foreach;
        res .= "</isrs>\n";
      end if;
    
      if get_bool(![to trace_resource] !true) then
        id := 0;
        res .= "<resources>\n";
        foreach [cpu resources] do
          res .= "  <resource name=\"".[key string]."\" id=\"".[id string]."\"/>\n";
          id++;
        end foreach;
        res .= "</resources>\n";
      end if;

      if get_bool(![to trace_alarm] !true) then
        id := 0;
        res .= "<alarms>\n";
        foreach [cpu alarms] do
          res .= "  <alarm name=\"".[key string]."\" id=\"".[id string]."\"/>\n";
          id++;
        end foreach;
        res .= "</alarms>\n";
      end if;

      res .= "</app>\n";

      @string desc_file_name := getProjectName().".desc";
      [res writeToFile!desc_file_name];
    end if;
  else end cast;
end routine;

end semantics;