/**
 * @file tpl_app_config.c
 *
 * @section desc File description
 *
 * OS data structure generated from application % !CPUNAME %
 * Automatically generated by goil on % !TIMESTAMP %
 * from root OIL file % !OILFILENAME %
 *
 * @section copyright Copyright
 *
 * Trampoline OS
 *
 * Trampoline is copyright (c) IRCCyN 2005-2007
 * Trampoline is protected by the French intellectual property law.
 *
 * This software is distributed under the Lesser GNU Public Licence
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */

#include "tpl_app_config.h"
#include "tpl_app_definitions.h"

#include "tpl_os_internal_types.h"
#include "tpl_machine.h"
#include "tpl_os_it.h"
#include "tpl_os_it_kernel.h"
#include "tpl_os_alarm_kernel.h"
#include "tpl_os_alarm.h"
#include "tpl_os_rez_kernel.h"
#include "tpl_os_rez.h"
#include "tpl_os_event_kernel.h"
#include "tpl_os_event.h"
#include "tpl_os_action.h"
#include "tpl_os_kernel.h"
#include "tpl_os_definitions.h"

%
if USECOM then
%
#include "tpl_com_notification.h"
#include "tpl_com_mo.h"
#include "tpl_com_internal.h"
#include "tpl_com_internal_com.h"
#include "tpl_com_external_com.h"
#include "tpl_com_app_copy.h"
#include "tpl_com_filters.h"
%
end if

if AUTOSAR then
%
#include "tpl_as_schedtable.h"
#include "tpl_as_st_kernel.h"
#include "tpl_as_action.h"
#include "tpl_as_isr_kernel.h"
#include "tpl_as_isr.h"
#include "tpl_as_counter.h"
#include "tpl_as_app_kernel.h"
#include "tpl_as_trusted_fct.h"
#include "tpl_as_trusted_fct_kernel.h"
#include "tpl_as_application.h"
%
end if
%
#define API_START_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
%
foreach EVENTS
  before
%
/*=============================================================================
 * Declaration of event masks
 */
%
  do
%
/* Event % !NAME % */
#define % !NAME %_mask
CONST(EventMaskType, AUTOMATIC) % !NAME % = % !NAME %_mask;
%
end foreach

foreach REGULARRESOURCES
  before
%
/*=============================================================================
 * Declaration of resources IDs
 */
%
  do
%
/* Resource % !NAME % */
#define % !NAME %_id % !INDEX %
CONST(ResourceType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
end foreach
%
/*=============================================================================
 * Declaration of processes IDs
 */
%
foreach PROCESSES do
  if PROCESSKIND == "Task" then
%
/* Task % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(TaskType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
  else
    #
    # ISR ids are only available for AUTOSAR
    #
    if AUTOSAR then
%
/* ISR % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(ISRType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
    end if
  end if
end foreach

foreach ALARMS
  before
%
/*=============================================================================
 * Declaration of Alarm IDs
 */
%
  do
%
/* Alarm % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(AlarmType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
end foreach

if AUTOSAR then
  foreach COUNTERS
    before
%
/*=============================================================================
 * Declaration of Counter IDs
 */
%
    do
%
/* Counter % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(CounterType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
  end foreach
end if

if USECOM then
  foreach MESSAGES
    before
%
/*=============================================================================
 * Declaration of messages IDs
 */
%
    do
%
/* Message % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(MessageIdentifier, AUTOMATIC) % !NAME % = % !NAME %_id;
%
  end foreach
end if

if AUTOSAR then
  foreach SCHEDULETABLES
    before
%
/*=============================================================================
 * Declaration of Scheduletables IDs
 */
%
    do
%
/* Schedule table % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(ScheduleTableType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
  end foreach

  foreach OSAPPLICATIONS
    before
%
/*=============================================================================
 * Declaration of OS Application IDs
 */
%
    do
%
/* OS Application % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(ApplicationType, OS_APPL_CONST) % !NAME % = % !NAME %_id;
%
  end foreach

  foreach TRUSTEDFUNCTIONS
    before
%
/*=============================================================================
 * Declaration of Trusted functions IDs
 */
%
    do
%
/* Trusted function % !NAME % identifier */
#define % !NAME %_id % !INDEX %
CONST(TrustedFunctionIndexType, AUTOMATIC) % !NAME % = % !NAME %_id;
%
  end foreach
end if
%
#define API_STOP_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
%
foreach REGULARRESOURCES
  before
%
/*=============================================================================
 * Definition and initialization of regular Resource related structures
 */
%
  do
    template resource_descriptor
end foreach

foreach INTERNALRESOURCES
  before
%
/*=============================================================================
 * Definition and initialization of internal Resource related structures
 */
%
  do
    template internal_resource_descriptor
end foreach

foreach COUNTERS
  before
%
/*=============================================================================
 * Definition and initialization of Counters related defines and structures
 */
%
  do
    template counter_descriptor
end foreach

foreach TASKS
  before
%
/*=============================================================================
 * Definition and initialization of Task related defines and structures
 */
%
  do
    template task_descriptor
end foreach

foreach ISRS2
  before
%
/*=============================================================================
 * Definition and initialization of ISR2 related defines and structures
 */
%
  do
    template isr_descriptor
end foreach

%
#if WITH_IT_TABLE == YES
#define OS_START_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
$IT_TABLE$
#define OS_STOP_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
#endif

#define OS_START_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
/*=============================================================================
 * Definition and initialization of process tables (tasks and isrs)
 */
$PROC_STATIC_TABLE$

$PROC_DYNAMIC_TABLE$

#if EXTENDED_TASK_COUNT > 0
$TASK_EVENTS_TABLE$
#endif

#if ISR_COUNT > 0
$ISR_HELPER_TABLE$

#ifdef WITH_AUTOSAR
$ISR_ENABLE_TABLE$
#endif

#endif

#define OS_STOP_SEC_CONST_UNSPECIFIED
#include "tpl_memmap.h"
%
foreach ALARMS
  before
%
/*=============================================================================
 * Definition and initialization of Alarm related structures
 */
%
  do
    template alarm_descriptor
end foreach

%/*=============================================================================
 * Declaration of flags functions
 */
$FLAGSFUNCTIONS$

/*=============================================================================
 * Definition and initialization of Messages related structures
 */
$NETWORKMESSAGES$
$MESSAGES$

%
if AUTOSAR then
  foreach SCHEDULETABLES
    before
%
/*=============================================================================
 * Declaration of schedule tables related defines and structures
 */

%
    do
      template scheduletable_descriptor
end foreach
%
/*=============================================================================
 * Declaration of OS applications related defines and structures
 */
$OSAPPLICATIONS$

/*=============================================================================
 * Declaration of Trusted Functions table
 */
$TRUSTED_FCTS$

$TRUSTED_TABLE$

%
end if
%
%
if USEMEMORYPROTECTION then
%
$MEMORY_PROTECTION$
%
end if
%
/*=============================================================================
 * Definition and initialization of Ready List structures
 */
$READY_LIST$

$PROC_NAMES$

/*
#if CRC_LEVEL > 0
$CRC_TABLE$
#endif
*/

/* End of file tpl_app_config.c */

