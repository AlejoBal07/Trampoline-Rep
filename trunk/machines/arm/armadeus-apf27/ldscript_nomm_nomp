MEMORY
{
		bootrom (rx) : ORIGIN = 0x00000000, LENGTH = 16K /* hard-wired into microcontroller */
		dram0 (wx)   : ORIGIN = 0xA0000000, LENGTH = 64M
		dram1 (wx)   : ORIGIN = 0xB0000000, LENGTH = 64M
		fvram (wx)   : ORIGIN = 0xFFF00000, LENGTH = 979K /* free (unused by system) VRAM memory */
		vvram (wx)   : ORIGIN = 0xFFFF4C00, LENGTH = 45K  /* vector RAM */
}

ENTRY (tpl_arm_bootstrap_entry)

SECTIONS
{
  .text : ALIGN(4) {
		*(.ubootsupport) /* this section is used to boot from uboot easily */
    *(.text)
		*(.osApiCode) /* to be removed when then goil template "code/tpl_invoque.goilTemplate" will use MemMap.h */
    *(.glue_7*)
	} > dram0

  .rodata : ALIGN(4) {
    *(.rodata)
		*(.rodata*)
  } > dram0
  
  /*
   * vars
   */
  .data : ALIGN(4) {
    *(.data)
		*(.data*)
	} > dram0

	.bss (NOLOAD) : ALIGN(4) {
		*(.bss)
		*(.bss*)
		*(.COMMON)
    *(.stacks)
  } > dram0
/*
  .debug (NOLOAD) : ALIGN(4) {
    *(.debug);
    . = ALIGN(4);
    *(.debug_srcinfo);
    . = ALIGN(4);
    *(.debug_sfnames);
    . = ALIGN(4);
    *(.debug_aranges*);
    . = ALIGN(4);
    *(.debug_pubnames*);
    . = ALIGN(4);
    *(.debug_info*);
    . = ALIGN(4);
    *(.debug_abbrev*);
    . = ALIGN(4);
    *(.debug_line*);
    . = ALIGN(4);
    *(.debug_frame*);
    . = ALIGN(4);
    *(.debug_str*);
    . = ALIGN(4);
    *(.debug_loc*);
    . = ALIGN(4);
    *(.debug_macinfo);
    . = ALIGN(4);
    *(.debug_weaknames);
    . = ALIGN(4);
    *(.debug_funcnames);
    . = ALIGN(4);
    *(.debug_typenames);
    . = ALIGN(4);
    *(.debug_varnames);
    . = ALIGN(4);  
  } > dram0 
*/
  .vectors : {
		. += 0xb2f0; /* jump to 0xfffffef0 */
    KEEP (* (.exceptionTable))
		. = 0xb300; /* jump to 0xffffff00 */
		KEEP (* (.interrupt_table))
	} > vvram
}

