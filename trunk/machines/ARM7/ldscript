/* Fichier : ldscript
 *
 * Script d'édition des liens utilisé dans l'étape 0.
 *
 * Auteur                : Guillaume Savaton
 * Création              : 10 février 2007
 * Dernière modification : decembre 2007 L.M
 */

/* Le point d'entrée du programme est situé à l'étiquette Vec_reset */
ENTRY(Vec_reset)

SECTIONS {

	/* On définit une plage de mémoire morte à partir de l'adresse 0.
	 *
	 * On y place en premier la table des vecteurs d'exceptions, (section .vectbl
	 * du fichier startup.o) suivie des sections de programme (.text) et de données
	 * constantes (.data) de tous les modules.
    *
    * La zone des variables est artificiellement placée en ROM au démarrage.
    * Au changement de banque, elle se retrouvera en DRAM. */
	 
	rom 0x00000000 : {
      debut_rom = .;
		* (.vectbl)
		* (.text)
		* (.rodata)
		* (.data)
      fin_rom = .;
/*   }

   .bss 0xC0000000 : {
*/   
	    
   
      debut_bss = .;
      * (.bss)
      /** (.data)*/
      * (COMMON)
      fin_bss = .;

	  

      /* L'étiquette "end" est utilisée par la bibliothèque newlib pour localiser
       * le début de la mémoire utilisable pour l'allocation dynamique (heap) */

      end = .;
	}

   

	/* On définit une plage de mémoire vive à partir de l'adresse 0x50000000.
	 *
    * Les zones de piles sont placées en SRAM interne. */
	 
	.stacks 0x50000000 (NOLOAD) : {
      debut_sram = .;
      
      irq_stack_top = .;
      . += 4K;
      irq_stack_bottom = .;

      fiq_stack_top = .;
      . += 256;
      fiq_stack_bottom = .;

      svc_stack_top = .;
	  . = debut_sram + 32K;
      svc_stack_bottom = .;
	}
	
	debordement_ram = 0xC2000000;
}

