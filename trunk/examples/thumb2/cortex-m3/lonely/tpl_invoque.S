/**
 * @file tpl_invoque.S
 *
 * @section descr File description
 *
 * System call user level invoque API.
 *
 * @warning this file is generated by gen_invoque.sh based on the 
 * tpl_os_service_ids.h header file.
 *
 * @section copyright Copyright
 *
 * Trampoline OS
 *
 * Trampoline is copyright (c) IRCCyN 2005+
 * Copyright ESEO for function and data structures documentation and ARM port
 * Trampoline is protected by the French intellectual property law.
 *
 * This software is distributed under the Lesser GNU Public Licence
 *
 * @section infos File informations
 *
 * $$Date$$
 * $$Rev$$
 * $$Author$$
 * $$URL$$
 */
#include "tpl_os_application_def.h"
#include "tpl_service_ids.h"

#if WITH_SYSTEM_CALL == NO
#error "This file should not be part of your project since WITH_SYSTEM_CALL is not defined"
#endif


#if WITH_MEMMAP == NO

#endif /* WITH_MEMMAP == NO */

#define API_START_SEC_CODE
#include "tpl_as_memmap.h"

  .global ActivateTask
ActivateTask:
  mov r3,#0
  svc #0
  bx  lr

  .global TerminateTask
TerminateTask:
  mov r3,#1
  svc #1
  bx  lr

  .global ChainTask
ChainTask:
  mov r3,#2
  svc #2
  bx  lr

  .global Schedule
Schedule:
  mov r3,#3
  svc #3
  bx  lr

  .global GetTaskID
GetTaskID:
  mov r3,#4
  svc #4
  bx  lr

  .global GetTaskState
GetTaskState:
  mov r3,#5
  svc #5
  bx  lr

  .global EnableAllInterrupts
EnableAllInterrupts:
  mov r3,#6
  svc #6
  bx  lr

  .global DisableAllInterrupts
DisableAllInterrupts:
  mov r3,#7
  svc #7
  bx  lr

  .global ResumeAllInterrupts
ResumeAllInterrupts:
  mov r3,#8
  svc #8
  bx  lr

  .global SuspendAllInterrupts
SuspendAllInterrupts:
  mov r3,#9
  svc #9
  bx  lr

  .global ResumeOSInterrupts
ResumeOSInterrupts:
  mov r3,#10
  svc #10
  bx  lr

  .global SuspendOSInterrupts
SuspendOSInterrupts:
  mov r3,#11
  svc #11
  bx  lr

  .global GetResource
GetResource:
  mov r3,#12
  svc #12
  bx  lr

  .global ReleaseResource
ReleaseResource:
  mov r3,#13
  svc #13
  bx  lr

  .global SetEvent
SetEvent:
  mov r3,#14
  svc #14
  bx  lr

  .global ClearEvent
ClearEvent:
  mov r3,#15
  svc #15
  bx  lr

  .global GetEvent
GetEvent:
  mov r3,#16
  svc #16
  bx  lr

  .global WaitEvent
WaitEvent:
  mov r3,#17
  svc #17
  bx  lr

  .global GetAlarmBase
GetAlarmBase:
  mov r3,#18
  svc #18
  bx  lr

  .global GetAlarm
GetAlarm:
  mov r3,#19
  svc #19
  bx  lr

  .global SetRelAlarm
SetRelAlarm:
  mov r3,#20
  svc #20
  bx  lr

  .global SetAbsAlarm
SetAbsAlarm:
  mov r3,#21
  svc #21
  bx  lr

  .global CancelAlarm
CancelAlarm:
  mov r3,#22
  svc #22
  bx  lr

  .global GetActiveApplicationMode
GetActiveApplicationMode:
  mov r3,#23
  svc #23
  bx  lr

  .global tpl_start_os
tpl_start_os:
  mov r3,#24
  svc #24
  bx  lr

  .global ShutdownOS
ShutdownOS:
  mov r3,#25
  svc #25
  bx  lr

  .global CallTerminateTask
CallTerminateTask:
  mov r3,#26
  svc #26
  bx  lr

  .global CallTerminateISR2
CallTerminateISR2:
  mov r3,#27
  svc #27
  bx  lr



#define API_STOP_SEC_CODE
#include "tpl_as_memmap.h"


/* End of file tpl_invoque. S */

