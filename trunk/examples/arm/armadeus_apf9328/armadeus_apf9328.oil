OIL_VERSION = "2.5" : "test" ;

IMPLEMENTATION trampoline {
    TASK {
        UINT32 STACKSIZE = 2000 ;
        UINT32 PRIORITY = 1 ;
    } ;
    ISR {
        UINT32 STACKSIZE = 2000 ;
    } ;
};

CPU test {

    OS config {
        STATUS = EXTENDED;
        ERRORHOOK = FALSE;
        PRETASKHOOK = FALSE;
        APP_SRC = "armadeus_apf9328.c";
        APP_SRC = "timer.c";
        APP_SRC = "interrupt.c";
        APP_NAME = "armadeus_apf9328_exe";
        TRAMPOLINE_BASE_PATH = "../../..";
        CFLAGS  = "-g -Wall -pedantic -Wformat -std=c99 -mcpu=arm9tdmi -Wmissing-field-initializers -mfloat-abi=soft -marm -mno-thumb-interwork"; 
        ASFLAGS = "-g -mcpu=arm9tdmi --fatal-warnings -mfloat-abi=soft"; 
        LDFLAGS = "-g --fatal-warnings --warn-common  --no-undefined -lm -lc -lgcc -L`arm-elf-gcc -print-libgcc-file-name | sed 's/libgcc.a//g'`";
        
        COMPILER  = "arm-elf-gcc";
        ASSEMBLER = "arm-elf-as";
        LINKER    = "arm-elf-ld";
        
        SYSTEM_CALL = TRUE;
        MEMMAP = TRUE{
          COMPILER = gcc;
          LINKER = gnu_ld { SCRIPT = "script.ld"; };
          ASSEMBLER = gnu_as;
          MEMORY_PROTECTION = FALSE;
        };
    } ;

    APPMODE std {
    };

    TASK task1 {
        PRIORITY = 1;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        USEFLOAT = FALSE;
    };   
    
    ISR isrTimer2 {
        CATEGORY = 2;
        PRIORITY = 10;
        SOURCE = TIMER2_INT; //name from target.cfg
    };
    
    COUNTER SystemCounter {
        SOURCE = TIMER1_INT; //name from target.cfg
        MAXALLOWEDVALUE = 2000;
        TICKSPERBASE = 10;
        MINCYCLE = 1; 
    };
    
    ALARM Alarm1{
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK {
            TASK = task1;
        };
        AUTOSTART = TRUE {
            ALARMTIME = 50;
            CYCLETIME = 50; //each 0.5s.
            APPMODE = std;
        };
    };
};
