# Makefile automatically generated by goil
# Do not modify directly this file, it can be overwritten by goil
# Instead, you can update your .oil file description.
#

# make          : build trampoline
# make doc      : extract both dev and user docs from trmpoline sources 
#                 (doxygen and dot required).
# make clean    : remove everything except the Makefile.
# 
# NOTE: dependancies are set by default. To turn off dependancies generation, 
#       use the NODEP symbol, i.e. : make clean NODEP=1
#

#############################################################################
# USER APPLICATION CONFIGURATION
#############################################################################

# name of the generated executable
# it should be declared as APP_NAME in the OS section of the .oil file.
EXEC    =  trampoline

OIL_FILE = simple_simtec.oil

#sources of the application.
# it should be declared as APP_SRC in the OS section of the .oil file (many times allowed).
SOURCES  = simple_simtec.c

# Trampoline generation flags
WITH_TRACE = false
WITH_MEMMAP = false
WITH_LINKSCRIPT = false
WITH_MEMORY_PROTECTION = false


#CFLAGS: flags used for the compilation process
# it should be declared as CFLAGS in the OS section of the .oil file (many times allowed).
CFLAGS   = -g -Wall -pedantic -Wformat -std=c99 -Wmissing-field-initializers -DSIMTEC_DEFAULT_DRIVERS
#LDLAGS: flags used for the link process
# it should be declared as LDFLAGS in the OS section of the .oil file (many times allowed).
LDFLAGS  = -g --script=../../machines/arm/simtec-eb675001/ldscript.bdi2000 -L ../../machines/arm/simtec-eb675001/default_drivers -lsimtec-dfltdrv -Map trampoline_memory.map
ifeq ($(strip $(WITH_LINKSCRIPT)),true)
LDFLAGS += -T $(basename $(OIL_FILE))/ -Wl,-Map,$(basename $(OIL_FILE)).map
endif
#ASFLAGS: flags used for the assembly process (if required)
# it should be declared as AS_FLAGS in the OS section of the .oil file (many times allowed).
ASFLAGS  = -g

#default build directory
BUILD_DIR = build

# Autosar extension
# If 'true', Autosar extension are compiled in (schedule tables, ...)
AUTOSAR = true

# Interrupt vector generation
GENITVEC = 

#############################################################################
# COMPILER CONFIGURATION
#############################################################################

#program used to compile files.
# it should be declared as COMPILER in the OS section of the .oil file.
# default is 'gcc'
CC=arm-none-eabi-gcc

#program used to link files during compilation process.
# it should be declared as LINKER in the OS section of the .oil file.
# default is 'gcc'
LD=arm-none-eabi-ld

#program used to link files during compilation process.
# it should be declared as ASSEMBER in the OS section of the .oil file.
# default is 'as'
AS=arm-none-eabi-as

#############################################################################
# TRAMPOLINE CONFIGURATION
#############################################################################

# Trampoline root path to source code.
# it should be declared as TRAMPOLINE_BASE_PATH in the OS section of the .oil file.
TPL_BASE_PATH = ../..

#Target is given in goil command line when generating the Makefile. 
#If you update the target here, it will be taken into account, and 
#a new Makefile will be generated with the new target.
TARGET=arm/simtec-eb675001
ARCH=arm
CHIP=simtec-eb675001


# WITH_SYSTEM_CALL is true when compiling trampoline
# with system call support. It is false otherwise
WITH_SYSTEM_CALL=true

#############################################################################
# OIL COMPILER CONFIGURATION
#############################################################################
# Goil OIL compiler tool configuration.
# If the GOIL_TEMPLATE_PATH is commented, the default template path is used
# (it can be saved in the .profile file).
GOIL_COMPILER = goil
GOIL_TEMPLATE_PATH = ../../goil/templates

# if there is an interrupt generation, the oil file depends on target.cfg
OIL_FILE_DEP = 

#############################################################################
# DOCUMENTATION GENERATION
#############################################################################
# The doxygen tool is used to extract both user and developpment 
# documentation from the source code. 
# See http://www.stack.nl/~dimitri/doxygen/
# You should also install Graphviz dot tool to build dependancy graph in
# the documentation:
# see http://www.graphviz.org/
DOXYGEN = doxygen

#############################################################################
# TARGET SPECIFIC STUFF
#############################################################################



#############################################################################
# call Trampoline makefile rules.
#############################################################################

#call main Trampoline Makefile
OS_MAKE_PATH = $(TPL_BASE_PATH)/make
include $(OS_MAKE_PATH)/Makefile

# vim:ft=make
