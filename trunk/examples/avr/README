AVR sample project for AVR (ATMega2560 (Arduino Mega boards), but it should not be difficult to target other AVR chips). This port uses gcc only.
To build the example, you can use either a Makefile (Linux/Mac/Windows) or an AVR Studio 4 project (Windows only).

[Makefile]
* you should adapt your OIL file to your specific installation of avr-gcc (COMPILER, LINKER and ASSEMBLER keys in the CPU/OS/BUILD section).
* Then build oil related generated .c and .h files and the Makefile:
goil --target=avr --templates=../../goilv2/templates/ firstAVR.oil
(The generated file .aps is an AVR Studio project for Windows users).
* and build the project:
make
Both a .elf and a .hex files are generated. goil will now be called directly from the Makefile if the .oil file is updated.

[AVR Studio]
An AVR studio project is generated directly by goil from the .oil file. So User application source file SHOULD be given in the .oil file (CPU/OS section). The Goil.exe OIL compiler should be in your PATH (in the project directory for instance).
* Each time that the .oil file is updated, DO NOT FORGET to run Goil to update data structures! This should be made with the 'runGoil.bat' script. The AVR studio project is created only if it does not exists. So, it prevents to overwrite project configuration. To re-generate the project file, just remove it and run goil again.
* NOTE: Keys COMPILER, LINKER and ASSEMBLER are NOT used in the AVR Studio project generation (it uses default ones). You should manually update the target in the project configuration window (default is ATMega2560).

[Linux/Unix]
For Linux (Debian/Ubuntu) users, you can install avr-gcc:
$sudo apt-get install avr-lic gcc-avr avrdude
for Mac OS X, you can use the AVR CrossPack (http://www.obdev.at/products/crosspack/download.html)

Compile the example:
$goil --target=avr --templates=../../goilv2/templates/ firstAVR.oil
make:
$make
Then, you can flash directly your µC with the command. In this example:
  * -p m2560 is for the ATMega2560
  * -c avrispmkII is the (ISP programmer on the Arduino Mega) on the USB interface. 
    Type 'avrdude -c toto' to get the full programer list
  * -P the device name used in the Arduino User Interface.
$avrdude -c avrispmkII -p m2560 -P /dev/tty.usbmodem1421 -U flash:w:AVRTrampolineBin.hex
