//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'template_semantics.cpp'                        *
//                    Generated by version version 2.2.0                     *
//                       may 30th, 2011, at 17h17'53"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "template_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType::GALGAS_goilTemplateType (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateType::constructor_boolType (UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateType result ;
  result.mEnum = kEnum_boolType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateType::constructor_unsignedType (UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateType result ;
  result.mEnum = kEnum_unsignedType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateType::constructor_stringType (UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateType result ;
  result.mEnum = kEnum_stringType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateType::constructor_listType (UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateType result ;
  result.mEnum = kEnum_listType ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_goilTemplateType_messageGoilTemplateType [5] = {
  "",
  "bool",
  "unsigned",
  "string",
  "list"
} ;

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_goilTemplateType::reader_messageGoilTemplateType (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (isValid ()) {
    result = GALGAS_string (gEnumNameArrayFor_goilTemplateType_messageGoilTemplateType [mEnum]) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_goilTemplateType [5] = {
  "(not built)",
  "boolType",
  "unsignedType",
  "stringType",
  "listType"
} ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateType::description (C_String & ioString,
                                           const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @goilTemplateType: " << gEnumNameArrayFor_goilTemplateType [mEnum] << ">" ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_goilTemplateType::objectCompare (const GALGAS_goilTemplateType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          @goilTemplateType type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateType ("goilTemplateType",
                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateType::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateType result ;
  const GALGAS_goilTemplateType * p = (const GALGAS_goilTemplateType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateType *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@goilTemplateTypeList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateTypeList : public cCollectionElement {
//--- List attributes
  public : GALGAS_goilTemplateType mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_goilTemplateTypeList (const GALGAS_goilTemplateType & in_mType
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateTypeList::cCollectionElement_goilTemplateTypeList (const GALGAS_goilTemplateType & in_mType
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateTypeList::isValid (void) const {
  return mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateTypeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateTypeList (mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateTypeList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_goilTemplateTypeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_goilTemplateTypeList * operand = (cCollectionElement_goilTemplateTypeList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList::GALGAS_goilTemplateTypeList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList::GALGAS_goilTemplateTypeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateTypeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::constructor_listWithValue (const GALGAS_goilTemplateType & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateTypeList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_goilTemplateTypeList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_goilTemplateType & in_mType
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateTypeList * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateTypeList (in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::addAssign_operation (const GALGAS_goilTemplateType & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_prependValue (GALGAS_goilTemplateType inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_popFirst (GALGAS_goilTemplateType & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_popLast (GALGAS_goilTemplateType & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::method_first (GALGAS_goilTemplateType & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::method_last (GALGAS_goilTemplateType & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::operator_concat (const GALGAS_goilTemplateTypeList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateTypeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                  const GALGAS_uint & inLength,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateTypeList result = GALGAS_goilTemplateTypeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateTypeList result = GALGAS_goilTemplateTypeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::dotAssign_operation (const GALGAS_goilTemplateTypeList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateTypeList::modifier_setMTypeAtIndex (GALGAS_goilTemplateType inOperand,
                                                            GALGAS_uint inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    p->mAttribute_mType = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateTypeList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateTypeList * p = (cCollectionElement_goilTemplateTypeList *) attributes.ptr () ;
  GALGAS_goilTemplateType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateTypeList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_goilTemplateTypeList::cEnumerator_goilTemplateTypeList (const GALGAS_goilTemplateTypeList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType cEnumerator_goilTemplateTypeList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateTypeList * p = (const cCollectionElement_goilTemplateTypeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateTypeList) ;
  return p->mAttribute_mType ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @goilTemplateTypeList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateTypeList ("goilTemplateTypeList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateTypeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateTypeList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateTypeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateTypeList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateTypeList GALGAS_goilTemplateTypeList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateTypeList result ;
  const GALGAS_goilTemplateTypeList * p = (const GALGAS_goilTemplateTypeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateTypeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateTypeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateFieldMap::cMapElement_goilTemplateFieldMap (const GALGAS_lstring & inKey,
                                                                    const GALGAS_goilTemplateType & in_mType,
                                                                    const GALGAS_uint_36__34_ & in_mUnsigned_36__34_Value,
                                                                    const GALGAS_string & in_mStringValue,
                                                                    const GALGAS_goilTemplateFieldMapList & in_mListValue
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mUnsigned_36__34_Value (in_mUnsigned_36__34_Value),
mAttribute_mStringValue (in_mStringValue),
mAttribute_mListValue (in_mListValue) {
}

//---------------------------------------------------------------------------*

bool cMapElement_goilTemplateFieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mUnsigned_36__34_Value.isValid () && mAttribute_mStringValue.isValid () && mAttribute_mListValue.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_goilTemplateFieldMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_goilTemplateFieldMap (mAttribute_lkey, mAttribute_mType, mAttribute_mUnsigned_36__34_Value, mAttribute_mStringValue, mAttribute_mListValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_goilTemplateFieldMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mUnsigned64Value" ":" ;
  mAttribute_mUnsigned_36__34_Value.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStringValue" ":" ;
  mAttribute_mStringValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mListValue" ":" ;
  mAttribute_mListValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_goilTemplateFieldMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_goilTemplateFieldMap * operand = (cMapElement_goilTemplateFieldMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mUnsigned_36__34_Value.objectCompare (operand->mAttribute_mUnsigned_36__34_Value) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStringValue.objectCompare (operand->mAttribute_mStringValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mListValue.objectCompare (operand->mAttribute_mListValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap::GALGAS_goilTemplateFieldMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap::GALGAS_goilTemplateFieldMap (const GALGAS_goilTemplateFieldMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap & GALGAS_goilTemplateFieldMap::operator = (const GALGAS_goilTemplateFieldMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::constructor_mapWithMapToOverride (const GALGAS_goilTemplateFieldMap & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateFieldMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_insertKey (GALGAS_lstring inKey,
                                                      GALGAS_goilTemplateType inArgument0,
                                                      GALGAS_uint_36__34_ inArgument1,
                                                      GALGAS_string inArgument2,
                                                      GALGAS_goilTemplateFieldMapList inArgument3,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_goilTemplateFieldMap * p = NULL ;
  macroMyNew (p, cMapElement_goilTemplateFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "a template field named '%K' is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_goilTemplateFieldMap_searchKey = "there is no template field named '%K'" ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_goilTemplateType & outArgument0,
                                                    GALGAS_uint_36__34_ & outArgument1,
                                                    GALGAS_string & outArgument2,
                                                    GALGAS_goilTemplateFieldMapList & outArgument3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_goilTemplateFieldMap_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mUnsigned_36__34_Value ;
    outArgument2 = p->mAttribute_mStringValue ;
    outArgument3 = p->mAttribute_mListValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateFieldMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) attributes ;
  GALGAS_goilTemplateType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint_36__34_ GALGAS_goilTemplateFieldMap::reader_mUnsigned_36__34_ValueForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) attributes ;
  GALGAS_uint_36__34_ result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mUnsigned_36__34_Value ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_goilTemplateFieldMap::reader_mStringValueForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mStringValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMap::reader_mListValueForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) attributes ;
  GALGAS_goilTemplateFieldMapList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
    result = p->mAttribute_mListValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMTypeForKey (GALGAS_goilTemplateType inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * p = (cMapElement_goilTemplateFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateFieldMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMUnsigned_36__34_ValueForKey (GALGAS_uint_36__34_ inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * p = (cMapElement_goilTemplateFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateFieldMap) ;
    p->mAttribute_mUnsigned_36__34_Value = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMStringValueForKey (GALGAS_string inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * p = (cMapElement_goilTemplateFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateFieldMap) ;
    p->mAttribute_mStringValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMap::modifier_setMListValueForKey (GALGAS_goilTemplateFieldMapList inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * p = (cMapElement_goilTemplateFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateFieldMap) ;
    p->mAttribute_mListValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateFieldMap * GALGAS_goilTemplateFieldMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                          const GALGAS_string & inKey
                                                                                                          COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * result = (cMapElement_goilTemplateFieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_goilTemplateFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateFieldMap * GALGAS_goilTemplateFieldMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                             const GALGAS_lstring & inKey
                                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_goilTemplateFieldMap_searchKey COMMA_THERE) ;
  cMapElement_goilTemplateFieldMap * result = (cMapElement_goilTemplateFieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_goilTemplateFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_goilTemplateFieldMap::cEnumerator_goilTemplateFieldMap (const GALGAS_goilTemplateFieldMap & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_goilTemplateFieldMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType cEnumerator_goilTemplateFieldMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_uint_36__34_ cEnumerator_goilTemplateFieldMap::current_mUnsigned_36__34_Value (LOCATION_ARGS) const {
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
  return p->mAttribute_mUnsigned_36__34_Value ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_goilTemplateFieldMap::current_mStringValue (LOCATION_ARGS) const {
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
  return p->mAttribute_mStringValue ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList cEnumerator_goilTemplateFieldMap::current_mListValue (LOCATION_ARGS) const {
  const cMapElement_goilTemplateFieldMap * p = (const cMapElement_goilTemplateFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateFieldMap) ;
  return p->mAttribute_mListValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @goilTemplateFieldMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateFieldMap ("goilTemplateFieldMap",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateFieldMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateFieldMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateFieldMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateFieldMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap GALGAS_goilTemplateFieldMap::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMap result ;
  const GALGAS_goilTemplateFieldMap * p = (const GALGAS_goilTemplateFieldMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateFieldMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateFieldMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for element of '@goilTemplateFieldMapList' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateFieldMapList : public cCollectionElement {
//--- List attributes
  public : GALGAS_goilTemplateFieldMap mAttribute_mMap ;

//--- Constructor
  public : cCollectionElement_goilTemplateFieldMapList (const GALGAS_goilTemplateFieldMap & in_mMap
                                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateFieldMapList::cCollectionElement_goilTemplateFieldMapList (const GALGAS_goilTemplateFieldMap & in_mMap
                                                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mMap (in_mMap) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateFieldMapList::isValid (void) const {
  return mAttribute_mMap.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateFieldMapList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateFieldMapList (mAttribute_mMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateFieldMapList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMap" ":" ;
  mAttribute_mMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_goilTemplateFieldMapList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_goilTemplateFieldMapList * operand = (cCollectionElement_goilTemplateFieldMapList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mMap.objectCompare (operand->mAttribute_mMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList::GALGAS_goilTemplateFieldMapList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList::GALGAS_goilTemplateFieldMapList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMapList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::constructor_listWithValue (const GALGAS_goilTemplateFieldMap & inOperand0
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMapList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_goilTemplateFieldMapList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                 const GALGAS_goilTemplateFieldMap & in_mMap
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMapList * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (in_mMap COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::addAssign_operation (const GALGAS_goilTemplateFieldMap & inOperand0
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_prependValue (GALGAS_goilTemplateFieldMap inOperand0
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateFieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_popFirst (GALGAS_goilTemplateFieldMap & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_popLast (GALGAS_goilTemplateFieldMap & outOperand0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::method_first (GALGAS_goilTemplateFieldMap & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::method_last (GALGAS_goilTemplateFieldMap & outOperand0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::operator_concat (const GALGAS_goilTemplateFieldMapList & inOperand
                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateFieldMapList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                          const GALGAS_uint & inLength,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateFieldMapList result = GALGAS_goilTemplateFieldMapList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateFieldMapList result = GALGAS_goilTemplateFieldMapList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::dotAssign_operation (const GALGAS_goilTemplateFieldMapList inOperand
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateFieldMapList::modifier_setMMapAtIndex (GALGAS_goilTemplateFieldMap inOperand,
                                                               GALGAS_uint inIndex,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    p->mAttribute_mMap = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap GALGAS_goilTemplateFieldMapList::reader_mMapAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateFieldMapList * p = (cCollectionElement_goilTemplateFieldMapList *) attributes.ptr () ;
  GALGAS_goilTemplateFieldMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateFieldMapList) ;
    result = p->mAttribute_mMap ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_goilTemplateFieldMapList::cEnumerator_goilTemplateFieldMapList (const GALGAS_goilTemplateFieldMapList & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMap cEnumerator_goilTemplateFieldMapList::current_mMap (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateFieldMapList * p = (const cCollectionElement_goilTemplateFieldMapList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateFieldMapList) ;
  return p->mAttribute_mMap ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateFieldMapList type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateFieldMapList ("goilTemplateFieldMapList",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateFieldMapList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateFieldMapList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateFieldMapList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateFieldMapList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateFieldMapList::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateFieldMapList result ;
  const GALGAS_goilTemplateFieldMapList * p = (const GALGAS_goilTemplateFieldMapList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateFieldMapList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateFieldMapList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue::GALGAS_goilTemplateValue (void) :
mAttribute_mUnsigned_36__34_Value (),
mAttribute_mStringValue (),
mAttribute_mMapListValue () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue::~ GALGAS_goilTemplateValue (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_goilTemplateValue::GALGAS_goilTemplateValue (const GALGAS_goilTemplateValue & inSource) :
//mAttribute_mUnsigned_36__34_Value (inSource.mAttribute_mUnsigned_36__34_Value),
//mAttribute_mStringValue (inSource.mAttribute_mStringValue),
//mAttribute_mMapListValue (inSource.mAttribute_mMapListValue) {
} */

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue::GALGAS_goilTemplateValue (const GALGAS_uint_36__34_ & inOperand0,
                                                    const GALGAS_string & inOperand1,
                                                    const GALGAS_goilTemplateFieldMapList & inOperand2) :
mAttribute_mUnsigned_36__34_Value (inOperand0),
mAttribute_mStringValue (inOperand1),
mAttribute_mMapListValue (inOperand2) {
}

//---------------------------------------------------------------------------*

/* GALGAS_goilTemplateValue & GALGAS_goilTemplateValue::operator = (const GALGAS_goilTemplateValue & inOperand) {
  mAttribute_mUnsigned_36__34_Value = inOperand.mAttribute_mUnsigned_36__34_Value ;
  mAttribute_mStringValue = inOperand.mAttribute_mStringValue ;
  mAttribute_mMapListValue = inOperand.mAttribute_mMapListValue ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue GALGAS_goilTemplateValue::constructor_new (const GALGAS_uint_36__34_ & inOperand0,
                                                                    const GALGAS_string & inOperand1,
                                                                    const GALGAS_goilTemplateFieldMapList & inOperand2 
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateValue result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_goilTemplateValue (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_goilTemplateValue::objectCompare (const GALGAS_goilTemplateValue & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mUnsigned_36__34_Value.objectCompare (inOperand.mAttribute_mUnsigned_36__34_Value) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringValue.objectCompare (inOperand.mAttribute_mStringValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mMapListValue.objectCompare (inOperand.mAttribute_mMapListValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_goilTemplateValue::isValid (void) const {
  return mAttribute_mUnsigned_36__34_Value.isValid () && mAttribute_mStringValue.isValid () && mAttribute_mMapListValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateValue::drop (void) {
  mAttribute_mUnsigned_36__34_Value.drop () ;
  mAttribute_mStringValue.drop () ;
  mAttribute_mMapListValue.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateValue::description (C_String & ioString,
                                            const PMSInt32 inIndentation) const {
  ioString << "<struct @goilTemplateValue:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mUnsigned_36__34_Value.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mMapListValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_uint_36__34_ GALGAS_goilTemplateValue::reader_mUnsigned_36__34_Value (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUnsigned_36__34_Value ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_goilTemplateValue::reader_mStringValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringValue ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateFieldMapList GALGAS_goilTemplateValue::reader_mMapListValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMapListValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @goilTemplateValue type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateValue ("goilTemplateValue",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateValue ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue GALGAS_goilTemplateValue::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateValue result ;
  const GALGAS_goilTemplateValue * p = (const GALGAS_goilTemplateValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateVariableMap::cMapElement_goilTemplateVariableMap (const GALGAS_lstring & inKey,
                                                                          const GALGAS_goilTemplateType & in_mType,
                                                                          const GALGAS_goilTemplateValue & in_mValue
                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------*

bool cMapElement_goilTemplateVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_goilTemplateVariableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_goilTemplateVariableMap (mAttribute_lkey, mAttribute_mType, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_goilTemplateVariableMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_goilTemplateVariableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_goilTemplateVariableMap * operand = (cMapElement_goilTemplateVariableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap::GALGAS_goilTemplateVariableMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap::GALGAS_goilTemplateVariableMap (const GALGAS_goilTemplateVariableMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap & GALGAS_goilTemplateVariableMap::operator = (const GALGAS_goilTemplateVariableMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap GALGAS_goilTemplateVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_goilTemplateVariableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap GALGAS_goilTemplateVariableMap::constructor_mapWithMapToOverride (const GALGAS_goilTemplateVariableMap & inMapToOverride
                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateVariableMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap GALGAS_goilTemplateVariableMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateVariableMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_insertKey (GALGAS_lstring inKey,
                                                         GALGAS_goilTemplateType inArgument0,
                                                         GALGAS_goilTemplateValue inArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_goilTemplateVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_goilTemplateVariableMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "a template variable named '%K' is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_goilTemplateVariableMap_searchKey = "there is no template variable named '%K'" ;

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::method_searchKey (GALGAS_lstring inKey,
                                                       GALGAS_goilTemplateType & outArgument0,
                                                       GALGAS_goilTemplateValue & outArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_goilTemplateVariableMap * p = (const cMapElement_goilTemplateVariableMap *) performSearch (inKey,
                                                                                                                 inCompiler,
                                                                                                                 kSearchErrorMessage_goilTemplateVariableMap_searchKey
                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_goilTemplateVariableMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_removeKey (GALGAS_lstring inKey,
                                                         GALGAS_goilTemplateType & outArgument0,
                                                         GALGAS_goilTemplateValue & outArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no template variable named '%K'" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_goilTemplateVariableMap * p = (cMapElement_goilTemplateVariableMap *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateVariableMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateVariableMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateVariableMap * p = (const cMapElement_goilTemplateVariableMap *) attributes ;
  GALGAS_goilTemplateType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateVariableMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue GALGAS_goilTemplateVariableMap::reader_mValueForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_goilTemplateVariableMap * p = (const cMapElement_goilTemplateVariableMap *) attributes ;
  GALGAS_goilTemplateValue result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_goilTemplateVariableMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_setMTypeForKey (GALGAS_goilTemplateType inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateVariableMap * p = (cMapElement_goilTemplateVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateVariableMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateVariableMap::modifier_setMValueForKey (GALGAS_goilTemplateValue inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateVariableMap * p = (cMapElement_goilTemplateVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_goilTemplateVariableMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateVariableMap * GALGAS_goilTemplateVariableMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                const GALGAS_string & inKey
                                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_goilTemplateVariableMap * result = (cMapElement_goilTemplateVariableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_goilTemplateVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_goilTemplateVariableMap * GALGAS_goilTemplateVariableMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                   const GALGAS_lstring & inKey
                                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_goilTemplateVariableMap_searchKey COMMA_THERE) ;
  cMapElement_goilTemplateVariableMap * result = (cMapElement_goilTemplateVariableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_goilTemplateVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_goilTemplateVariableMap::cEnumerator_goilTemplateVariableMap (const GALGAS_goilTemplateVariableMap & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_goilTemplateVariableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType cEnumerator_goilTemplateVariableMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_goilTemplateVariableMap * p = (const cMapElement_goilTemplateVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateVariableMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue cEnumerator_goilTemplateVariableMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_goilTemplateVariableMap * p = (const cMapElement_goilTemplateVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_goilTemplateVariableMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @goilTemplateVariableMap type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateVariableMap ("goilTemplateVariableMap",
                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateVariableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateVariableMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateVariableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateVariableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateVariableMap GALGAS_goilTemplateVariableMap::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateVariableMap result ;
  const GALGAS_goilTemplateVariableMap * p = (const GALGAS_goilTemplateVariableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateVariableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateVariableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@goilTemplateExpressionList' list          *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateExpressionList : public cCollectionElement {
//--- List attributes
  public : GALGAS_goilTemplateValue mAttribute_mValue ;
  public : GALGAS_goilTemplateType mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_goilTemplateExpressionList (const GALGAS_goilTemplateValue & in_mValue,
                                                          const GALGAS_goilTemplateType & in_mType
                                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateExpressionList::cCollectionElement_goilTemplateExpressionList (const GALGAS_goilTemplateValue & in_mValue,
                                                                                              const GALGAS_goilTemplateType & in_mType
                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mValue (in_mValue),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateExpressionList::isValid (void) const {
  return mAttribute_mValue.isValid () && mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateExpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateExpressionList (mAttribute_mValue, mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateExpressionList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_goilTemplateExpressionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_goilTemplateExpressionList * operand = (cCollectionElement_goilTemplateExpressionList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList::GALGAS_goilTemplateExpressionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList::GALGAS_goilTemplateExpressionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateExpressionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::constructor_listWithValue (const GALGAS_goilTemplateValue & inOperand0,
                                                                                                const GALGAS_goilTemplateType & inOperand1
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateExpressionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_goilTemplateExpressionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                   const GALGAS_goilTemplateValue & in_mValue,
                                                                   const GALGAS_goilTemplateType & in_mType
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateExpressionList * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateExpressionList (in_mValue,
                                                                   in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::addAssign_operation (const GALGAS_goilTemplateValue & inOperand0,
                                                             const GALGAS_goilTemplateType & inOperand1
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_prependValue (GALGAS_goilTemplateValue inOperand0,
                                                               GALGAS_goilTemplateType inOperand1
                                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_popFirst (GALGAS_goilTemplateValue & outOperand0,
                                                           GALGAS_goilTemplateType & outOperand1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_popLast (GALGAS_goilTemplateValue & outOperand0,
                                                          GALGAS_goilTemplateType & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::method_first (GALGAS_goilTemplateValue & outOperand0,
                                                      GALGAS_goilTemplateType & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::method_last (GALGAS_goilTemplateValue & outOperand0,
                                                     GALGAS_goilTemplateType & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::operator_concat (const GALGAS_goilTemplateExpressionList & inOperand
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                              const GALGAS_uint & inLength,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateExpressionList result = GALGAS_goilTemplateExpressionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateExpressionList result = GALGAS_goilTemplateExpressionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::dotAssign_operation (const GALGAS_goilTemplateExpressionList inOperand
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_setMValueAtIndex (GALGAS_goilTemplateValue inOperand,
                                                                   GALGAS_uint inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    p->mAttribute_mValue = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateExpressionList::modifier_setMTypeAtIndex (GALGAS_goilTemplateType inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    p->mAttribute_mType = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue GALGAS_goilTemplateExpressionList::reader_mValueAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  GALGAS_goilTemplateValue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType GALGAS_goilTemplateExpressionList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateExpressionList * p = (cCollectionElement_goilTemplateExpressionList *) attributes.ptr () ;
  GALGAS_goilTemplateType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateExpressionList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_goilTemplateExpressionList::cEnumerator_goilTemplateExpressionList (const GALGAS_goilTemplateExpressionList & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue cEnumerator_goilTemplateExpressionList::current_mValue (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateExpressionList * p = (const cCollectionElement_goilTemplateExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateExpressionList) ;
  return p->mAttribute_mValue ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateType cEnumerator_goilTemplateExpressionList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateExpressionList * p = (const cCollectionElement_goilTemplateExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateExpressionList) ;
  return p->mAttribute_mType ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                     @goilTemplateExpressionList type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateExpressionList ("goilTemplateExpressionList",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateExpressionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateExpressionList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateExpressionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateExpressionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateExpressionList GALGAS_goilTemplateExpressionList::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateExpressionList result ;
  const GALGAS_goilTemplateExpressionList * p = (const GALGAS_goilTemplateExpressionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateExpressionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateExpressionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@goilTemplateEnumationList' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_goilTemplateEnumationList : public cCollectionElement {
//--- List attributes
  public : GALGAS_goilTemplateValue mAttribute_mEnumeratedValue ;
  public : GALGAS_string mAttribute_mPrefix ;

//--- Constructor
  public : cCollectionElement_goilTemplateEnumationList (const GALGAS_goilTemplateValue & in_mEnumeratedValue,
                                                         const GALGAS_string & in_mPrefix
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_goilTemplateEnumationList::cCollectionElement_goilTemplateEnumationList (const GALGAS_goilTemplateValue & in_mEnumeratedValue,
                                                                                            const GALGAS_string & in_mPrefix
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mEnumeratedValue (in_mEnumeratedValue),
mAttribute_mPrefix (in_mPrefix) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_goilTemplateEnumationList::isValid (void) const {
  return mAttribute_mEnumeratedValue.isValid () && mAttribute_mPrefix.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_goilTemplateEnumationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_goilTemplateEnumationList (mAttribute_mEnumeratedValue, mAttribute_mPrefix COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_goilTemplateEnumationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumeratedValue" ":" ;
  mAttribute_mEnumeratedValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPrefix" ":" ;
  mAttribute_mPrefix.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_goilTemplateEnumationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_goilTemplateEnumationList * operand = (cCollectionElement_goilTemplateEnumationList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mEnumeratedValue.objectCompare (operand->mAttribute_mEnumeratedValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPrefix.objectCompare (operand->mAttribute_mPrefix) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList::GALGAS_goilTemplateEnumationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList::GALGAS_goilTemplateEnumationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_goilTemplateEnumationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::constructor_listWithValue (const GALGAS_goilTemplateValue & inOperand0,
                                                                                              const GALGAS_string & inOperand1
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateEnumationList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_goilTemplateEnumationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_goilTemplateValue & in_mEnumeratedValue,
                                                                  const GALGAS_string & in_mPrefix
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateEnumationList * p = NULL ;
  macroMyNew (p, cCollectionElement_goilTemplateEnumationList (in_mEnumeratedValue,
                                                                  in_mPrefix COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::addAssign_operation (const GALGAS_goilTemplateValue & inOperand0,
                                                            const GALGAS_string & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateEnumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_prependValue (GALGAS_goilTemplateValue inOperand0,
                                                              GALGAS_string inOperand1
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_goilTemplateEnumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_popFirst (GALGAS_goilTemplateValue & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_popLast (GALGAS_goilTemplateValue & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::method_first (GALGAS_goilTemplateValue & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::method_last (GALGAS_goilTemplateValue & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::operator_concat (const GALGAS_goilTemplateEnumationList & inOperand
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_goilTemplateEnumationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                            const GALGAS_uint & inLength,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateEnumationList result = GALGAS_goilTemplateEnumationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_goilTemplateEnumationList result = GALGAS_goilTemplateEnumationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::dotAssign_operation (const GALGAS_goilTemplateEnumationList inOperand
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_setMEnumeratedValueAtIndex (GALGAS_goilTemplateValue inOperand,
                                                                            GALGAS_uint inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    p->mAttribute_mEnumeratedValue = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_goilTemplateEnumationList::modifier_setMPrefixAtIndex (GALGAS_string inOperand,
                                                                   GALGAS_uint inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    p->mAttribute_mPrefix = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue GALGAS_goilTemplateEnumationList::reader_mEnumeratedValueAtIndex (const GALGAS_uint & inIndex,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  GALGAS_goilTemplateValue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    result = p->mAttribute_mEnumeratedValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_goilTemplateEnumationList::reader_mPrefixAtIndex (const GALGAS_uint & inIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_goilTemplateEnumationList * p = (cCollectionElement_goilTemplateEnumationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_goilTemplateEnumationList) ;
    result = p->mAttribute_mPrefix ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_goilTemplateEnumationList::cEnumerator_goilTemplateEnumationList (const GALGAS_goilTemplateEnumationList & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue cEnumerator_goilTemplateEnumationList::current_mEnumeratedValue (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateEnumationList * p = (const cCollectionElement_goilTemplateEnumationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateEnumationList) ;
  return p->mAttribute_mEnumeratedValue ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_goilTemplateEnumationList::current_mPrefix (LOCATION_ARGS) const {
  const cCollectionElement_goilTemplateEnumationList * p = (const cCollectionElement_goilTemplateEnumationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_goilTemplateEnumationList) ;
  return p->mAttribute_mPrefix ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                      @goilTemplateEnumationList type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_goilTemplateEnumationList ("goilTemplateEnumationList",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_goilTemplateEnumationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_goilTemplateEnumationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_goilTemplateEnumationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_goilTemplateEnumationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_goilTemplateEnumationList GALGAS_goilTemplateEnumationList::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_goilTemplateEnumationList result ;
  const GALGAS_goilTemplateEnumationList * p = (const GALGAS_goilTemplateEnumationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_goilTemplateEnumationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "goilTemplateEnumationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithBool'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue function_valueWithBool (const GALGAS_bool & constinArgument_inValue,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_goilTemplateValue = GALGAS_goilTemplateValue::constructor_new (constinArgument_inValue.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (101)), GALGAS_string::makeEmptyString (), GALGAS_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (100)) ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithBool [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithBool (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithBool (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithBool ("valueWithBool",
                                                               functionWithGenericHeader_valueWithBool,
                                                               & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                               1,
                                                               functionArgs_valueWithBool) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'valueWithUnsigned'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue function_valueWithUnsigned (const GALGAS_uint_36__34_ & constinArgument_inValue,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_goilTemplateValue = GALGAS_goilTemplateValue::constructor_new (constinArgument_inValue, GALGAS_string::makeEmptyString (), GALGAS_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (113)) ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithUnsigned [2] = {
  & kTypeDescriptor_GALGAS_uint_36__34_,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithUnsigned (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_uint_36__34_ operand0 = GALGAS_uint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithUnsigned (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithUnsigned ("valueWithUnsigned",
                                                                   functionWithGenericHeader_valueWithUnsigned,
                                                                   & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                                   1,
                                                                   functionArgs_valueWithUnsigned) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'valueWithString'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_goilTemplateValue function_valueWithString (const GALGAS_string & constinArgument_inValue,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_goilTemplateValue result_goilTemplateValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_goilTemplateValue = GALGAS_goilTemplateValue::constructor_new (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), constinArgument_inValue, GALGAS_goilTemplateFieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (129)) COMMA_SOURCE_FILE_AT_LINE (126)) ;
//---
  return result_goilTemplateValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithString [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithString (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithString (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithString ("valueWithString",
                                                                 functionWithGenericHeader_valueWithString,
                                                                 & kTypeDescriptor_GALGAS_goilTemplateValue,
                                                                 1,
                                                                 functionArgs_valueWithString) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


