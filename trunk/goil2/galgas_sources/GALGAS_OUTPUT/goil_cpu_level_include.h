//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'goil_cpu_level_include.h'                       *
//                    Generated by version version 2.2.0                     *
//                       june 1st, 2011, at 10h35'44"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GRAMMAR_goil_5F_cpu_5F_level_5F_include_HAS_BEEN_DEFINED
#define GRAMMAR_goil_5F_cpu_5F_level_5F_include_HAS_BEEN_DEFINED

//---------------------------------------------------------------------------*

#include "goil_syntax.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

class cGrammar_goil_5F_cpu_5F_level_5F_include : public cParser_goil_5F_syntax {
  public : virtual void nt_OIL_5F_version_ (GALGAS_lstring & outArgument0,
                                            GALGAS_lstring & outArgument1,
                                            C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_application_5F_definition_ (const GALGAS_implementation inArgument0,
                                                       GALGAS_applicationDefinition & ioArgument1,
                                                       C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_boolean_ (GALGAS_lbool & outArgument0,
                                     C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_description_ (GALGAS_lstring & outArgument0,
                                         C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_file_ (GALGAS_implementation & ioArgument0,
                                  GALGAS_applicationDefinition & ioArgument1,
                                  C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_implementation_5F_definition_ (GALGAS_implementation & ioArgument0,
                                                          C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_include_5F_cpu_5F_level_ (const GALGAS_implementation inArgument0,
                                                     GALGAS_objectsMap & ioArgument1,
                                                     C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_include_5F_file_5F_level_ (GALGAS_implementation & ioArgument0,
                                                      GALGAS_applicationDefinition & ioArgument1,
                                                      C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_object_5F_definition_5F_list_ (const GALGAS_implementation inArgument0,
                                                          GALGAS_objectsMap & ioArgument1,
                                                          C_Lexique_goil_5F_lexique * inCompiler) ;

  public : static void _performSourceFileParsing_ (C_Compiler * inCompiler,
                                                   GALGAS_lstring inFileName,
                                                   const GALGAS_implementation inArgument0,
                                                   GALGAS_objectsMap & ioArgument1
                                                   COMMA_LOCATION_ARGS) ;

  public : static void _performSourceStringParsing_ (C_Compiler * inCompiler,
                                                     GALGAS_string inSourceString,
                                                     const GALGAS_implementation inArgument0,
                                                     GALGAS_objectsMap & ioArgument1
                                                     COMMA_LOCATION_ARGS) ;

  public : virtual void nt_oil_5F_declaration_ (const GALGAS_implementationObjectMap inArgument0,
                                                GALGAS_identifierMap & ioArgument1,
                                                C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_oil_5F_declaration_5F_list_ (const GALGAS_implementationObjectMap inArgument0,
                                                        GALGAS_identifierMap & ioArgument1,
                                                        C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_sign_ (GALGAS_bool & outArgument0,
                                  C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual void nt_start_ (C_Lexique_goil_5F_lexique * inCompiler) ;

  public : virtual PMSInt32 select_goil_5F_syntax_0 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_1 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_2 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_3 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_4 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_5 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_6 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_7 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_8 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_9 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_10 (C_Lexique_goil_5F_lexique *) ;

  public : virtual PMSInt32 select_goil_5F_syntax_11 (C_Lexique_goil_5F_lexique *) ;
} ;

//---------------------------------------------------------------------------*

#endif
