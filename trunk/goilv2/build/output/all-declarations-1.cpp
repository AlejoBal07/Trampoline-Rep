#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "all-declarations-1.h"




//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_definition_i0_ (GALGAS_implementation & ioArgument_implementation,
                                                                                                       C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  GALGAS_lstring var_implementationName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_0 (inCompiler)) {
    case 2: {
      nt_implementation_5F_objects_ (ioArgument_implementation, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 58)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 60)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 60)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_definition_i0_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 56)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_0 (inCompiler)) {
    case 2: {
      nt_implementation_5F_objects_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 58)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 60)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 60)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_objects_i1_ (GALGAS_implementation & ioArgument_implementation,
                                                                                                    C_Lexique_goil_5F_lexique * inCompiler) {
  GALGAS_implementationObject var_object ;
  GALGAS_implementationObjectMap var_objectAttributes ;
  GALGAS_lstring var_objectName ;
  GALGAS_lbool var_multiple ;
  GALGAS_lbool var_oldMultiple ;
  GALGAS_bool var_objectKnown = GALGAS_bool (false) ;
  GALGAS_implementationMap var_imp = ioArgument_implementation.reader_imp (SOURCE_FILE ("implementation_parser.galgas", 93)) ;
  var_objectName = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 95)) ;
  const enumGalgasBool test_0 = callCategoryReader_hasKey ((const cPtr_implementation *) ioArgument_implementation.ptr (), var_objectName.reader_string (SOURCE_FILE ("implementation_parser.galgas", 97)), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 97)).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_objectKnown = GALGAS_bool (true) ;
    {
    var_imp.modifier_del (var_objectName, var_object, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 99)) ;
    }
    var_oldMultiple = var_object.reader_multiple (SOURCE_FILE ("implementation_parser.galgas", 100)) ;
    var_objectAttributes = var_object.reader_attributes (SOURCE_FILE ("implementation_parser.galgas", 101)) ;
  }else if (kBoolFalse == test_0) {
    var_object = GALGAS_implementationObject::constructor_new (GALGAS_lbool::constructor_new (GALGAS_bool (false), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 103))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 103)), GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 103))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 103)) ;
    var_oldMultiple = GALGAS_lbool::constructor_new (GALGAS_bool (false), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 104))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 104)) ;
    var_objectAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 105)) ;
  }
  switch (select_implementation_5F_parser_1 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 110)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 110)) ;
    var_multiple = GALGAS_lbool::constructor_new (GALGAS_bool (true), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 110))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 110)) ;
  } break ;
  case 2: {
    var_multiple = GALGAS_lbool::constructor_new (GALGAS_bool (false), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 112))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 112)) ;
  } break ;
  default:
    break ;
  }
  const enumGalgasBool test_1 = var_objectKnown.boolEnum () ;
  if (kBoolTrue == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_multiple.reader_bool (SOURCE_FILE ("implementation_parser.galgas", 116)).objectCompare (var_oldMultiple.reader_bool (SOURCE_FILE ("implementation_parser.galgas", 116)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      const enumGalgasBool test_3 = GALGAS_bool (gOption_goil_5F_options_warnMultiple.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (var_multiple.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_4, GALGAS_string ("Object multiple redefinition")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 118)) ;
        GALGAS_location location_5 (var_oldMultiple.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("was defined here")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 119)) ;
      }
      var_multiple = var_oldMultiple ;
    }
  }
  nt_implementation_5F_list_ (var_objectAttributes, inCompiler) ;
  {
  var_object.modifier_setMultiple (var_multiple COMMA_SOURCE_FILE ("implementation_parser.galgas", 127)) ;
  }
  {
  var_object.modifier_setAttributes (var_objectAttributes COMMA_SOURCE_FILE ("implementation_parser.galgas", 128)) ;
  }
  {
  var_imp.modifier_put (var_objectName, var_object, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 130)) ;
  }
  {
  ioArgument_implementation.modifier_setImp (var_imp COMMA_SOURCE_FILE ("implementation_parser.galgas", 131)) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_objects_i1_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 95)) ;
  switch (select_implementation_5F_parser_1 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 110)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 110)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  nt_implementation_5F_list_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_list_i2_ (GALGAS_implementationObjectMap & ioArgument_objectAttributes,
                                                                                                 C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 136)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_2 (inCompiler)) {
    case 2: {
      GALGAS_lstring var_attributeName ;
      GALGAS_impType var_type ;
      nt_implementation_5F_type_ (var_attributeName, var_type, inCompiler) ;
      const enumGalgasBool test_1 = ioArgument_objectAttributes.reader_hasKey (var_attributeName.reader_string (SOURCE_FILE ("implementation_parser.galgas", 142)) COMMA_SOURCE_FILE ("implementation_parser.galgas", 142)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_impType var_previousType ;
        ioArgument_objectAttributes.method_get (var_attributeName, var_previousType, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 144)) ;
        const enumGalgasBool test_2 = function_checkNewTypeWithinPreviousType (var_attributeName, var_previousType, var_type, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 148)).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          GALGAS_impType joker_4535_0 ; // Joker input parameter
          ioArgument_objectAttributes.modifier_del (var_attributeName, joker_4535_0, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 151)) ;
          }
          {
          ioArgument_objectAttributes.modifier_put (var_attributeName, var_type, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 152)) ;
          }
        }
      }else if (kBoolFalse == test_1) {
        {
        ioArgument_objectAttributes.modifier_put (var_attributeName, var_type, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 155)) ;
        }
      }
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 157)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 159)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_list_i2_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 136)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_2 (inCompiler)) {
    case 2: {
      nt_implementation_5F_type_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 157)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 159)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_type_i3_ (GALGAS_lstring & outArgument_attributeName,
                                                                                                 GALGAS_impType & outArgument_type,
                                                                                                 C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_attributeName.drop () ; // Release 'out' argument
  outArgument_type.drop () ; // Release 'out' argument
  switch (select_implementation_5F_parser_3 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_33__32_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 166)) ;
    nt_number_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_parser.galgas", 166)), inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_33__32_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 168)) ;
    nt_number_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE ("implementation_parser.galgas", 168)), inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_36__34_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 170)) ;
    nt_number_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_parser.galgas", 170)), inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_36__34_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 172)) ;
    nt_number_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE ("implementation_parser.galgas", 172)), inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLOAT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 174)) ;
    nt_number_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_floatNumber (SOURCE_FILE ("implementation_parser.galgas", 174)), inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ENUM) COMMA_SOURCE_FILE ("implementation_parser.galgas", 176)) ;
    nt_enum_5F_options_ (outArgument_attributeName, outArgument_type, inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BOOLEAN) COMMA_SOURCE_FILE ("implementation_parser.galgas", 178)) ;
    nt_boolean_5F_options_ (outArgument_attributeName, outArgument_type, inCompiler) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRING) COMMA_SOURCE_FILE ("implementation_parser.galgas", 180)) ;
    nt_string_5F_options_ (outArgument_attributeName, outArgument_type, inCompiler) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IDENTIFIER) COMMA_SOURCE_FILE ("implementation_parser.galgas", 182)) ;
    nt_type_5F_options_ (outArgument_attributeName, outArgument_type, GALGAS_dataType::constructor_identifier (SOURCE_FILE ("implementation_parser.galgas", 182)), inCompiler) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRUCT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 184)) ;
    nt_struct_5F_options_ (outArgument_attributeName, outArgument_type, inCompiler) ;
  } break ;
  case 11: {
    GALGAS_lstring var_typeName ;
    var_typeName = inCompiler->synthetizedAttribute_att_5F_token () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 186)) ;
    nt_objref_5F_option_ (outArgument_attributeName, outArgument_type, var_typeName, inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_implementation_5F_type_i3_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  switch (select_implementation_5F_parser_3 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_33__32_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 166)) ;
    nt_number_5F_options_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_33__32_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 168)) ;
    nt_number_5F_options_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_36__34_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 170)) ;
    nt_number_5F_options_parse (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_36__34_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 172)) ;
    nt_number_5F_options_parse (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLOAT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 174)) ;
    nt_number_5F_options_parse (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ENUM) COMMA_SOURCE_FILE ("implementation_parser.galgas", 176)) ;
    nt_enum_5F_options_parse (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BOOLEAN) COMMA_SOURCE_FILE ("implementation_parser.galgas", 178)) ;
    nt_boolean_5F_options_parse (inCompiler) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRING) COMMA_SOURCE_FILE ("implementation_parser.galgas", 180)) ;
    nt_string_5F_options_parse (inCompiler) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IDENTIFIER) COMMA_SOURCE_FILE ("implementation_parser.galgas", 182)) ;
    nt_type_5F_options_parse (inCompiler) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRUCT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 184)) ;
    nt_struct_5F_options_parse (inCompiler) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 186)) ;
    nt_objref_5F_option_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_struct_5F_options_i4_ (GALGAS_lstring & outArgument_name,
                                                                                            GALGAS_impType & outArgument_options,
                                                                                            C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_implementationObjectMap var_structAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 193)) ;
  switch (select_implementation_5F_parser_4 (inCompiler)) {
  case 1: {
    nt_implementation_5F_list_ (var_structAttributes, inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_lstring var_description ;
  nt_description_ (var_description, inCompiler) ;
  outArgument_options = GALGAS_impStructType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 202)), GALGAS_dataType::constructor_structType (SOURCE_FILE ("implementation_parser.galgas", 202)), outArgument_name, var_multiple, var_description, var_structAttributes  COMMA_SOURCE_FILE ("implementation_parser.galgas", 202)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_struct_5F_options_i4_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  switch (select_implementation_5F_parser_4 (inCompiler)) {
  case 1: {
    nt_implementation_5F_list_parse (inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  nt_description_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_objref_5F_option_i5_ (GALGAS_lstring & outArgument_name,
                                                                                           GALGAS_impType & outArgument_options,
                                                                                           GALGAS_lstring inArgument_ref,
                                                                                           C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inArgument_ref.reader_string (SOURCE_FILE ("implementation_parser.galgas", 209)).reader_rightSubString (GALGAS_uint ((uint32_t) 5U) COMMA_SOURCE_FILE ("implementation_parser.galgas", 209)).objectCompare (GALGAS_string ("_TYPE"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 210)), GALGAS_string ("an object reference must end with _TYPE")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 210)) ;
  }else if (kBoolFalse == test_0) {
    inArgument_ref = GALGAS_lstring::constructor_new (inArgument_ref.mAttribute_string.reader_leftSubString (inArgument_ref.mAttribute_string.reader_length (SOURCE_FILE ("implementation_parser.galgas", 212)).substract_operation (GALGAS_uint ((uint32_t) 5U), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 212)) COMMA_SOURCE_FILE ("implementation_parser.galgas", 212)), inArgument_ref.reader_location (SOURCE_FILE ("implementation_parser.galgas", 212))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 212)) ;
  }
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_lstring var_description ;
  nt_description_ (var_description, inCompiler) ;
  outArgument_options = GALGAS_refType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 219)), GALGAS_dataType::constructor_objectType (SOURCE_FILE ("implementation_parser.galgas", 219)), outArgument_name, var_multiple, var_description, inArgument_ref  COMMA_SOURCE_FILE ("implementation_parser.galgas", 219)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_objref_5F_option_i5_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  nt_description_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_string_5F_options_i6_ (GALGAS_lstring & outArgument_name,
                                                                                            GALGAS_impType & outArgument_options,
                                                                                            C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_bool var_withAuto ;
  nt_with_5F_auto_ (var_withAuto, inCompiler) ;
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_object_5F_t var_defaultValue ;
  GALGAS_lstring var_oil_5F_desc ;
  switch (select_implementation_5F_parser_5 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 234)) ;
    switch (select_implementation_5F_parser_6 (inCompiler)) {
    case 1: {
      GALGAS_lstring var_stringValue = inCompiler->synthetizedAttribute_a_5F_string () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE ("implementation_parser.galgas", 236)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_stringAttribute::constructor_new (var_oil_5F_desc, var_stringValue.reader_location (SOURCE_FILE ("implementation_parser.galgas", 238)), var_stringValue.reader_string (SOURCE_FILE ("implementation_parser.galgas", 238))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 238)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 240)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_auto::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 242))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 242)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 244)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 246))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 246)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 250))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 250)) ;
  } break ;
  default:
    break ;
  }
  outArgument_options = GALGAS_impAutoDefaultType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 252)), GALGAS_dataType::constructor_string (SOURCE_FILE ("implementation_parser.galgas", 252)), outArgument_name, var_multiple, var_oil_5F_desc, var_withAuto, var_defaultValue  COMMA_SOURCE_FILE ("implementation_parser.galgas", 252)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_string_5F_options_i6_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_with_5F_auto_parse (inCompiler) ;
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  switch (select_implementation_5F_parser_5 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 234)) ;
    switch (select_implementation_5F_parser_6 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_SOURCE_FILE ("implementation_parser.galgas", 236)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 240)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 244)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_boolean_5F_options_i7_ (GALGAS_lstring & outArgument_name,
                                                                                             GALGAS_impType & outArgument_options,
                                                                                             C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_bool var_withAuto ;
  nt_with_5F_auto_ (var_withAuto, inCompiler) ;
  GALGAS_implementationObjectMap var_trueSubAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 260)) ;
  GALGAS_implementationObjectMap var_falseSubAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 261)) ;
  switch (select_implementation_5F_parser_7 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 263)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE ("implementation_parser.galgas", 264)) ;
    switch (select_implementation_5F_parser_8 (inCompiler)) {
    case 1: {
      nt_implementation_5F_list_ (var_trueSubAttributes, inCompiler) ;
    } break ;
    case 2: {
      var_trueSubAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 268)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 270)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE ("implementation_parser.galgas", 271)) ;
    switch (select_implementation_5F_parser_9 (inCompiler)) {
    case 1: {
      nt_implementation_5F_list_ (var_falseSubAttributes, inCompiler) ;
    } break ;
    case 2: {
      var_falseSubAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 275)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 277)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_object_5F_t var_defaultValue ;
  GALGAS_lstring var_oil_5F_desc ;
  switch (select_implementation_5F_parser_10 (inCompiler)) {
  case 1: {
    GALGAS_lbool var_boolValue ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 286)) ;
    nt_boolean_ (var_boolValue, inCompiler) ;
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_boolAttribute::constructor_new (var_oil_5F_desc, var_boolValue.reader_location (SOURCE_FILE ("implementation_parser.galgas", 288)), var_boolValue.reader_bool (SOURCE_FILE ("implementation_parser.galgas", 288)), GALGAS_objectAttributes::constructor_new (GALGAS_identifierMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 288))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 288))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 288)) ;
  } break ;
  case 2: {
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 291))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 291)) ;
  } break ;
  default:
    break ;
  }
  outArgument_options = GALGAS_impBoolType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 293)), GALGAS_dataType::constructor_boolean (SOURCE_FILE ("implementation_parser.galgas", 293)), outArgument_name, var_multiple, var_oil_5F_desc, var_withAuto, var_defaultValue, var_trueSubAttributes, var_falseSubAttributes  COMMA_SOURCE_FILE ("implementation_parser.galgas", 293)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_boolean_5F_options_i7_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_with_5F_auto_parse (inCompiler) ;
  switch (select_implementation_5F_parser_7 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 263)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_SOURCE_FILE ("implementation_parser.galgas", 264)) ;
    switch (select_implementation_5F_parser_8 (inCompiler)) {
    case 1: {
      nt_implementation_5F_list_parse (inCompiler) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 270)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_SOURCE_FILE ("implementation_parser.galgas", 271)) ;
    switch (select_implementation_5F_parser_9 (inCompiler)) {
    case 1: {
      nt_implementation_5F_list_parse (inCompiler) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 277)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  switch (select_implementation_5F_parser_10 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 286)) ;
    nt_boolean_parse (inCompiler) ;
    nt_description_parse (inCompiler) ;
  } break ;
  case 2: {
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_enum_5F_item_i8_ (GALGAS_enumValues & ioArgument_items,
                                                                                       C_Lexique_goil_5F_lexique * inCompiler) {
  GALGAS_lstring var_enumItem ;
  GALGAS_implementationObjectMap var_subAttributes = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 299)) ;
  nt_identifier_5F_or_5F_enum_5F_value_ (var_enumItem, inCompiler) ;
  switch (select_implementation_5F_parser_11 (inCompiler)) {
  case 1: {
    nt_implementation_5F_list_ (var_subAttributes, inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  {
  ioArgument_items.modifier_put (var_enumItem, var_subAttributes, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 304)) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_enum_5F_item_i8_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_identifier_5F_or_5F_enum_5F_value_parse (inCompiler) ;
  switch (select_implementation_5F_parser_11 (inCompiler)) {
  case 1: {
    nt_implementation_5F_list_parse (inCompiler) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_enum_5F_options_i9_ (GALGAS_lstring & outArgument_name,
                                                                                          GALGAS_impType & outArgument_options,
                                                                                          C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_bool var_withAuto ;
  nt_with_5F_auto_ (var_withAuto, inCompiler) ;
  GALGAS_enumValues var_items = GALGAS_enumValues::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 312)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 313)) ;
  nt_enum_5F_item_ (var_items, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 317)) ;
      nt_enum_5F_item_ (var_items, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 319)) ;
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_lstring var_oil_5F_desc ;
  GALGAS_object_5F_t var_defaultValue ;
  switch (select_implementation_5F_parser_13 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 326)) ;
    switch (select_implementation_5F_parser_14 (inCompiler)) {
    case 1: {
      GALGAS_lstring var_stringValue ;
      var_stringValue = inCompiler->synthetizedAttribute_att_5F_token () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 329)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_enumAttribute::constructor_new (var_oil_5F_desc, var_stringValue.reader_location (SOURCE_FILE ("implementation_parser.galgas", 331)), var_stringValue.reader_string (SOURCE_FILE ("implementation_parser.galgas", 331)), GALGAS_objectAttributes::constructor_new (GALGAS_identifierMap::constructor_emptyMap (SOURCE_FILE ("implementation_parser.galgas", 331))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 331))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 331)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 333)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_auto::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 335))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 335)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 337)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 339))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 339)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 343))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 343)) ;
  } break ;
  default:
    break ;
  }
  outArgument_options = GALGAS_impEnumType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 345)), GALGAS_dataType::constructor_enumeration (SOURCE_FILE ("implementation_parser.galgas", 345)), outArgument_name, var_multiple, var_oil_5F_desc, var_withAuto, var_defaultValue, var_items  COMMA_SOURCE_FILE ("implementation_parser.galgas", 345)) ;
  {
  routine_verifyEnum (outArgument_options, inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 346)) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_enum_5F_options_i9_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_with_5F_auto_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 313)) ;
  nt_enum_5F_item_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 317)) ;
      nt_enum_5F_item_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 319)) ;
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  switch (select_implementation_5F_parser_13 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 326)) ;
    switch (select_implementation_5F_parser_14 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 329)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 333)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 337)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_number_5F_options_i10_ (GALGAS_lstring & outArgument_name,
                                                                                             GALGAS_impType & outArgument_options,
                                                                                             const GALGAS_dataType constinArgument_type,
                                                                                             C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_bool var_withAuto ;
  nt_with_5F_auto_ (var_withAuto, inCompiler) ;
  GALGAS_attributeRange var_range ;
  nt_range_ (var_range, constinArgument_type, inCompiler) ;
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_lstring var_oil_5F_desc ;
  GALGAS_object_5F_t var_defaultValue ;
  switch (select_implementation_5F_parser_15 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 363)) ;
    switch (select_implementation_5F_parser_16 (inCompiler)) {
    case 1: {
      nt_int_5F_or_5F_float_ (var_defaultValue, constinArgument_type, inCompiler) ;
      var_oil_5F_desc = var_defaultValue.reader_oil_5F_desc (SOURCE_FILE ("implementation_parser.galgas", 366)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 368)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 370))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 370)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 372)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_auto::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 374))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 374)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 378))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 378)) ;
  } break ;
  default:
    break ;
  }
  outArgument_options = GALGAS_impRangedType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 380)), constinArgument_type, outArgument_name, var_multiple, var_oil_5F_desc, var_withAuto, var_defaultValue, var_range  COMMA_SOURCE_FILE ("implementation_parser.galgas", 380)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_number_5F_options_i10_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_with_5F_auto_parse (inCompiler) ;
  nt_range_parse (inCompiler) ;
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  switch (select_implementation_5F_parser_15 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 363)) ;
    switch (select_implementation_5F_parser_16 (inCompiler)) {
    case 1: {
      nt_int_5F_or_5F_float_parse (inCompiler) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 368)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 372)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_type_5F_options_i11_ (GALGAS_lstring & outArgument_name,
                                                                                           GALGAS_impType & outArgument_options,
                                                                                           const GALGAS_dataType constinArgument_type,
                                                                                           C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_options.drop () ; // Release 'out' argument
  GALGAS_bool var_withAuto ;
  nt_with_5F_auto_ (var_withAuto, inCompiler) ;
  nt_identifier_5F_or_5F_attribute_ (outArgument_name, inCompiler) ;
  GALGAS_bool var_multiple ;
  nt_multiple_ (var_multiple, inCompiler) ;
  GALGAS_object_5F_t var_defaultValue ;
  GALGAS_lstring var_oil_5F_desc ;
  switch (select_implementation_5F_parser_17 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 395)) ;
    switch (select_implementation_5F_parser_18 (inCompiler)) {
    case 1: {
      GALGAS_lstring var_ident ;
      nt_identifier_5F_or_5F_attribute_ (var_ident, inCompiler) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_stringAttribute::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 400)), var_ident.reader_string (SOURCE_FILE ("implementation_parser.galgas", 400))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 400)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 402)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 404))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 404)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 406)) ;
      nt_description_ (var_oil_5F_desc, inCompiler) ;
      var_defaultValue = GALGAS_auto::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 408))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 408)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    var_defaultValue = GALGAS_void::constructor_new (var_oil_5F_desc, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 412))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 412)) ;
  } break ;
  default:
    break ;
  }
  outArgument_options = GALGAS_impAutoDefaultType::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 414)), constinArgument_type, outArgument_name, var_multiple, var_oil_5F_desc, var_withAuto, var_defaultValue  COMMA_SOURCE_FILE ("implementation_parser.galgas", 414)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_type_5F_options_i11_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_with_5F_auto_parse (inCompiler) ;
  nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
  nt_multiple_parse (inCompiler) ;
  switch (select_implementation_5F_parser_17 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 395)) ;
    switch (select_implementation_5F_parser_18 (inCompiler)) {
    case 1: {
      nt_identifier_5F_or_5F_attribute_parse (inCompiler) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) COMMA_SOURCE_FILE ("implementation_parser.galgas", 402)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 406)) ;
      nt_description_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_with_5F_auto_i12_ (GALGAS_bool & outArgument_withAuto,
                                                                                        C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_withAuto.drop () ; // Release 'out' argument
  switch (select_implementation_5F_parser_19 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 420)) ;
    outArgument_withAuto = GALGAS_bool (true) ;
  } break ;
  case 2: {
    outArgument_withAuto = GALGAS_bool (false) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_with_5F_auto_i12_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  switch (select_implementation_5F_parser_19 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO) COMMA_SOURCE_FILE ("implementation_parser.galgas", 420)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_int_5F_or_5F_float_i13_ (GALGAS_object_5F_t & outArgument_num,
                                                                                              const GALGAS_dataType constinArgument_type,
                                                                                              C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_num.drop () ; // Release 'out' argument
  GALGAS_bool var_signed ;
  nt_sign_ (var_signed, inCompiler) ;
  switch (select_implementation_5F_parser_20 (inCompiler)) {
  case 1: {
    GALGAS_luint_36__34_ var_number ;
    var_number = inCompiler->synthetizedAttribute_integerNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 433)) ;
    GALGAS_lstring var_oil_5F_desc ;
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    outArgument_num = function_checkAndGetIntegerNumber (var_oil_5F_desc, constinArgument_type, var_number, var_signed, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 435)) ;
  } break ;
  case 2: {
    GALGAS_ldouble var_number ;
    var_number = inCompiler->synthetizedAttribute_floatNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 438)) ;
    GALGAS_lstring var_oil_5F_desc ;
    nt_description_ (var_oil_5F_desc, inCompiler) ;
    outArgument_num = function_checkAndGetFloatNumber (var_oil_5F_desc, constinArgument_type, var_number, var_signed, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 440)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_int_5F_or_5F_float_i13_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_sign_parse (inCompiler) ;
  switch (select_implementation_5F_parser_20 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 433)) ;
    nt_description_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 438)) ;
    nt_description_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_set_5F_followup_i14_ (GALGAS_numberList & ioArgument_numbers,
                                                                                           const GALGAS_dataType constinArgument_type,
                                                                                           C_Lexique_goil_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_21 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 449)) ;
      GALGAS_object_5F_t var_num ;
      nt_int_5F_or_5F_float_ (var_num, constinArgument_type, inCompiler) ;
      ioArgument_numbers.addAssign_operation (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 452)), var_num  COMMA_SOURCE_FILE ("implementation_parser.galgas", 452)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_set_5F_followup_i14_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_implementation_5F_parser_21 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 449)) ;
      nt_int_5F_or_5F_float_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_range_5F_content_i15_ (GALGAS_attributeRange & outArgument_range,
                                                                                            const GALGAS_dataType constinArgument_type,
                                                                                            C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_range.drop () ; // Release 'out' argument
  GALGAS_object_5F_t var_start = GALGAS_void::constructor_new (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 459)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 459))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 459)) ;
  GALGAS_object_5F_t var_stop = GALGAS_void::constructor_new (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 460)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 460))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 460)) ;
  GALGAS_bool var_signed ;
  nt_sign_ (var_signed, inCompiler) ;
  switch (select_implementation_5F_parser_22 (inCompiler)) {
  case 1: {
    GALGAS_luint_36__34_ var_number ;
    var_number = inCompiler->synthetizedAttribute_integerNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 465)) ;
    var_start = function_checkAndGetIntegerNumber (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 466)), constinArgument_type, var_number, var_signed, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 466)) ;
    nt_int_5F_or_5F_float_ (var_stop, constinArgument_type, inCompiler) ;
    outArgument_range = function_buildRange (constinArgument_type, var_start, var_stop, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 468)) ;
  } break ;
  case 2: {
    GALGAS_luint_36__34_ var_number ;
    var_number = inCompiler->synthetizedAttribute_integerNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 471)) ;
    var_start = function_checkAndGetIntegerNumber (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 472)), constinArgument_type, var_number, var_signed, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 472)) ;
    switch (select_implementation_5F_parser_23 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 474)) ;
      nt_int_5F_or_5F_float_ (var_stop, constinArgument_type, inCompiler) ;
      outArgument_range = function_buildRange (constinArgument_type, var_start, var_stop, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 475)) ;
    } break ;
    case 2: {
      GALGAS_numberList var_numbers = GALGAS_numberList::constructor_listWithValue (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 477)), var_start  COMMA_SOURCE_FILE ("implementation_parser.galgas", 477)) ;
      nt_set_5F_followup_ (var_numbers, constinArgument_type, inCompiler) ;
      outArgument_range = function_attributeRangeWithNumberList (var_numbers, constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 479)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 3: {
    GALGAS_ldouble var_number ;
    var_number = inCompiler->synthetizedAttribute_floatNumber () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 483)) ;
    var_start = function_checkAndGetFloatNumber (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 484)), constinArgument_type, var_number, var_signed, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 484)) ;
    switch (select_implementation_5F_parser_24 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 486)) ;
      nt_int_5F_or_5F_float_ (var_stop, constinArgument_type, inCompiler) ;
      outArgument_range = function_buildRange (constinArgument_type, var_start, var_stop, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 487)) ;
    } break ;
    case 2: {
      GALGAS_numberList var_numbers = GALGAS_numberList::constructor_listWithValue (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 489)), var_start  COMMA_SOURCE_FILE ("implementation_parser.galgas", 489)) ;
      nt_set_5F_followup_ (var_numbers, constinArgument_type, inCompiler) ;
      outArgument_range = function_attributeRangeWithNumberList (var_numbers, constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 491)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_range_5F_content_i15_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  nt_sign_parse (inCompiler) ;
  switch (select_implementation_5F_parser_22 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 465)) ;
    nt_int_5F_or_5F_float_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 471)) ;
    switch (select_implementation_5F_parser_23 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 474)) ;
      nt_int_5F_or_5F_float_parse (inCompiler) ;
    } break ;
    case 2: {
      nt_set_5F_followup_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_SOURCE_FILE ("implementation_parser.galgas", 483)) ;
    switch (select_implementation_5F_parser_24 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 486)) ;
      nt_int_5F_or_5F_float_parse (inCompiler) ;
    } break ;
    case 2: {
      nt_set_5F_followup_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_range_i16_ (GALGAS_attributeRange & outArgument_range,
                                                                                 const GALGAS_dataType constinArgument_rangeType,
                                                                                 C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_range.drop () ; // Release 'out' argument
  switch (select_implementation_5F_parser_25 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 500)) ;
    nt_range_5F_content_ (outArgument_range, constinArgument_rangeType, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 500)) ;
  } break ;
  case 2: {
    outArgument_range = GALGAS_noRange::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 502))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 502)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_range_i16_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  switch (select_implementation_5F_parser_25 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 500)) ;
    nt_range_5F_content_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 500)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_multiple_i17_ (GALGAS_bool & outArgument_multi,
                                                                                    C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_multi.drop () ; // Release 'out' argument
  switch (select_implementation_5F_parser_26 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 509)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 509)) ;
    outArgument_multi = GALGAS_bool (true) ;
  } break ;
  case 2: {
    outArgument_multi = GALGAS_bool (false) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_multiple_i17_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  switch (select_implementation_5F_parser_26 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 509)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("implementation_parser.galgas", 509)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_ (GALGAS_lstring & outArgument_name,
                                                                                                         C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_name = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 518)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 518)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_ (GALGAS_lstring & outArgument_name,
                                                                                                             C_Lexique_goil_5F_lexique * inCompiler) {
  outArgument_name.drop () ; // Release 'out' argument
  outArgument_name = inCompiler->synthetizedAttribute_att_5F_token () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 526)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_implementation_5F_parser::rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_parse (C_Lexique_goil_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_SOURCE_FILE ("implementation_parser.galgas", 526)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   L L ( 1 )    P R O D U C T I O N    R U L E S                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const int16_t gProductions_goil_file_level_include [] = {
// At index 0 : <implementation_definition>, in file 'implementation_parser.ggs', line 54
  TERMINAL (C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION) // $IMPLEMENTATION$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (46) // <select_implementation_5F_parser_0>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 7 : <start>, in file 'goil_syntax.ggs', line 28
, NONTERMINAL (5) // <OIL_version>
, NONTERMINAL (2) // <file>
, END_PRODUCTION
// At index 10 : <file>, in file 'goil_syntax.ggs', line 94
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 12 : <sign>, in file 'goil_syntax.ggs', line 102
, NONTERMINAL (33) // <select_goil_5F_syntax_1>
, END_PRODUCTION
// At index 14 : <description>, in file 'goil_syntax.ggs', line 115
, NONTERMINAL (34) // <select_goil_5F_syntax_2>
, END_PRODUCTION
// At index 16 : <OIL_version>, in file 'goil_syntax.ggs', line 139
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) // $OIL_VERSION$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 22 : <application_definition>, in file 'goil_syntax.ggs', line 146
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) // $CPU$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (7) // <object_definition_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 30 : <object_definition_list>, in file 'goil_syntax.ggs', line 155
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 32 : <boolean>, in file 'goil_syntax.ggs', line 198
, NONTERMINAL (37) // <select_goil_5F_syntax_5>
, END_PRODUCTION
// At index 34 : <oil_declaration_list>, in file 'goil_syntax.ggs', line 208
, NONTERMINAL (38) // <select_goil_5F_syntax_6>
, END_PRODUCTION
// At index 36 : <oil_declaration>, in file 'goil_syntax.ggs', line 217
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (39) // <select_goil_5F_syntax_7>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 40 : <include_file_level>, in file 'goil_syntax.ggs', line 388
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) // $include$
, NONTERMINAL (44) // <select_goil_5F_syntax_12>
, END_PRODUCTION
// At index 43 : <include_cpu_level>, in file 'goil_syntax.ggs', line 400
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) // $include$
, NONTERMINAL (45) // <select_goil_5F_syntax_13>
, END_PRODUCTION
// At index 46 : <implementation_objects>, in file 'implementation_parser.ggs', line 85
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (47) // <select_implementation_5F_parser_1>
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 50 : <implementation_type>, in file 'implementation_parser.ggs', line 162
, NONTERMINAL (49) // <select_implementation_5F_parser_3>
, END_PRODUCTION
// At index 52 : <with_auto>, in file 'implementation_parser.ggs', line 417
, NONTERMINAL (65) // <select_implementation_5F_parser_19>
, END_PRODUCTION
// At index 54 : <int_or_float>, in file 'implementation_parser.ggs', line 426
, NONTERMINAL (3) // <sign>
, NONTERMINAL (66) // <select_implementation_5F_parser_20>
, END_PRODUCTION
// At index 57 : <set_followup>, in file 'implementation_parser.ggs', line 444
, NONTERMINAL (67) // <select_implementation_5F_parser_21>
, END_PRODUCTION
// At index 59 : <range>, in file 'implementation_parser.ggs', line 496
, NONTERMINAL (71) // <select_implementation_5F_parser_25>
, END_PRODUCTION
// At index 61 : <range_content>, in file 'implementation_parser.ggs', line 456
, NONTERMINAL (3) // <sign>
, NONTERMINAL (68) // <select_implementation_5F_parser_22>
, END_PRODUCTION
// At index 64 : <number_options>, in file 'implementation_parser.ggs', line 349
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (18) // <range>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (61) // <select_implementation_5F_parser_15>
, END_PRODUCTION
// At index 70 : <type_options>, in file 'implementation_parser.ggs', line 383
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (63) // <select_implementation_5F_parser_17>
, END_PRODUCTION
// At index 75 : <boolean_options>, in file 'implementation_parser.ggs', line 255
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (53) // <select_implementation_5F_parser_7>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (56) // <select_implementation_5F_parser_10>
, END_PRODUCTION
// At index 81 : <string_options>, in file 'implementation_parser.ggs', line 223
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (51) // <select_implementation_5F_parser_5>
, END_PRODUCTION
// At index 86 : <enum_item>, in file 'implementation_parser.ggs', line 296
, NONTERMINAL (28) // <identifier_or_enum_value>
, NONTERMINAL (57) // <select_implementation_5F_parser_11>
, END_PRODUCTION
// At index 89 : <enum_options>, in file 'implementation_parser.ggs', line 307
, NONTERMINAL (15) // <with_auto>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, NONTERMINAL (24) // <enum_item>
, NONTERMINAL (58) // <select_implementation_5F_parser_12>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (59) // <select_implementation_5F_parser_13>
, END_PRODUCTION
// At index 98 : <multiple>, in file 'implementation_parser.ggs', line 506
, NONTERMINAL (72) // <select_implementation_5F_parser_26>
, END_PRODUCTION
// At index 100 : <identifier_or_attribute>, in file 'implementation_parser.ggs', line 516
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, END_PRODUCTION
// At index 102 : <identifier_or_enum_value>, in file 'implementation_parser.ggs', line 521
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, END_PRODUCTION
// At index 104 : <implementation_list>, in file 'implementation_parser.ggs', line 134
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (48) // <select_implementation_5F_parser_2>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 108 : <struct_options>, in file 'implementation_parser.ggs', line 190
, NONTERMINAL (50) // <select_implementation_5F_parser_4>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 113 : <objref_option>, in file 'implementation_parser.ggs', line 205
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 117 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, END_PRODUCTION
// At index 118 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (11) // <include_file_level>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 121 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (0) // <implementation_definition>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 124 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (6) // <application_definition>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 127 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2D_) // $-$
, END_PRODUCTION
// At index 129 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2B_) // $+$
, END_PRODUCTION
// At index 131 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, END_PRODUCTION
// At index 132 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
, END_PRODUCTION
// At index 133 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) // $:$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (35) // <select_goil_5F_syntax_3>
, END_PRODUCTION
// At index 137 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
, END_PRODUCTION
// At index 138 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (35) // <select_goil_5F_syntax_3>
, END_PRODUCTION
// At index 141 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, END_PRODUCTION
// At index 142 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 151 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, NONTERMINAL (12) // <include_cpu_level>
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 154 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) // $TRUE$
, END_PRODUCTION
// At index 156 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) // $FALSE$
, END_PRODUCTION
// At index 158 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
, END_PRODUCTION
// At index 159 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
, NONTERMINAL (10) // <oil_declaration>
, NONTERMINAL (38) // <select_goil_5F_syntax_6>
, END_PRODUCTION
// At index 162 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (40) // <select_goil_5F_syntax_8>
, END_PRODUCTION
// At index 165 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 171 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (41) // <select_goil_5F_syntax_9>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 175 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, NONTERMINAL (3) // <sign>
, NONTERMINAL (42) // <select_goil_5F_syntax_10>
, END_PRODUCTION
// At index 178 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, NONTERMINAL (8) // <boolean>
, NONTERMINAL (43) // <select_goil_5F_syntax_11>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 182 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 185 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 188 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 192 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
, END_PRODUCTION
// At index 193 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 196 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 199 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 203 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
, END_PRODUCTION
// At index 204 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) // $g_string$
, END_PRODUCTION
// At index 206 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, END_PRODUCTION
// At index 208 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) // $g_string$
, END_PRODUCTION
// At index 210 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, END_PRODUCTION
// At index 212 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
, END_PRODUCTION
// At index 213 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
, NONTERMINAL (13) // <implementation_objects>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (46) // <select_implementation_5F_parser_0>
, END_PRODUCTION
// At index 217 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 220 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
, END_PRODUCTION
// At index 221 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
, END_PRODUCTION
// At index 222 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
, NONTERMINAL (14) // <implementation_type>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (48) // <select_implementation_5F_parser_2>
, END_PRODUCTION
// At index 226 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_33__32_) // $UINT32$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 229 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_33__32_) // $INT32$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 232 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_36__34_) // $UINT64$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 235 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_36__34_) // $INT64$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 238 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLOAT) // $FLOAT$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 241 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_ENUM) // $ENUM$
, NONTERMINAL (25) // <enum_options>
, END_PRODUCTION
// At index 244 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_BOOLEAN) // $BOOLEAN$
, NONTERMINAL (22) // <boolean_options>
, END_PRODUCTION
// At index 247 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRING) // $STRING$
, NONTERMINAL (23) // <string_options>
, END_PRODUCTION
// At index 250 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_IDENTIFIER) // $IDENTIFIER$
, NONTERMINAL (21) // <type_options>
, END_PRODUCTION
// At index 253 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRUCT) // $STRUCT$
, NONTERMINAL (30) // <struct_options>
, END_PRODUCTION
// At index 256 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (31) // <objref_option>
, END_PRODUCTION
// At index 259 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 261 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
, END_PRODUCTION
// At index 262 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (52) // <select_implementation_5F_parser_6>
, END_PRODUCTION
// At index 265 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 267 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 270 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 273 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 276 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) // $TRUE$
, NONTERMINAL (54) // <select_implementation_5F_parser_8>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) // $FALSE$
, NONTERMINAL (55) // <select_implementation_5F_parser_9>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 284 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
, END_PRODUCTION
// At index 285 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 287 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
, END_PRODUCTION
// At index 288 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 290 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
, END_PRODUCTION
// At index 291 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (8) // <boolean>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 295 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 297 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 299 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
, END_PRODUCTION
// At index 300 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
, END_PRODUCTION
// At index 301 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, NONTERMINAL (24) // <enum_item>
, NONTERMINAL (58) // <select_implementation_5F_parser_12>
, END_PRODUCTION
// At index 305 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (60) // <select_implementation_5F_parser_14>
, END_PRODUCTION
// At index 308 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 310 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 313 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 316 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 319 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (62) // <select_implementation_5F_parser_16>
, END_PRODUCTION
// At index 322 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 324 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 326 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 329 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 332 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (64) // <select_implementation_5F_parser_18>
, END_PRODUCTION
// At index 335 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 337 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 340 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 343 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 346 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO) // $WITH_AUTO$
, END_PRODUCTION
// At index 348 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
, END_PRODUCTION
// At index 349 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 352 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 355 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
, END_PRODUCTION
// At index 356 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, NONTERMINAL (16) // <int_or_float>
, NONTERMINAL (67) // <select_implementation_5F_parser_21>
, END_PRODUCTION
// At index 360 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number) // $set_start_uint_number$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 363 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (69) // <select_implementation_5F_parser_23>
, END_PRODUCTION
// At index 366 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (70) // <select_implementation_5F_parser_24>
, END_PRODUCTION
// At index 369 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) // $..$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 372 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
, NONTERMINAL (17) // <set_followup>
, END_PRODUCTION
// At index 374 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) // $..$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 377 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
, NONTERMINAL (17) // <set_followup>
, END_PRODUCTION
// At index 379 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, NONTERMINAL (19) // <range_content>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 383 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
, END_PRODUCTION
// At index 384 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 387 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
, END_PRODUCTION
// At index 388 : <>, in file '.ggs', line 0
, NONTERMINAL (2) // <file>
, END_PRODUCTION
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          P R O D U C T I O N    N A M E S                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const cProductionNameDescriptor gProductionNames_goil_file_level_include [136] = {
 {"<implementation_definition>", "implementation_parser", 0}, // at index 0
 {"<start>", "goil_syntax", 7}, // at index 1
 {"<file>", "goil_syntax", 10}, // at index 2
 {"<sign>", "goil_syntax", 12}, // at index 3
 {"<description>", "goil_syntax", 14}, // at index 4
 {"<OIL_version>", "goil_syntax", 16}, // at index 5
 {"<application_definition>", "goil_syntax", 22}, // at index 6
 {"<object_definition_list>", "goil_syntax", 30}, // at index 7
 {"<boolean>", "goil_syntax", 32}, // at index 8
 {"<oil_declaration_list>", "goil_syntax", 34}, // at index 9
 {"<oil_declaration>", "goil_syntax", 36}, // at index 10
 {"<include_file_level>", "goil_syntax", 40}, // at index 11
 {"<include_cpu_level>", "goil_syntax", 43}, // at index 12
 {"<implementation_objects>", "implementation_parser", 46}, // at index 13
 {"<implementation_type>", "implementation_parser", 50}, // at index 14
 {"<with_auto>", "implementation_parser", 52}, // at index 15
 {"<int_or_float>", "implementation_parser", 54}, // at index 16
 {"<set_followup>", "implementation_parser", 57}, // at index 17
 {"<range>", "implementation_parser", 59}, // at index 18
 {"<range_content>", "implementation_parser", 61}, // at index 19
 {"<number_options>", "implementation_parser", 64}, // at index 20
 {"<type_options>", "implementation_parser", 70}, // at index 21
 {"<boolean_options>", "implementation_parser", 75}, // at index 22
 {"<string_options>", "implementation_parser", 81}, // at index 23
 {"<enum_item>", "implementation_parser", 86}, // at index 24
 {"<enum_options>", "implementation_parser", 89}, // at index 25
 {"<multiple>", "implementation_parser", 98}, // at index 26
 {"<identifier_or_attribute>", "implementation_parser", 100}, // at index 27
 {"<identifier_or_enum_value>", "implementation_parser", 102}, // at index 28
 {"<implementation_list>", "implementation_parser", 104}, // at index 29
 {"<struct_options>", "implementation_parser", 108}, // at index 30
 {"<objref_option>", "implementation_parser", 113}, // at index 31
 {"<select_goil_5F_syntax_0>", "goil_syntax", 117}, // at index 32
 {"<select_goil_5F_syntax_0>", "goil_syntax", 118}, // at index 33
 {"<select_goil_5F_syntax_0>", "goil_syntax", 121}, // at index 34
 {"<select_goil_5F_syntax_0>", "goil_syntax", 124}, // at index 35
 {"<select_goil_5F_syntax_1>", "goil_syntax", 127}, // at index 36
 {"<select_goil_5F_syntax_1>", "goil_syntax", 129}, // at index 37
 {"<select_goil_5F_syntax_1>", "goil_syntax", 131}, // at index 38
 {"<select_goil_5F_syntax_2>", "goil_syntax", 132}, // at index 39
 {"<select_goil_5F_syntax_2>", "goil_syntax", 133}, // at index 40
 {"<select_goil_5F_syntax_3>", "goil_syntax", 137}, // at index 41
 {"<select_goil_5F_syntax_3>", "goil_syntax", 138}, // at index 42
 {"<select_goil_5F_syntax_4>", "goil_syntax", 141}, // at index 43
 {"<select_goil_5F_syntax_4>", "goil_syntax", 142}, // at index 44
 {"<select_goil_5F_syntax_4>", "goil_syntax", 151}, // at index 45
 {"<select_goil_5F_syntax_5>", "goil_syntax", 154}, // at index 46
 {"<select_goil_5F_syntax_5>", "goil_syntax", 156}, // at index 47
 {"<select_goil_5F_syntax_6>", "goil_syntax", 158}, // at index 48
 {"<select_goil_5F_syntax_6>", "goil_syntax", 159}, // at index 49
 {"<select_goil_5F_syntax_7>", "goil_syntax", 162}, // at index 50
 {"<select_goil_5F_syntax_7>", "goil_syntax", 165}, // at index 51
 {"<select_goil_5F_syntax_8>", "goil_syntax", 171}, // at index 52
 {"<select_goil_5F_syntax_8>", "goil_syntax", 175}, // at index 53
 {"<select_goil_5F_syntax_8>", "goil_syntax", 178}, // at index 54
 {"<select_goil_5F_syntax_8>", "goil_syntax", 182}, // at index 55
 {"<select_goil_5F_syntax_8>", "goil_syntax", 185}, // at index 56
 {"<select_goil_5F_syntax_9>", "goil_syntax", 188}, // at index 57
 {"<select_goil_5F_syntax_9>", "goil_syntax", 192}, // at index 58
 {"<select_goil_5F_syntax_10>", "goil_syntax", 193}, // at index 59
 {"<select_goil_5F_syntax_10>", "goil_syntax", 196}, // at index 60
 {"<select_goil_5F_syntax_11>", "goil_syntax", 199}, // at index 61
 {"<select_goil_5F_syntax_11>", "goil_syntax", 203}, // at index 62
 {"<select_goil_5F_syntax_12>", "goil_syntax", 204}, // at index 63
 {"<select_goil_5F_syntax_12>", "goil_syntax", 206}, // at index 64
 {"<select_goil_5F_syntax_13>", "goil_syntax", 208}, // at index 65
 {"<select_goil_5F_syntax_13>", "goil_syntax", 210}, // at index 66
 {"<select_implementation_5F_parser_0>", "implementation_parser", 212}, // at index 67
 {"<select_implementation_5F_parser_0>", "implementation_parser", 213}, // at index 68
 {"<select_implementation_5F_parser_1>", "implementation_parser", 217}, // at index 69
 {"<select_implementation_5F_parser_1>", "implementation_parser", 220}, // at index 70
 {"<select_implementation_5F_parser_2>", "implementation_parser", 221}, // at index 71
 {"<select_implementation_5F_parser_2>", "implementation_parser", 222}, // at index 72
 {"<select_implementation_5F_parser_3>", "implementation_parser", 226}, // at index 73
 {"<select_implementation_5F_parser_3>", "implementation_parser", 229}, // at index 74
 {"<select_implementation_5F_parser_3>", "implementation_parser", 232}, // at index 75
 {"<select_implementation_5F_parser_3>", "implementation_parser", 235}, // at index 76
 {"<select_implementation_5F_parser_3>", "implementation_parser", 238}, // at index 77
 {"<select_implementation_5F_parser_3>", "implementation_parser", 241}, // at index 78
 {"<select_implementation_5F_parser_3>", "implementation_parser", 244}, // at index 79
 {"<select_implementation_5F_parser_3>", "implementation_parser", 247}, // at index 80
 {"<select_implementation_5F_parser_3>", "implementation_parser", 250}, // at index 81
 {"<select_implementation_5F_parser_3>", "implementation_parser", 253}, // at index 82
 {"<select_implementation_5F_parser_3>", "implementation_parser", 256}, // at index 83
 {"<select_implementation_5F_parser_4>", "implementation_parser", 259}, // at index 84
 {"<select_implementation_5F_parser_4>", "implementation_parser", 261}, // at index 85
 {"<select_implementation_5F_parser_5>", "implementation_parser", 262}, // at index 86
 {"<select_implementation_5F_parser_5>", "implementation_parser", 265}, // at index 87
 {"<select_implementation_5F_parser_6>", "implementation_parser", 267}, // at index 88
 {"<select_implementation_5F_parser_6>", "implementation_parser", 270}, // at index 89
 {"<select_implementation_5F_parser_6>", "implementation_parser", 273}, // at index 90
 {"<select_implementation_5F_parser_7>", "implementation_parser", 276}, // at index 91
 {"<select_implementation_5F_parser_7>", "implementation_parser", 284}, // at index 92
 {"<select_implementation_5F_parser_8>", "implementation_parser", 285}, // at index 93
 {"<select_implementation_5F_parser_8>", "implementation_parser", 287}, // at index 94
 {"<select_implementation_5F_parser_9>", "implementation_parser", 288}, // at index 95
 {"<select_implementation_5F_parser_9>", "implementation_parser", 290}, // at index 96
 {"<select_implementation_5F_parser_10>", "implementation_parser", 291}, // at index 97
 {"<select_implementation_5F_parser_10>", "implementation_parser", 295}, // at index 98
 {"<select_implementation_5F_parser_11>", "implementation_parser", 297}, // at index 99
 {"<select_implementation_5F_parser_11>", "implementation_parser", 299}, // at index 100
 {"<select_implementation_5F_parser_12>", "implementation_parser", 300}, // at index 101
 {"<select_implementation_5F_parser_12>", "implementation_parser", 301}, // at index 102
 {"<select_implementation_5F_parser_13>", "implementation_parser", 305}, // at index 103
 {"<select_implementation_5F_parser_13>", "implementation_parser", 308}, // at index 104
 {"<select_implementation_5F_parser_14>", "implementation_parser", 310}, // at index 105
 {"<select_implementation_5F_parser_14>", "implementation_parser", 313}, // at index 106
 {"<select_implementation_5F_parser_14>", "implementation_parser", 316}, // at index 107
 {"<select_implementation_5F_parser_15>", "implementation_parser", 319}, // at index 108
 {"<select_implementation_5F_parser_15>", "implementation_parser", 322}, // at index 109
 {"<select_implementation_5F_parser_16>", "implementation_parser", 324}, // at index 110
 {"<select_implementation_5F_parser_16>", "implementation_parser", 326}, // at index 111
 {"<select_implementation_5F_parser_16>", "implementation_parser", 329}, // at index 112
 {"<select_implementation_5F_parser_17>", "implementation_parser", 332}, // at index 113
 {"<select_implementation_5F_parser_17>", "implementation_parser", 335}, // at index 114
 {"<select_implementation_5F_parser_18>", "implementation_parser", 337}, // at index 115
 {"<select_implementation_5F_parser_18>", "implementation_parser", 340}, // at index 116
 {"<select_implementation_5F_parser_18>", "implementation_parser", 343}, // at index 117
 {"<select_implementation_5F_parser_19>", "implementation_parser", 346}, // at index 118
 {"<select_implementation_5F_parser_19>", "implementation_parser", 348}, // at index 119
 {"<select_implementation_5F_parser_20>", "implementation_parser", 349}, // at index 120
 {"<select_implementation_5F_parser_20>", "implementation_parser", 352}, // at index 121
 {"<select_implementation_5F_parser_21>", "implementation_parser", 355}, // at index 122
 {"<select_implementation_5F_parser_21>", "implementation_parser", 356}, // at index 123
 {"<select_implementation_5F_parser_22>", "implementation_parser", 360}, // at index 124
 {"<select_implementation_5F_parser_22>", "implementation_parser", 363}, // at index 125
 {"<select_implementation_5F_parser_22>", "implementation_parser", 366}, // at index 126
 {"<select_implementation_5F_parser_23>", "implementation_parser", 369}, // at index 127
 {"<select_implementation_5F_parser_23>", "implementation_parser", 372}, // at index 128
 {"<select_implementation_5F_parser_24>", "implementation_parser", 374}, // at index 129
 {"<select_implementation_5F_parser_24>", "implementation_parser", 377}, // at index 130
 {"<select_implementation_5F_parser_25>", "implementation_parser", 379}, // at index 131
 {"<select_implementation_5F_parser_25>", "implementation_parser", 383}, // at index 132
 {"<select_implementation_5F_parser_26>", "implementation_parser", 384}, // at index 133
 {"<select_implementation_5F_parser_26>", "implementation_parser", 387}, // at index 134
 {"<>", "", 388} // at index 135
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 L L ( 1 )    P R O D U C T I O N    I N D E X E S                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionIndexes_goil_file_level_include [136] = {
0, // index 0 : <implementation_definition>, in file 'implementation_parser.ggs', line 54
7, // index 1 : <start>, in file 'goil_syntax.ggs', line 28
10, // index 2 : <file>, in file 'goil_syntax.ggs', line 94
12, // index 3 : <sign>, in file 'goil_syntax.ggs', line 102
14, // index 4 : <description>, in file 'goil_syntax.ggs', line 115
16, // index 5 : <OIL_version>, in file 'goil_syntax.ggs', line 139
22, // index 6 : <application_definition>, in file 'goil_syntax.ggs', line 146
30, // index 7 : <object_definition_list>, in file 'goil_syntax.ggs', line 155
32, // index 8 : <boolean>, in file 'goil_syntax.ggs', line 198
34, // index 9 : <oil_declaration_list>, in file 'goil_syntax.ggs', line 208
36, // index 10 : <oil_declaration>, in file 'goil_syntax.ggs', line 217
40, // index 11 : <include_file_level>, in file 'goil_syntax.ggs', line 388
43, // index 12 : <include_cpu_level>, in file 'goil_syntax.ggs', line 400
46, // index 13 : <implementation_objects>, in file 'implementation_parser.ggs', line 85
50, // index 14 : <implementation_type>, in file 'implementation_parser.ggs', line 162
52, // index 15 : <with_auto>, in file 'implementation_parser.ggs', line 417
54, // index 16 : <int_or_float>, in file 'implementation_parser.ggs', line 426
57, // index 17 : <set_followup>, in file 'implementation_parser.ggs', line 444
59, // index 18 : <range>, in file 'implementation_parser.ggs', line 496
61, // index 19 : <range_content>, in file 'implementation_parser.ggs', line 456
64, // index 20 : <number_options>, in file 'implementation_parser.ggs', line 349
70, // index 21 : <type_options>, in file 'implementation_parser.ggs', line 383
75, // index 22 : <boolean_options>, in file 'implementation_parser.ggs', line 255
81, // index 23 : <string_options>, in file 'implementation_parser.ggs', line 223
86, // index 24 : <enum_item>, in file 'implementation_parser.ggs', line 296
89, // index 25 : <enum_options>, in file 'implementation_parser.ggs', line 307
98, // index 26 : <multiple>, in file 'implementation_parser.ggs', line 506
100, // index 27 : <identifier_or_attribute>, in file 'implementation_parser.ggs', line 516
102, // index 28 : <identifier_or_enum_value>, in file 'implementation_parser.ggs', line 521
104, // index 29 : <implementation_list>, in file 'implementation_parser.ggs', line 134
108, // index 30 : <struct_options>, in file 'implementation_parser.ggs', line 190
113, // index 31 : <objref_option>, in file 'implementation_parser.ggs', line 205
117, // index 32 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
118, // index 33 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
121, // index 34 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
124, // index 35 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
127, // index 36 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
129, // index 37 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
131, // index 38 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
132, // index 39 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
133, // index 40 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
137, // index 41 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
138, // index 42 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
141, // index 43 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
142, // index 44 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
151, // index 45 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
154, // index 46 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
156, // index 47 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
158, // index 48 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
159, // index 49 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
162, // index 50 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
165, // index 51 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
171, // index 52 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
175, // index 53 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
178, // index 54 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
182, // index 55 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
185, // index 56 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
188, // index 57 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
192, // index 58 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
193, // index 59 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
196, // index 60 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
199, // index 61 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
203, // index 62 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
204, // index 63 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
206, // index 64 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
208, // index 65 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
210, // index 66 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
212, // index 67 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
213, // index 68 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
217, // index 69 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
220, // index 70 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
221, // index 71 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
222, // index 72 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
226, // index 73 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
229, // index 74 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
232, // index 75 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
235, // index 76 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
238, // index 77 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
241, // index 78 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
244, // index 79 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
247, // index 80 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
250, // index 81 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
253, // index 82 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
256, // index 83 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
259, // index 84 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
261, // index 85 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
262, // index 86 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
265, // index 87 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
267, // index 88 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
270, // index 89 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
273, // index 90 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
276, // index 91 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
284, // index 92 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
285, // index 93 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
287, // index 94 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
288, // index 95 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
290, // index 96 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
291, // index 97 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
295, // index 98 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
297, // index 99 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
299, // index 100 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
300, // index 101 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
301, // index 102 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
305, // index 103 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
308, // index 104 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
310, // index 105 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
313, // index 106 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
316, // index 107 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
319, // index 108 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
322, // index 109 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
324, // index 110 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
326, // index 111 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
329, // index 112 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
332, // index 113 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
335, // index 114 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
337, // index 115 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
340, // index 116 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
343, // index 117 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
346, // index 118 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
348, // index 119 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
349, // index 120 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
352, // index 121 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
355, // index 122 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
356, // index 123 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
360, // index 124 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
363, // index 125 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
366, // index 126 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
369, // index 127 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
372, // index 128 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
374, // index 129 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
377, // index 130 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
379, // index 131 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
383, // index 132 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
384, // index 133 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
387, // index 134 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
388 // index 135 : <>, in file '.ggs', line 0
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gFirstProductionIndexes_goil_file_level_include [75] = {
0, // at 0 : <implementation_definition>
1, // at 1 : <start>
2, // at 2 : <file>
3, // at 3 : <sign>
4, // at 4 : <description>
5, // at 5 : <OIL_version>
6, // at 6 : <application_definition>
7, // at 7 : <object_definition_list>
8, // at 8 : <boolean>
9, // at 9 : <oil_declaration_list>
10, // at 10 : <oil_declaration>
11, // at 11 : <include_file_level>
12, // at 12 : <include_cpu_level>
13, // at 13 : <implementation_objects>
14, // at 14 : <implementation_type>
15, // at 15 : <with_auto>
16, // at 16 : <int_or_float>
17, // at 17 : <set_followup>
18, // at 18 : <range>
19, // at 19 : <range_content>
20, // at 20 : <number_options>
21, // at 21 : <type_options>
22, // at 22 : <boolean_options>
23, // at 23 : <string_options>
24, // at 24 : <enum_item>
25, // at 25 : <enum_options>
26, // at 26 : <multiple>
27, // at 27 : <identifier_or_attribute>
28, // at 28 : <identifier_or_enum_value>
29, // at 29 : <implementation_list>
30, // at 30 : <struct_options>
31, // at 31 : <objref_option>
32, // at 32 : <select_goil_5F_syntax_0>
36, // at 33 : <select_goil_5F_syntax_1>
39, // at 34 : <select_goil_5F_syntax_2>
41, // at 35 : <select_goil_5F_syntax_3>
43, // at 36 : <select_goil_5F_syntax_4>
46, // at 37 : <select_goil_5F_syntax_5>
48, // at 38 : <select_goil_5F_syntax_6>
50, // at 39 : <select_goil_5F_syntax_7>
52, // at 40 : <select_goil_5F_syntax_8>
57, // at 41 : <select_goil_5F_syntax_9>
59, // at 42 : <select_goil_5F_syntax_10>
61, // at 43 : <select_goil_5F_syntax_11>
63, // at 44 : <select_goil_5F_syntax_12>
65, // at 45 : <select_goil_5F_syntax_13>
67, // at 46 : <select_implementation_5F_parser_0>
69, // at 47 : <select_implementation_5F_parser_1>
71, // at 48 : <select_implementation_5F_parser_2>
73, // at 49 : <select_implementation_5F_parser_3>
84, // at 50 : <select_implementation_5F_parser_4>
86, // at 51 : <select_implementation_5F_parser_5>
88, // at 52 : <select_implementation_5F_parser_6>
91, // at 53 : <select_implementation_5F_parser_7>
93, // at 54 : <select_implementation_5F_parser_8>
95, // at 55 : <select_implementation_5F_parser_9>
97, // at 56 : <select_implementation_5F_parser_10>
99, // at 57 : <select_implementation_5F_parser_11>
101, // at 58 : <select_implementation_5F_parser_12>
103, // at 59 : <select_implementation_5F_parser_13>
105, // at 60 : <select_implementation_5F_parser_14>
108, // at 61 : <select_implementation_5F_parser_15>
110, // at 62 : <select_implementation_5F_parser_16>
113, // at 63 : <select_implementation_5F_parser_17>
115, // at 64 : <select_implementation_5F_parser_18>
118, // at 65 : <select_implementation_5F_parser_19>
120, // at 66 : <select_implementation_5F_parser_20>
122, // at 67 : <select_implementation_5F_parser_21>
124, // at 68 : <select_implementation_5F_parser_22>
127, // at 69 : <select_implementation_5F_parser_23>
129, // at 70 : <select_implementation_5F_parser_24>
131, // at 71 : <select_implementation_5F_parser_25>
133, // at 72 : <select_implementation_5F_parser_26>
135, // at 73 : <>
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    L L ( 1 )    D E C I S I O N    T A B L E S                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gDecision_goil_file_level_include [] = {
// At index 0 : <implementation_definition> only one production, no choice
  -1,
// At index 1 : <start> only one production, no choice
  -1,
// At index 2 : <file> only one production, no choice
  -1,
// At index 3 : <sign> only one production, no choice
  -1,
// At index 4 : <description> only one production, no choice
  -1,
// At index 5 : <OIL_version> only one production, no choice
  -1,
// At index 6 : <application_definition> only one production, no choice
  -1,
// At index 7 : <object_definition_list> only one production, no choice
  -1,
// At index 8 : <boolean> only one production, no choice
  -1,
// At index 9 : <oil_declaration_list> only one production, no choice
  -1,
// At index 10 : <oil_declaration> only one production, no choice
  -1,
// At index 11 : <include_file_level> only one production, no choice
  -1,
// At index 12 : <include_cpu_level> only one production, no choice
  -1,
// At index 13 : <implementation_objects> only one production, no choice
  -1,
// At index 14 : <implementation_type> only one production, no choice
  -1,
// At index 15 : <with_auto> only one production, no choice
  -1,
// At index 16 : <int_or_float> only one production, no choice
  -1,
// At index 17 : <set_followup> only one production, no choice
  -1,
// At index 18 : <range> only one production, no choice
  -1,
// At index 19 : <range_content> only one production, no choice
  -1,
// At index 20 : <number_options> only one production, no choice
  -1,
// At index 21 : <type_options> only one production, no choice
  -1,
// At index 22 : <boolean_options> only one production, no choice
  -1,
// At index 23 : <string_options> only one production, no choice
  -1,
// At index 24 : <enum_item> only one production, no choice
  -1,
// At index 25 : <enum_options> only one production, no choice
  -1,
// At index 26 : <multiple> only one production, no choice
  -1,
// At index 27 : <identifier_or_attribute> only one production, no choice
  -1,
// At index 28 : <identifier_or_enum_value> only one production, no choice
  -1,
// At index 29 : <implementation_list> only one production, no choice
  -1,
// At index 30 : <struct_options> only one production, no choice
  -1,
// At index 31 : <objref_option> only one production, no choice
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 32 : <select_goil_5F_syntax_0>
C_Lexique_goil_5F_lexique::kToken_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_include, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_CPU, -1, // Choice 4
  -1,
// At index 41 : <select_goil_5F_syntax_1>
C_Lexique_goil_5F_lexique::kToken__2D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2B_, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 3
  -1,
// At index 50 : <select_goil_5F_syntax_2>
C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, -1, // Choice 2
  -1,
// At index 57 : <select_goil_5F_syntax_3>
C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 64 : <select_goil_5F_syntax_4>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_include, -1, // Choice 3
  -1,
// At index 71 : <select_goil_5F_syntax_5>
C_Lexique_goil_5F_lexique::kToken_TRUE, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_FALSE, -1, // Choice 2
  -1,
// At index 76 : <select_goil_5F_syntax_6>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 81 : <select_goil_5F_syntax_7>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 86 : <select_goil_5F_syntax_8>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2D_, C_Lexique_goil_5F_lexique::kToken__2B_, C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_TRUE, C_Lexique_goil_5F_lexique::kToken_FALSE, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 4
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 5
  -1,
// At index 102 : <select_goil_5F_syntax_9>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 108 : <select_goil_5F_syntax_10>
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 2
  -1,
// At index 113 : <select_goil_5F_syntax_11>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 119 : <select_goil_5F_syntax_12>
C_Lexique_goil_5F_lexique::kToken_g_5F_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 124 : <select_goil_5F_syntax_13>
C_Lexique_goil_5F_lexique::kToken_g_5F_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 129 : <select_implementation_5F_parser_0>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 134 : <select_implementation_5F_parser_1>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 2
  -1,
// At index 139 : <select_implementation_5F_parser_2>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, C_Lexique_goil_5F_lexique::kToken_UINT_33__32_, C_Lexique_goil_5F_lexique::kToken_INT_33__32_, C_Lexique_goil_5F_lexique::kToken_UINT_36__34_, C_Lexique_goil_5F_lexique::kToken_INT_36__34_, C_Lexique_goil_5F_lexique::kToken_FLOAT, C_Lexique_goil_5F_lexique::kToken_ENUM, C_Lexique_goil_5F_lexique::kToken_BOOLEAN, C_Lexique_goil_5F_lexique::kToken_STRING, C_Lexique_goil_5F_lexique::kToken_IDENTIFIER, C_Lexique_goil_5F_lexique::kToken_STRUCT, -1, // Choice 2
  -1,
// At index 154 : <select_implementation_5F_parser_3>
C_Lexique_goil_5F_lexique::kToken_UINT_33__32_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_INT_33__32_, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_UINT_36__34_, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_INT_36__34_, -1, // Choice 4
C_Lexique_goil_5F_lexique::kToken_FLOAT, -1, // Choice 5
C_Lexique_goil_5F_lexique::kToken_ENUM, -1, // Choice 6
C_Lexique_goil_5F_lexique::kToken_BOOLEAN, -1, // Choice 7
C_Lexique_goil_5F_lexique::kToken_STRING, -1, // Choice 8
C_Lexique_goil_5F_lexique::kToken_IDENTIFIER, -1, // Choice 9
C_Lexique_goil_5F_lexique::kToken_STRUCT, -1, // Choice 10
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 11
  -1,
// At index 177 : <select_implementation_5F_parser_4>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 182 : <select_implementation_5F_parser_5>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 190 : <select_implementation_5F_parser_6>
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 3
  -1,
// At index 197 : <select_implementation_5F_parser_7>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 202 : <select_implementation_5F_parser_8>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 207 : <select_implementation_5F_parser_9>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 2
  -1,
// At index 212 : <select_implementation_5F_parser_10>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 220 : <select_implementation_5F_parser_11>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 226 : <select_implementation_5F_parser_12>
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 231 : <select_implementation_5F_parser_13>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 239 : <select_implementation_5F_parser_14>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 3
  -1,
// At index 246 : <select_implementation_5F_parser_15>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 254 : <select_implementation_5F_parser_16>
C_Lexique_goil_5F_lexique::kToken__2D_, C_Lexique_goil_5F_lexique::kToken__2B_, C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 3
  -1,
// At index 264 : <select_implementation_5F_parser_17>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 272 : <select_implementation_5F_parser_18>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 3
  -1,
// At index 279 : <select_implementation_5F_parser_19>
C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 2
  -1,
// At index 285 : <select_implementation_5F_parser_20>
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 2
  -1,
// At index 290 : <select_implementation_5F_parser_21>
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 295 : <select_implementation_5F_parser_22>
C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 3
  -1,
// At index 302 : <select_implementation_5F_parser_23>
C_Lexique_goil_5F_lexique::kToken__2E__2E_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 308 : <select_implementation_5F_parser_24>
C_Lexique_goil_5F_lexique::kToken__2E__2E_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 314 : <select_implementation_5F_parser_25>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 319 : <select_implementation_5F_parser_26>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3D_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 326 : <> only one production, no choice
  -1,
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gDecisionIndexes_goil_file_level_include [75] = {
0, // at 0 : <implementation_definition>
1, // at 1 : <start>
2, // at 2 : <file>
3, // at 3 : <sign>
4, // at 4 : <description>
5, // at 5 : <OIL_version>
6, // at 6 : <application_definition>
7, // at 7 : <object_definition_list>
8, // at 8 : <boolean>
9, // at 9 : <oil_declaration_list>
10, // at 10 : <oil_declaration>
11, // at 11 : <include_file_level>
12, // at 12 : <include_cpu_level>
13, // at 13 : <implementation_objects>
14, // at 14 : <implementation_type>
15, // at 15 : <with_auto>
16, // at 16 : <int_or_float>
17, // at 17 : <set_followup>
18, // at 18 : <range>
19, // at 19 : <range_content>
20, // at 20 : <number_options>
21, // at 21 : <type_options>
22, // at 22 : <boolean_options>
23, // at 23 : <string_options>
24, // at 24 : <enum_item>
25, // at 25 : <enum_options>
26, // at 26 : <multiple>
27, // at 27 : <identifier_or_attribute>
28, // at 28 : <identifier_or_enum_value>
29, // at 29 : <implementation_list>
30, // at 30 : <struct_options>
31, // at 31 : <objref_option>
32, // at 32 : <select_goil_5F_syntax_0>
41, // at 33 : <select_goil_5F_syntax_1>
50, // at 34 : <select_goil_5F_syntax_2>
57, // at 35 : <select_goil_5F_syntax_3>
64, // at 36 : <select_goil_5F_syntax_4>
71, // at 37 : <select_goil_5F_syntax_5>
76, // at 38 : <select_goil_5F_syntax_6>
81, // at 39 : <select_goil_5F_syntax_7>
86, // at 40 : <select_goil_5F_syntax_8>
102, // at 41 : <select_goil_5F_syntax_9>
108, // at 42 : <select_goil_5F_syntax_10>
113, // at 43 : <select_goil_5F_syntax_11>
119, // at 44 : <select_goil_5F_syntax_12>
124, // at 45 : <select_goil_5F_syntax_13>
129, // at 46 : <select_implementation_5F_parser_0>
134, // at 47 : <select_implementation_5F_parser_1>
139, // at 48 : <select_implementation_5F_parser_2>
154, // at 49 : <select_implementation_5F_parser_3>
177, // at 50 : <select_implementation_5F_parser_4>
182, // at 51 : <select_implementation_5F_parser_5>
190, // at 52 : <select_implementation_5F_parser_6>
197, // at 53 : <select_implementation_5F_parser_7>
202, // at 54 : <select_implementation_5F_parser_8>
207, // at 55 : <select_implementation_5F_parser_9>
212, // at 56 : <select_implementation_5F_parser_10>
220, // at 57 : <select_implementation_5F_parser_11>
226, // at 58 : <select_implementation_5F_parser_12>
231, // at 59 : <select_implementation_5F_parser_13>
239, // at 60 : <select_implementation_5F_parser_14>
246, // at 61 : <select_implementation_5F_parser_15>
254, // at 62 : <select_implementation_5F_parser_16>
264, // at 63 : <select_implementation_5F_parser_17>
272, // at 64 : <select_implementation_5F_parser_18>
279, // at 65 : <select_implementation_5F_parser_19>
285, // at 66 : <select_implementation_5F_parser_20>
290, // at 67 : <select_implementation_5F_parser_21>
295, // at 68 : <select_implementation_5F_parser_22>
302, // at 69 : <select_implementation_5F_parser_23>
308, // at 70 : <select_implementation_5F_parser_24>
314, // at 71 : <select_implementation_5F_parser_25>
319, // at 72 : <select_implementation_5F_parser_26>
326, // at 73 : <>
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'implementation_definition' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_definition_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_definition_i0_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_definition_ (GALGAS_implementation & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_definition_i0_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        'start' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_start_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_start_i0_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_start_ (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_start_i0_(inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         'file' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_file_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_file_i1_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_file_ (GALGAS_implementation & parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_file_i1_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_implementation &  parameter_1,
                                GALGAS_applicationDefinition &  parameter_2
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
    C_Lexique_goil_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_goil_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
    if (scanner->sourceText () != NULL) {
      const bool ok = scanner->performTopDownParsing (gProductions_goil_file_level_include, gProductionNames_goil_file_level_include, gProductionIndexes_goil_file_level_include,
                                                      gFirstProductionIndexes_goil_file_level_include, gDecision_goil_file_level_include, gDecisionIndexes_goil_file_level_include, 388) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_goil_5F_file_5F_level_5F_include grammar ;
        grammar.nt_file_ (parameter_1, parameter_2, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_implementation &  parameter_1,
                                GALGAS_applicationDefinition &  parameter_2
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    C_Lexique_goil_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_goil_5F_lexique (inCompiler, sourceString, "" COMMA_HERE)) ;
    const bool ok = scanner->performTopDownParsing (gProductions_goil_file_level_include, gProductionNames_goil_file_level_include, gProductionIndexes_goil_file_level_include,
                                                    gFirstProductionIndexes_goil_file_level_include, gDecision_goil_file_level_include, gDecisionIndexes_goil_file_level_include, 388) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_goil_5F_file_5F_level_5F_include grammar ;
      grammar.nt_file_ (parameter_1, parameter_2, scanner) ;
    }
    macroDetachSharedObject (scanner) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         'sign' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_sign_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_sign_i2_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_sign_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_sign_i2_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'description' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_description_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_description_i3_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_description_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_description_i3_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'OIL_version' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_OIL_5F_version_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_OIL_5F_version_i4_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_OIL_5F_version_ (GALGAS_lstring & parameter_1,
                                GALGAS_lstring & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_OIL_5F_version_i4_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'application_definition' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_application_5F_definition_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_application_5F_definition_i5_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_application_5F_definition_ (const GALGAS_implementation parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_application_5F_definition_i5_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'object_definition_list' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_object_5F_definition_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_object_5F_definition_5F_list_i6_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_object_5F_definition_5F_list_ (const GALGAS_implementation parameter_1,
                                GALGAS_objectsMap & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_object_5F_definition_5F_list_i6_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'boolean' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_boolean_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_boolean_i7_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_boolean_ (GALGAS_lbool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_boolean_i7_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'oil_declaration_list' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_oil_5F_declaration_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_5F_list_i8_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_oil_5F_declaration_5F_list_ (const GALGAS_implementationObjectMap parameter_1,
                                GALGAS_objectAttributes & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_5F_list_i8_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'oil_declaration' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_oil_5F_declaration_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_i9_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_oil_5F_declaration_ (const GALGAS_implementationObjectMap parameter_1,
                                GALGAS_objectAttributes & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_i9_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'include_file_level' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_include_5F_file_5F_level_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_file_5F_level_i10_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_include_5F_file_5F_level_ (GALGAS_implementation & parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_file_5F_level_i10_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'include_cpu_level' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_include_5F_cpu_5F_level_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_cpu_5F_level_i11_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_include_5F_cpu_5F_level_ (const GALGAS_implementation parameter_1,
                                GALGAS_objectsMap & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_cpu_5F_level_i11_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'implementation_objects' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_objects_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_objects_i1_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_objects_ (GALGAS_implementation & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_objects_i1_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'implementation_type' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_type_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_type_i3_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_type_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_type_i3_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'with_auto' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_with_5F_auto_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_with_5F_auto_i12_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_with_5F_auto_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_with_5F_auto_i12_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'int_or_float' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_int_5F_or_5F_float_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_int_5F_or_5F_float_i13_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_int_5F_or_5F_float_ (GALGAS_object_5F_t & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_int_5F_or_5F_float_i13_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'set_followup' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_set_5F_followup_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_set_5F_followup_i14_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_set_5F_followup_ (GALGAS_numberList & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_set_5F_followup_i14_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        'range' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_range_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_i16_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_range_ (GALGAS_attributeRange & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_i16_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'range_content' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_range_5F_content_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_5F_content_i15_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_range_5F_content_ (GALGAS_attributeRange & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_5F_content_i15_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'number_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_number_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_number_5F_options_i10_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_number_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                const GALGAS_dataType parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_number_5F_options_i10_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'type_options' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_type_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_type_5F_options_i11_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_type_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                const GALGAS_dataType parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_type_5F_options_i11_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'boolean_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_boolean_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_boolean_5F_options_i7_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_boolean_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_boolean_5F_options_i7_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'string_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_string_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_string_5F_options_i6_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_string_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_string_5F_options_i6_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'enum_item' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_enum_5F_item_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_item_i8_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_enum_5F_item_ (GALGAS_enumValues & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_item_i8_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'enum_options' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_enum_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_options_i9_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_enum_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_options_i9_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'multiple' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_multiple_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_multiple_i17_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_multiple_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_multiple_i17_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'identifier_or_attribute' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_identifier_5F_or_5F_attribute_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_identifier_5F_or_5F_attribute_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'identifier_or_enum_value' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_identifier_5F_or_5F_enum_5F_value_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_identifier_5F_or_5F_enum_5F_value_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'implementation_list' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_list_i2_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_implementation_5F_list_ (GALGAS_implementationObjectMap & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_list_i2_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'struct_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_struct_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_struct_5F_options_i4_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_struct_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_struct_5F_options_i4_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'objref_option' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_file_5F_level_5F_include::nt_objref_5F_option_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_objref_5F_option_i5_parse(inLexique) ;
}

void cGrammar_goil_5F_file_5F_level_5F_include::nt_objref_5F_option_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                GALGAS_lstring parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_objref_5F_option_i5_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_0' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_0 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_1' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_1 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_2' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_2 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_3' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_3 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_4' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_4 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_5' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_5 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_6' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_6 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_7' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_7 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_8' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_8 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_9' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_9 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_10' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_10 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_11' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_11 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_12' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_12 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_13' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_goil_5F_syntax_13 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_0' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_0 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_1' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_1 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_2' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_2 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_3' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_3 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_4' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_4 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_5' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_5 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_6' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_6 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_7' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_7 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_8' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_8 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_9' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_9 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_10' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_10 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_11' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_11 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_12' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_12 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_13' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_13 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_14' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_14 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_15' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_15 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_16' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_16 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_17' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_17 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_18' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_18 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_19' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_19 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_20' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_20 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_21' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_21 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_22' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_22 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_23' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_23 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_24' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_24 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_25' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_25 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_26' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_file_5F_level_5F_include::select_implementation_5F_parser_26 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   L L ( 1 )    P R O D U C T I O N    R U L E S                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const int16_t gProductions_goil_grammar [] = {
// At index 0 : <implementation_definition>, in file 'implementation_parser.ggs', line 54
  TERMINAL (C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION) // $IMPLEMENTATION$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (46) // <select_implementation_5F_parser_0>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 7 : <start>, in file 'goil_syntax.ggs', line 28
, NONTERMINAL (5) // <OIL_version>
, NONTERMINAL (2) // <file>
, END_PRODUCTION
// At index 10 : <file>, in file 'goil_syntax.ggs', line 94
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 12 : <sign>, in file 'goil_syntax.ggs', line 102
, NONTERMINAL (33) // <select_goil_5F_syntax_1>
, END_PRODUCTION
// At index 14 : <description>, in file 'goil_syntax.ggs', line 115
, NONTERMINAL (34) // <select_goil_5F_syntax_2>
, END_PRODUCTION
// At index 16 : <OIL_version>, in file 'goil_syntax.ggs', line 139
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_OIL_5F_VERSION) // $OIL_VERSION$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 22 : <application_definition>, in file 'goil_syntax.ggs', line 146
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPU) // $CPU$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (7) // <object_definition_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 30 : <object_definition_list>, in file 'goil_syntax.ggs', line 155
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 32 : <boolean>, in file 'goil_syntax.ggs', line 198
, NONTERMINAL (37) // <select_goil_5F_syntax_5>
, END_PRODUCTION
// At index 34 : <oil_declaration_list>, in file 'goil_syntax.ggs', line 208
, NONTERMINAL (38) // <select_goil_5F_syntax_6>
, END_PRODUCTION
// At index 36 : <oil_declaration>, in file 'goil_syntax.ggs', line 217
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (39) // <select_goil_5F_syntax_7>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, END_PRODUCTION
// At index 40 : <include_file_level>, in file 'goil_syntax.ggs', line 388
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) // $include$
, NONTERMINAL (44) // <select_goil_5F_syntax_12>
, END_PRODUCTION
// At index 43 : <include_cpu_level>, in file 'goil_syntax.ggs', line 400
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_include) // $include$
, NONTERMINAL (45) // <select_goil_5F_syntax_13>
, END_PRODUCTION
// At index 46 : <implementation_objects>, in file 'implementation_parser.ggs', line 85
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (47) // <select_implementation_5F_parser_1>
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 50 : <implementation_type>, in file 'implementation_parser.ggs', line 162
, NONTERMINAL (49) // <select_implementation_5F_parser_3>
, END_PRODUCTION
// At index 52 : <with_auto>, in file 'implementation_parser.ggs', line 417
, NONTERMINAL (65) // <select_implementation_5F_parser_19>
, END_PRODUCTION
// At index 54 : <int_or_float>, in file 'implementation_parser.ggs', line 426
, NONTERMINAL (3) // <sign>
, NONTERMINAL (66) // <select_implementation_5F_parser_20>
, END_PRODUCTION
// At index 57 : <set_followup>, in file 'implementation_parser.ggs', line 444
, NONTERMINAL (67) // <select_implementation_5F_parser_21>
, END_PRODUCTION
// At index 59 : <range>, in file 'implementation_parser.ggs', line 496
, NONTERMINAL (71) // <select_implementation_5F_parser_25>
, END_PRODUCTION
// At index 61 : <range_content>, in file 'implementation_parser.ggs', line 456
, NONTERMINAL (3) // <sign>
, NONTERMINAL (68) // <select_implementation_5F_parser_22>
, END_PRODUCTION
// At index 64 : <number_options>, in file 'implementation_parser.ggs', line 349
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (18) // <range>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (61) // <select_implementation_5F_parser_15>
, END_PRODUCTION
// At index 70 : <type_options>, in file 'implementation_parser.ggs', line 383
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (63) // <select_implementation_5F_parser_17>
, END_PRODUCTION
// At index 75 : <boolean_options>, in file 'implementation_parser.ggs', line 255
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (53) // <select_implementation_5F_parser_7>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (56) // <select_implementation_5F_parser_10>
, END_PRODUCTION
// At index 81 : <string_options>, in file 'implementation_parser.ggs', line 223
, NONTERMINAL (15) // <with_auto>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (51) // <select_implementation_5F_parser_5>
, END_PRODUCTION
// At index 86 : <enum_item>, in file 'implementation_parser.ggs', line 296
, NONTERMINAL (28) // <identifier_or_enum_value>
, NONTERMINAL (57) // <select_implementation_5F_parser_11>
, END_PRODUCTION
// At index 89 : <enum_options>, in file 'implementation_parser.ggs', line 307
, NONTERMINAL (15) // <with_auto>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, NONTERMINAL (24) // <enum_item>
, NONTERMINAL (58) // <select_implementation_5F_parser_12>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (59) // <select_implementation_5F_parser_13>
, END_PRODUCTION
// At index 98 : <multiple>, in file 'implementation_parser.ggs', line 506
, NONTERMINAL (72) // <select_implementation_5F_parser_26>
, END_PRODUCTION
// At index 100 : <identifier_or_attribute>, in file 'implementation_parser.ggs', line 516
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, END_PRODUCTION
// At index 102 : <identifier_or_enum_value>, in file 'implementation_parser.ggs', line 521
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, END_PRODUCTION
// At index 104 : <implementation_list>, in file 'implementation_parser.ggs', line 134
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (48) // <select_implementation_5F_parser_2>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 108 : <struct_options>, in file 'implementation_parser.ggs', line 190
, NONTERMINAL (50) // <select_implementation_5F_parser_4>
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 113 : <objref_option>, in file 'implementation_parser.ggs', line 205
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (26) // <multiple>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 117 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, END_PRODUCTION
// At index 118 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (11) // <include_file_level>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 121 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (0) // <implementation_definition>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 124 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
, NONTERMINAL (6) // <application_definition>
, NONTERMINAL (32) // <select_goil_5F_syntax_0>
, END_PRODUCTION
// At index 127 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2D_) // $-$
, END_PRODUCTION
// At index 129 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2B_) // $+$
, END_PRODUCTION
// At index 131 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
, END_PRODUCTION
// At index 132 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
, END_PRODUCTION
// At index 133 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3A_) // $:$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (35) // <select_goil_5F_syntax_3>
, END_PRODUCTION
// At index 137 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
, END_PRODUCTION
// At index 138 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (35) // <select_goil_5F_syntax_3>
, END_PRODUCTION
// At index 141 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, END_PRODUCTION
// At index 142 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 151 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
, NONTERMINAL (12) // <include_cpu_level>
, NONTERMINAL (36) // <select_goil_5F_syntax_4>
, END_PRODUCTION
// At index 154 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) // $TRUE$
, END_PRODUCTION
// At index 156 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) // $FALSE$
, END_PRODUCTION
// At index 158 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
, END_PRODUCTION
// At index 159 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
, NONTERMINAL (10) // <oil_declaration>
, NONTERMINAL (38) // <select_goil_5F_syntax_6>
, END_PRODUCTION
// At index 162 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (40) // <select_goil_5F_syntax_8>
, END_PRODUCTION
// At index 165 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 171 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (41) // <select_goil_5F_syntax_9>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 175 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, NONTERMINAL (3) // <sign>
, NONTERMINAL (42) // <select_goil_5F_syntax_10>
, END_PRODUCTION
// At index 178 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, NONTERMINAL (8) // <boolean>
, NONTERMINAL (43) // <select_goil_5F_syntax_11>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 182 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 185 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 188 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 192 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
, END_PRODUCTION
// At index 193 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 196 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 199 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) // ${$
, NONTERMINAL (9) // <oil_declaration_list>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) // $}$
, END_PRODUCTION
// At index 203 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
, END_PRODUCTION
// At index 204 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) // $g_string$
, END_PRODUCTION
// At index 206 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, END_PRODUCTION
// At index 208 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_g_5F_string) // $g_string$
, END_PRODUCTION
// At index 210 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, END_PRODUCTION
// At index 212 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
, END_PRODUCTION
// At index 213 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
, NONTERMINAL (13) // <implementation_objects>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (46) // <select_implementation_5F_parser_0>
, END_PRODUCTION
// At index 217 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 220 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
, END_PRODUCTION
// At index 221 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
, END_PRODUCTION
// At index 222 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
, NONTERMINAL (14) // <implementation_type>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) // $;$
, NONTERMINAL (48) // <select_implementation_5F_parser_2>
, END_PRODUCTION
// At index 226 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_33__32_) // $UINT32$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 229 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_33__32_) // $INT32$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 232 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_UINT_36__34_) // $UINT64$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 235 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_INT_36__34_) // $INT64$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 238 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLOAT) // $FLOAT$
, NONTERMINAL (20) // <number_options>
, END_PRODUCTION
// At index 241 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_ENUM) // $ENUM$
, NONTERMINAL (25) // <enum_options>
, END_PRODUCTION
// At index 244 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_BOOLEAN) // $BOOLEAN$
, NONTERMINAL (22) // <boolean_options>
, END_PRODUCTION
// At index 247 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRING) // $STRING$
, NONTERMINAL (23) // <string_options>
, END_PRODUCTION
// At index 250 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_IDENTIFIER) // $IDENTIFIER$
, NONTERMINAL (21) // <type_options>
, END_PRODUCTION
// At index 253 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_STRUCT) // $STRUCT$
, NONTERMINAL (30) // <struct_options>
, END_PRODUCTION
// At index 256 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (31) // <objref_option>
, END_PRODUCTION
// At index 259 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 261 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
, END_PRODUCTION
// At index 262 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (52) // <select_implementation_5F_parser_6>
, END_PRODUCTION
// At index 265 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 267 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) // $string$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 270 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 273 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 276 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) // $TRUE$
, NONTERMINAL (54) // <select_implementation_5F_parser_8>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) // $FALSE$
, NONTERMINAL (55) // <select_implementation_5F_parser_9>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 284 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
, END_PRODUCTION
// At index 285 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 287 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
, END_PRODUCTION
// At index 288 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 290 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
, END_PRODUCTION
// At index 291 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (8) // <boolean>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 295 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 297 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
, NONTERMINAL (29) // <implementation_list>
, END_PRODUCTION
// At index 299 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
, END_PRODUCTION
// At index 300 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
, END_PRODUCTION
// At index 301 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, NONTERMINAL (24) // <enum_item>
, NONTERMINAL (58) // <select_implementation_5F_parser_12>
, END_PRODUCTION
// At index 305 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (60) // <select_implementation_5F_parser_14>
, END_PRODUCTION
// At index 308 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 310 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) // $idf$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 313 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 316 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 319 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (62) // <select_implementation_5F_parser_16>
, END_PRODUCTION
// At index 322 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 324 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 326 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 329 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 332 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) // $=$
, NONTERMINAL (64) // <select_implementation_5F_parser_18>
, END_PRODUCTION
// At index 335 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 337 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, NONTERMINAL (27) // <identifier_or_attribute>
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 340 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT) // $NO_DEFAULT$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 343 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) // $AUTO$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 346 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO) // $WITH_AUTO$
, END_PRODUCTION
// At index 348 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
, END_PRODUCTION
// At index 349 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 352 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (4) // <description>
, END_PRODUCTION
// At index 355 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
, END_PRODUCTION
// At index 356 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2C_) // $,$
, NONTERMINAL (16) // <int_or_float>
, NONTERMINAL (67) // <select_implementation_5F_parser_21>
, END_PRODUCTION
// At index 360 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number) // $set_start_uint_number$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 363 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) // $uint_number$
, NONTERMINAL (69) // <select_implementation_5F_parser_23>
, END_PRODUCTION
// At index 366 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
, TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) // $float_number$
, NONTERMINAL (70) // <select_implementation_5F_parser_24>
, END_PRODUCTION
// At index 369 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) // $..$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 372 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
, NONTERMINAL (17) // <set_followup>
, END_PRODUCTION
// At index 374 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__2E__2E_) // $..$
, NONTERMINAL (16) // <int_or_float>
, END_PRODUCTION
// At index 377 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
, NONTERMINAL (17) // <set_followup>
, END_PRODUCTION
// At index 379 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, NONTERMINAL (19) // <range_content>
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 383 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
, END_PRODUCTION
// At index 384 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5B_) // $[$
, TERMINAL (C_Lexique_goil_5F_lexique::kToken__5D_) // $]$
, END_PRODUCTION
// At index 387 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
, END_PRODUCTION
// At index 388 : <>, in file '.ggs', line 0
, NONTERMINAL (1) // <start>
, END_PRODUCTION
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          P R O D U C T I O N    N A M E S                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const cProductionNameDescriptor gProductionNames_goil_grammar [136] = {
 {"<implementation_definition>", "implementation_parser", 0}, // at index 0
 {"<start>", "goil_syntax", 7}, // at index 1
 {"<file>", "goil_syntax", 10}, // at index 2
 {"<sign>", "goil_syntax", 12}, // at index 3
 {"<description>", "goil_syntax", 14}, // at index 4
 {"<OIL_version>", "goil_syntax", 16}, // at index 5
 {"<application_definition>", "goil_syntax", 22}, // at index 6
 {"<object_definition_list>", "goil_syntax", 30}, // at index 7
 {"<boolean>", "goil_syntax", 32}, // at index 8
 {"<oil_declaration_list>", "goil_syntax", 34}, // at index 9
 {"<oil_declaration>", "goil_syntax", 36}, // at index 10
 {"<include_file_level>", "goil_syntax", 40}, // at index 11
 {"<include_cpu_level>", "goil_syntax", 43}, // at index 12
 {"<implementation_objects>", "implementation_parser", 46}, // at index 13
 {"<implementation_type>", "implementation_parser", 50}, // at index 14
 {"<with_auto>", "implementation_parser", 52}, // at index 15
 {"<int_or_float>", "implementation_parser", 54}, // at index 16
 {"<set_followup>", "implementation_parser", 57}, // at index 17
 {"<range>", "implementation_parser", 59}, // at index 18
 {"<range_content>", "implementation_parser", 61}, // at index 19
 {"<number_options>", "implementation_parser", 64}, // at index 20
 {"<type_options>", "implementation_parser", 70}, // at index 21
 {"<boolean_options>", "implementation_parser", 75}, // at index 22
 {"<string_options>", "implementation_parser", 81}, // at index 23
 {"<enum_item>", "implementation_parser", 86}, // at index 24
 {"<enum_options>", "implementation_parser", 89}, // at index 25
 {"<multiple>", "implementation_parser", 98}, // at index 26
 {"<identifier_or_attribute>", "implementation_parser", 100}, // at index 27
 {"<identifier_or_enum_value>", "implementation_parser", 102}, // at index 28
 {"<implementation_list>", "implementation_parser", 104}, // at index 29
 {"<struct_options>", "implementation_parser", 108}, // at index 30
 {"<objref_option>", "implementation_parser", 113}, // at index 31
 {"<select_goil_5F_syntax_0>", "goil_syntax", 117}, // at index 32
 {"<select_goil_5F_syntax_0>", "goil_syntax", 118}, // at index 33
 {"<select_goil_5F_syntax_0>", "goil_syntax", 121}, // at index 34
 {"<select_goil_5F_syntax_0>", "goil_syntax", 124}, // at index 35
 {"<select_goil_5F_syntax_1>", "goil_syntax", 127}, // at index 36
 {"<select_goil_5F_syntax_1>", "goil_syntax", 129}, // at index 37
 {"<select_goil_5F_syntax_1>", "goil_syntax", 131}, // at index 38
 {"<select_goil_5F_syntax_2>", "goil_syntax", 132}, // at index 39
 {"<select_goil_5F_syntax_2>", "goil_syntax", 133}, // at index 40
 {"<select_goil_5F_syntax_3>", "goil_syntax", 137}, // at index 41
 {"<select_goil_5F_syntax_3>", "goil_syntax", 138}, // at index 42
 {"<select_goil_5F_syntax_4>", "goil_syntax", 141}, // at index 43
 {"<select_goil_5F_syntax_4>", "goil_syntax", 142}, // at index 44
 {"<select_goil_5F_syntax_4>", "goil_syntax", 151}, // at index 45
 {"<select_goil_5F_syntax_5>", "goil_syntax", 154}, // at index 46
 {"<select_goil_5F_syntax_5>", "goil_syntax", 156}, // at index 47
 {"<select_goil_5F_syntax_6>", "goil_syntax", 158}, // at index 48
 {"<select_goil_5F_syntax_6>", "goil_syntax", 159}, // at index 49
 {"<select_goil_5F_syntax_7>", "goil_syntax", 162}, // at index 50
 {"<select_goil_5F_syntax_7>", "goil_syntax", 165}, // at index 51
 {"<select_goil_5F_syntax_8>", "goil_syntax", 171}, // at index 52
 {"<select_goil_5F_syntax_8>", "goil_syntax", 175}, // at index 53
 {"<select_goil_5F_syntax_8>", "goil_syntax", 178}, // at index 54
 {"<select_goil_5F_syntax_8>", "goil_syntax", 182}, // at index 55
 {"<select_goil_5F_syntax_8>", "goil_syntax", 185}, // at index 56
 {"<select_goil_5F_syntax_9>", "goil_syntax", 188}, // at index 57
 {"<select_goil_5F_syntax_9>", "goil_syntax", 192}, // at index 58
 {"<select_goil_5F_syntax_10>", "goil_syntax", 193}, // at index 59
 {"<select_goil_5F_syntax_10>", "goil_syntax", 196}, // at index 60
 {"<select_goil_5F_syntax_11>", "goil_syntax", 199}, // at index 61
 {"<select_goil_5F_syntax_11>", "goil_syntax", 203}, // at index 62
 {"<select_goil_5F_syntax_12>", "goil_syntax", 204}, // at index 63
 {"<select_goil_5F_syntax_12>", "goil_syntax", 206}, // at index 64
 {"<select_goil_5F_syntax_13>", "goil_syntax", 208}, // at index 65
 {"<select_goil_5F_syntax_13>", "goil_syntax", 210}, // at index 66
 {"<select_implementation_5F_parser_0>", "implementation_parser", 212}, // at index 67
 {"<select_implementation_5F_parser_0>", "implementation_parser", 213}, // at index 68
 {"<select_implementation_5F_parser_1>", "implementation_parser", 217}, // at index 69
 {"<select_implementation_5F_parser_1>", "implementation_parser", 220}, // at index 70
 {"<select_implementation_5F_parser_2>", "implementation_parser", 221}, // at index 71
 {"<select_implementation_5F_parser_2>", "implementation_parser", 222}, // at index 72
 {"<select_implementation_5F_parser_3>", "implementation_parser", 226}, // at index 73
 {"<select_implementation_5F_parser_3>", "implementation_parser", 229}, // at index 74
 {"<select_implementation_5F_parser_3>", "implementation_parser", 232}, // at index 75
 {"<select_implementation_5F_parser_3>", "implementation_parser", 235}, // at index 76
 {"<select_implementation_5F_parser_3>", "implementation_parser", 238}, // at index 77
 {"<select_implementation_5F_parser_3>", "implementation_parser", 241}, // at index 78
 {"<select_implementation_5F_parser_3>", "implementation_parser", 244}, // at index 79
 {"<select_implementation_5F_parser_3>", "implementation_parser", 247}, // at index 80
 {"<select_implementation_5F_parser_3>", "implementation_parser", 250}, // at index 81
 {"<select_implementation_5F_parser_3>", "implementation_parser", 253}, // at index 82
 {"<select_implementation_5F_parser_3>", "implementation_parser", 256}, // at index 83
 {"<select_implementation_5F_parser_4>", "implementation_parser", 259}, // at index 84
 {"<select_implementation_5F_parser_4>", "implementation_parser", 261}, // at index 85
 {"<select_implementation_5F_parser_5>", "implementation_parser", 262}, // at index 86
 {"<select_implementation_5F_parser_5>", "implementation_parser", 265}, // at index 87
 {"<select_implementation_5F_parser_6>", "implementation_parser", 267}, // at index 88
 {"<select_implementation_5F_parser_6>", "implementation_parser", 270}, // at index 89
 {"<select_implementation_5F_parser_6>", "implementation_parser", 273}, // at index 90
 {"<select_implementation_5F_parser_7>", "implementation_parser", 276}, // at index 91
 {"<select_implementation_5F_parser_7>", "implementation_parser", 284}, // at index 92
 {"<select_implementation_5F_parser_8>", "implementation_parser", 285}, // at index 93
 {"<select_implementation_5F_parser_8>", "implementation_parser", 287}, // at index 94
 {"<select_implementation_5F_parser_9>", "implementation_parser", 288}, // at index 95
 {"<select_implementation_5F_parser_9>", "implementation_parser", 290}, // at index 96
 {"<select_implementation_5F_parser_10>", "implementation_parser", 291}, // at index 97
 {"<select_implementation_5F_parser_10>", "implementation_parser", 295}, // at index 98
 {"<select_implementation_5F_parser_11>", "implementation_parser", 297}, // at index 99
 {"<select_implementation_5F_parser_11>", "implementation_parser", 299}, // at index 100
 {"<select_implementation_5F_parser_12>", "implementation_parser", 300}, // at index 101
 {"<select_implementation_5F_parser_12>", "implementation_parser", 301}, // at index 102
 {"<select_implementation_5F_parser_13>", "implementation_parser", 305}, // at index 103
 {"<select_implementation_5F_parser_13>", "implementation_parser", 308}, // at index 104
 {"<select_implementation_5F_parser_14>", "implementation_parser", 310}, // at index 105
 {"<select_implementation_5F_parser_14>", "implementation_parser", 313}, // at index 106
 {"<select_implementation_5F_parser_14>", "implementation_parser", 316}, // at index 107
 {"<select_implementation_5F_parser_15>", "implementation_parser", 319}, // at index 108
 {"<select_implementation_5F_parser_15>", "implementation_parser", 322}, // at index 109
 {"<select_implementation_5F_parser_16>", "implementation_parser", 324}, // at index 110
 {"<select_implementation_5F_parser_16>", "implementation_parser", 326}, // at index 111
 {"<select_implementation_5F_parser_16>", "implementation_parser", 329}, // at index 112
 {"<select_implementation_5F_parser_17>", "implementation_parser", 332}, // at index 113
 {"<select_implementation_5F_parser_17>", "implementation_parser", 335}, // at index 114
 {"<select_implementation_5F_parser_18>", "implementation_parser", 337}, // at index 115
 {"<select_implementation_5F_parser_18>", "implementation_parser", 340}, // at index 116
 {"<select_implementation_5F_parser_18>", "implementation_parser", 343}, // at index 117
 {"<select_implementation_5F_parser_19>", "implementation_parser", 346}, // at index 118
 {"<select_implementation_5F_parser_19>", "implementation_parser", 348}, // at index 119
 {"<select_implementation_5F_parser_20>", "implementation_parser", 349}, // at index 120
 {"<select_implementation_5F_parser_20>", "implementation_parser", 352}, // at index 121
 {"<select_implementation_5F_parser_21>", "implementation_parser", 355}, // at index 122
 {"<select_implementation_5F_parser_21>", "implementation_parser", 356}, // at index 123
 {"<select_implementation_5F_parser_22>", "implementation_parser", 360}, // at index 124
 {"<select_implementation_5F_parser_22>", "implementation_parser", 363}, // at index 125
 {"<select_implementation_5F_parser_22>", "implementation_parser", 366}, // at index 126
 {"<select_implementation_5F_parser_23>", "implementation_parser", 369}, // at index 127
 {"<select_implementation_5F_parser_23>", "implementation_parser", 372}, // at index 128
 {"<select_implementation_5F_parser_24>", "implementation_parser", 374}, // at index 129
 {"<select_implementation_5F_parser_24>", "implementation_parser", 377}, // at index 130
 {"<select_implementation_5F_parser_25>", "implementation_parser", 379}, // at index 131
 {"<select_implementation_5F_parser_25>", "implementation_parser", 383}, // at index 132
 {"<select_implementation_5F_parser_26>", "implementation_parser", 384}, // at index 133
 {"<select_implementation_5F_parser_26>", "implementation_parser", 387}, // at index 134
 {"<>", "", 388} // at index 135
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 L L ( 1 )    P R O D U C T I O N    I N D E X E S                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionIndexes_goil_grammar [136] = {
0, // index 0 : <implementation_definition>, in file 'implementation_parser.ggs', line 54
7, // index 1 : <start>, in file 'goil_syntax.ggs', line 28
10, // index 2 : <file>, in file 'goil_syntax.ggs', line 94
12, // index 3 : <sign>, in file 'goil_syntax.ggs', line 102
14, // index 4 : <description>, in file 'goil_syntax.ggs', line 115
16, // index 5 : <OIL_version>, in file 'goil_syntax.ggs', line 139
22, // index 6 : <application_definition>, in file 'goil_syntax.ggs', line 146
30, // index 7 : <object_definition_list>, in file 'goil_syntax.ggs', line 155
32, // index 8 : <boolean>, in file 'goil_syntax.ggs', line 198
34, // index 9 : <oil_declaration_list>, in file 'goil_syntax.ggs', line 208
36, // index 10 : <oil_declaration>, in file 'goil_syntax.ggs', line 217
40, // index 11 : <include_file_level>, in file 'goil_syntax.ggs', line 388
43, // index 12 : <include_cpu_level>, in file 'goil_syntax.ggs', line 400
46, // index 13 : <implementation_objects>, in file 'implementation_parser.ggs', line 85
50, // index 14 : <implementation_type>, in file 'implementation_parser.ggs', line 162
52, // index 15 : <with_auto>, in file 'implementation_parser.ggs', line 417
54, // index 16 : <int_or_float>, in file 'implementation_parser.ggs', line 426
57, // index 17 : <set_followup>, in file 'implementation_parser.ggs', line 444
59, // index 18 : <range>, in file 'implementation_parser.ggs', line 496
61, // index 19 : <range_content>, in file 'implementation_parser.ggs', line 456
64, // index 20 : <number_options>, in file 'implementation_parser.ggs', line 349
70, // index 21 : <type_options>, in file 'implementation_parser.ggs', line 383
75, // index 22 : <boolean_options>, in file 'implementation_parser.ggs', line 255
81, // index 23 : <string_options>, in file 'implementation_parser.ggs', line 223
86, // index 24 : <enum_item>, in file 'implementation_parser.ggs', line 296
89, // index 25 : <enum_options>, in file 'implementation_parser.ggs', line 307
98, // index 26 : <multiple>, in file 'implementation_parser.ggs', line 506
100, // index 27 : <identifier_or_attribute>, in file 'implementation_parser.ggs', line 516
102, // index 28 : <identifier_or_enum_value>, in file 'implementation_parser.ggs', line 521
104, // index 29 : <implementation_list>, in file 'implementation_parser.ggs', line 134
108, // index 30 : <struct_options>, in file 'implementation_parser.ggs', line 190
113, // index 31 : <objref_option>, in file 'implementation_parser.ggs', line 205
117, // index 32 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
118, // index 33 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
121, // index 34 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
124, // index 35 : <select_goil_5F_syntax_0>, in file 'goil_syntax.ggs', line 95
127, // index 36 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
129, // index 37 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
131, // index 38 : <select_goil_5F_syntax_1>, in file 'goil_syntax.ggs', line 103
132, // index 39 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
133, // index 40 : <select_goil_5F_syntax_2>, in file 'goil_syntax.ggs', line 116
137, // index 41 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
138, // index 42 : <select_goil_5F_syntax_3>, in file 'goil_syntax.ggs', line 123
141, // index 43 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
142, // index 44 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
151, // index 45 : <select_goil_5F_syntax_4>, in file 'goil_syntax.ggs', line 156
154, // index 46 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
156, // index 47 : <select_goil_5F_syntax_5>, in file 'goil_syntax.ggs', line 199
158, // index 48 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
159, // index 49 : <select_goil_5F_syntax_6>, in file 'goil_syntax.ggs', line 211
162, // index 50 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
165, // index 51 : <select_goil_5F_syntax_7>, in file 'goil_syntax.ggs', line 234
171, // index 52 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
175, // index 53 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
178, // index 54 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
182, // index 55 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
185, // index 56 : <select_goil_5F_syntax_8>, in file 'goil_syntax.ggs', line 236
188, // index 57 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
192, // index 58 : <select_goil_5F_syntax_9>, in file 'goil_syntax.ggs', line 257
193, // index 59 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
196, // index 60 : <select_goil_5F_syntax_10>, in file 'goil_syntax.ggs', line 272
199, // index 61 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
203, // index 62 : <select_goil_5F_syntax_11>, in file 'goil_syntax.ggs', line 303
204, // index 63 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
206, // index 64 : <select_goil_5F_syntax_12>, in file 'goil_syntax.ggs', line 391
208, // index 65 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
210, // index 66 : <select_goil_5F_syntax_13>, in file 'goil_syntax.ggs', line 403
212, // index 67 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
213, // index 68 : <select_implementation_5F_parser_0>, in file 'implementation_parser.ggs', line 57
217, // index 69 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
220, // index 70 : <select_implementation_5F_parser_1>, in file 'implementation_parser.ggs', line 108
221, // index 71 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
222, // index 72 : <select_implementation_5F_parser_2>, in file 'implementation_parser.ggs', line 137
226, // index 73 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
229, // index 74 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
232, // index 75 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
235, // index 76 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
238, // index 77 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
241, // index 78 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
244, // index 79 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
247, // index 80 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
250, // index 81 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
253, // index 82 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
256, // index 83 : <select_implementation_5F_parser_3>, in file 'implementation_parser.ggs', line 165
259, // index 84 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
261, // index 85 : <select_implementation_5F_parser_4>, in file 'implementation_parser.ggs', line 194
262, // index 86 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
265, // index 87 : <select_implementation_5F_parser_5>, in file 'implementation_parser.ggs', line 233
267, // index 88 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
270, // index 89 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
273, // index 90 : <select_implementation_5F_parser_6>, in file 'implementation_parser.ggs', line 235
276, // index 91 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
284, // index 92 : <select_implementation_5F_parser_7>, in file 'implementation_parser.ggs', line 262
285, // index 93 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
287, // index 94 : <select_implementation_5F_parser_8>, in file 'implementation_parser.ggs', line 265
288, // index 95 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
290, // index 96 : <select_implementation_5F_parser_9>, in file 'implementation_parser.ggs', line 272
291, // index 97 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
295, // index 98 : <select_implementation_5F_parser_10>, in file 'implementation_parser.ggs', line 284
297, // index 99 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
299, // index 100 : <select_implementation_5F_parser_11>, in file 'implementation_parser.ggs', line 301
300, // index 101 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
301, // index 102 : <select_implementation_5F_parser_12>, in file 'implementation_parser.ggs', line 315
305, // index 103 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
308, // index 104 : <select_implementation_5F_parser_13>, in file 'implementation_parser.ggs', line 325
310, // index 105 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
313, // index 106 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
316, // index 107 : <select_implementation_5F_parser_14>, in file 'implementation_parser.ggs', line 327
319, // index 108 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
322, // index 109 : <select_implementation_5F_parser_15>, in file 'implementation_parser.ggs', line 362
324, // index 110 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
326, // index 111 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
329, // index 112 : <select_implementation_5F_parser_16>, in file 'implementation_parser.ggs', line 364
332, // index 113 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
335, // index 114 : <select_implementation_5F_parser_17>, in file 'implementation_parser.ggs', line 394
337, // index 115 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
340, // index 116 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
343, // index 117 : <select_implementation_5F_parser_18>, in file 'implementation_parser.ggs', line 396
346, // index 118 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
348, // index 119 : <select_implementation_5F_parser_19>, in file 'implementation_parser.ggs', line 419
349, // index 120 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
352, // index 121 : <select_implementation_5F_parser_20>, in file 'implementation_parser.ggs', line 431
355, // index 122 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
356, // index 123 : <select_implementation_5F_parser_21>, in file 'implementation_parser.ggs', line 447
360, // index 124 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
363, // index 125 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
366, // index 126 : <select_implementation_5F_parser_22>, in file 'implementation_parser.ggs', line 463
369, // index 127 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
372, // index 128 : <select_implementation_5F_parser_23>, in file 'implementation_parser.ggs', line 473
374, // index 129 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
377, // index 130 : <select_implementation_5F_parser_24>, in file 'implementation_parser.ggs', line 485
379, // index 131 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
383, // index 132 : <select_implementation_5F_parser_25>, in file 'implementation_parser.ggs', line 499
384, // index 133 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
387, // index 134 : <select_implementation_5F_parser_26>, in file 'implementation_parser.ggs', line 508
388 // index 135 : <>, in file '.ggs', line 0
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gFirstProductionIndexes_goil_grammar [75] = {
0, // at 0 : <implementation_definition>
1, // at 1 : <start>
2, // at 2 : <file>
3, // at 3 : <sign>
4, // at 4 : <description>
5, // at 5 : <OIL_version>
6, // at 6 : <application_definition>
7, // at 7 : <object_definition_list>
8, // at 8 : <boolean>
9, // at 9 : <oil_declaration_list>
10, // at 10 : <oil_declaration>
11, // at 11 : <include_file_level>
12, // at 12 : <include_cpu_level>
13, // at 13 : <implementation_objects>
14, // at 14 : <implementation_type>
15, // at 15 : <with_auto>
16, // at 16 : <int_or_float>
17, // at 17 : <set_followup>
18, // at 18 : <range>
19, // at 19 : <range_content>
20, // at 20 : <number_options>
21, // at 21 : <type_options>
22, // at 22 : <boolean_options>
23, // at 23 : <string_options>
24, // at 24 : <enum_item>
25, // at 25 : <enum_options>
26, // at 26 : <multiple>
27, // at 27 : <identifier_or_attribute>
28, // at 28 : <identifier_or_enum_value>
29, // at 29 : <implementation_list>
30, // at 30 : <struct_options>
31, // at 31 : <objref_option>
32, // at 32 : <select_goil_5F_syntax_0>
36, // at 33 : <select_goil_5F_syntax_1>
39, // at 34 : <select_goil_5F_syntax_2>
41, // at 35 : <select_goil_5F_syntax_3>
43, // at 36 : <select_goil_5F_syntax_4>
46, // at 37 : <select_goil_5F_syntax_5>
48, // at 38 : <select_goil_5F_syntax_6>
50, // at 39 : <select_goil_5F_syntax_7>
52, // at 40 : <select_goil_5F_syntax_8>
57, // at 41 : <select_goil_5F_syntax_9>
59, // at 42 : <select_goil_5F_syntax_10>
61, // at 43 : <select_goil_5F_syntax_11>
63, // at 44 : <select_goil_5F_syntax_12>
65, // at 45 : <select_goil_5F_syntax_13>
67, // at 46 : <select_implementation_5F_parser_0>
69, // at 47 : <select_implementation_5F_parser_1>
71, // at 48 : <select_implementation_5F_parser_2>
73, // at 49 : <select_implementation_5F_parser_3>
84, // at 50 : <select_implementation_5F_parser_4>
86, // at 51 : <select_implementation_5F_parser_5>
88, // at 52 : <select_implementation_5F_parser_6>
91, // at 53 : <select_implementation_5F_parser_7>
93, // at 54 : <select_implementation_5F_parser_8>
95, // at 55 : <select_implementation_5F_parser_9>
97, // at 56 : <select_implementation_5F_parser_10>
99, // at 57 : <select_implementation_5F_parser_11>
101, // at 58 : <select_implementation_5F_parser_12>
103, // at 59 : <select_implementation_5F_parser_13>
105, // at 60 : <select_implementation_5F_parser_14>
108, // at 61 : <select_implementation_5F_parser_15>
110, // at 62 : <select_implementation_5F_parser_16>
113, // at 63 : <select_implementation_5F_parser_17>
115, // at 64 : <select_implementation_5F_parser_18>
118, // at 65 : <select_implementation_5F_parser_19>
120, // at 66 : <select_implementation_5F_parser_20>
122, // at 67 : <select_implementation_5F_parser_21>
124, // at 68 : <select_implementation_5F_parser_22>
127, // at 69 : <select_implementation_5F_parser_23>
129, // at 70 : <select_implementation_5F_parser_24>
131, // at 71 : <select_implementation_5F_parser_25>
133, // at 72 : <select_implementation_5F_parser_26>
135, // at 73 : <>
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    L L ( 1 )    D E C I S I O N    T A B L E S                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gDecision_goil_grammar [] = {
// At index 0 : <implementation_definition> only one production, no choice
  -1,
// At index 1 : <start> only one production, no choice
  -1,
// At index 2 : <file> only one production, no choice
  -1,
// At index 3 : <sign> only one production, no choice
  -1,
// At index 4 : <description> only one production, no choice
  -1,
// At index 5 : <OIL_version> only one production, no choice
  -1,
// At index 6 : <application_definition> only one production, no choice
  -1,
// At index 7 : <object_definition_list> only one production, no choice
  -1,
// At index 8 : <boolean> only one production, no choice
  -1,
// At index 9 : <oil_declaration_list> only one production, no choice
  -1,
// At index 10 : <oil_declaration> only one production, no choice
  -1,
// At index 11 : <include_file_level> only one production, no choice
  -1,
// At index 12 : <include_cpu_level> only one production, no choice
  -1,
// At index 13 : <implementation_objects> only one production, no choice
  -1,
// At index 14 : <implementation_type> only one production, no choice
  -1,
// At index 15 : <with_auto> only one production, no choice
  -1,
// At index 16 : <int_or_float> only one production, no choice
  -1,
// At index 17 : <set_followup> only one production, no choice
  -1,
// At index 18 : <range> only one production, no choice
  -1,
// At index 19 : <range_content> only one production, no choice
  -1,
// At index 20 : <number_options> only one production, no choice
  -1,
// At index 21 : <type_options> only one production, no choice
  -1,
// At index 22 : <boolean_options> only one production, no choice
  -1,
// At index 23 : <string_options> only one production, no choice
  -1,
// At index 24 : <enum_item> only one production, no choice
  -1,
// At index 25 : <enum_options> only one production, no choice
  -1,
// At index 26 : <multiple> only one production, no choice
  -1,
// At index 27 : <identifier_or_attribute> only one production, no choice
  -1,
// At index 28 : <identifier_or_enum_value> only one production, no choice
  -1,
// At index 29 : <implementation_list> only one production, no choice
  -1,
// At index 30 : <struct_options> only one production, no choice
  -1,
// At index 31 : <objref_option> only one production, no choice
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 32 : <select_goil_5F_syntax_0>
C_Lexique_goil_5F_lexique::kToken_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_include, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_IMPLEMENTATION, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_CPU, -1, // Choice 4
  -1,
// At index 41 : <select_goil_5F_syntax_1>
C_Lexique_goil_5F_lexique::kToken__2D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2B_, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 3
  -1,
// At index 50 : <select_goil_5F_syntax_2>
C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, -1, // Choice 2
  -1,
// At index 57 : <select_goil_5F_syntax_3>
C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 64 : <select_goil_5F_syntax_4>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_include, -1, // Choice 3
  -1,
// At index 71 : <select_goil_5F_syntax_5>
C_Lexique_goil_5F_lexique::kToken_TRUE, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_FALSE, -1, // Choice 2
  -1,
// At index 76 : <select_goil_5F_syntax_6>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 81 : <select_goil_5F_syntax_7>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 86 : <select_goil_5F_syntax_8>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2D_, C_Lexique_goil_5F_lexique::kToken__2B_, C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_TRUE, C_Lexique_goil_5F_lexique::kToken_FALSE, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 4
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 5
  -1,
// At index 102 : <select_goil_5F_syntax_9>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 108 : <select_goil_5F_syntax_10>
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 2
  -1,
// At index 113 : <select_goil_5F_syntax_11>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 119 : <select_goil_5F_syntax_12>
C_Lexique_goil_5F_lexique::kToken_g_5F_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 124 : <select_goil_5F_syntax_13>
C_Lexique_goil_5F_lexique::kToken_g_5F_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 2
  -1,
// At index 129 : <select_implementation_5F_parser_0>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 134 : <select_implementation_5F_parser_1>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 2
  -1,
// At index 139 : <select_implementation_5F_parser_2>
C_Lexique_goil_5F_lexique::kToken__7D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, C_Lexique_goil_5F_lexique::kToken_UINT_33__32_, C_Lexique_goil_5F_lexique::kToken_INT_33__32_, C_Lexique_goil_5F_lexique::kToken_UINT_36__34_, C_Lexique_goil_5F_lexique::kToken_INT_36__34_, C_Lexique_goil_5F_lexique::kToken_FLOAT, C_Lexique_goil_5F_lexique::kToken_ENUM, C_Lexique_goil_5F_lexique::kToken_BOOLEAN, C_Lexique_goil_5F_lexique::kToken_STRING, C_Lexique_goil_5F_lexique::kToken_IDENTIFIER, C_Lexique_goil_5F_lexique::kToken_STRUCT, -1, // Choice 2
  -1,
// At index 154 : <select_implementation_5F_parser_3>
C_Lexique_goil_5F_lexique::kToken_UINT_33__32_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_INT_33__32_, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_UINT_36__34_, -1, // Choice 3
C_Lexique_goil_5F_lexique::kToken_INT_36__34_, -1, // Choice 4
C_Lexique_goil_5F_lexique::kToken_FLOAT, -1, // Choice 5
C_Lexique_goil_5F_lexique::kToken_ENUM, -1, // Choice 6
C_Lexique_goil_5F_lexique::kToken_BOOLEAN, -1, // Choice 7
C_Lexique_goil_5F_lexique::kToken_STRING, -1, // Choice 8
C_Lexique_goil_5F_lexique::kToken_IDENTIFIER, -1, // Choice 9
C_Lexique_goil_5F_lexique::kToken_STRUCT, -1, // Choice 10
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 11
  -1,
// At index 177 : <select_implementation_5F_parser_4>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 182 : <select_implementation_5F_parser_5>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 190 : <select_implementation_5F_parser_6>
C_Lexique_goil_5F_lexique::kToken_string, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 3
  -1,
// At index 197 : <select_implementation_5F_parser_7>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 202 : <select_implementation_5F_parser_8>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 207 : <select_implementation_5F_parser_9>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 2
  -1,
// At index 212 : <select_implementation_5F_parser_10>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 220 : <select_implementation_5F_parser_11>
C_Lexique_goil_5F_lexique::kToken__7B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 226 : <select_implementation_5F_parser_12>
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 231 : <select_implementation_5F_parser_13>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 239 : <select_implementation_5F_parser_14>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 3
  -1,
// At index 246 : <select_implementation_5F_parser_15>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 254 : <select_implementation_5F_parser_16>
C_Lexique_goil_5F_lexique::kToken__2D_, C_Lexique_goil_5F_lexique::kToken__2B_, C_Lexique_goil_5F_lexique::kToken_uint_5F_number, C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 3
  -1,
// At index 264 : <select_implementation_5F_parser_17>
C_Lexique_goil_5F_lexique::kToken__3D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3B_, C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 272 : <select_implementation_5F_parser_18>
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_NO_5F_DEFAULT, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_AUTO, -1, // Choice 3
  -1,
// At index 279 : <select_implementation_5F_parser_19>
C_Lexique_goil_5F_lexique::kToken_WITH_5F_AUTO, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 2
  -1,
// At index 285 : <select_implementation_5F_parser_20>
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 2
  -1,
// At index 290 : <select_implementation_5F_parser_21>
C_Lexique_goil_5F_lexique::kToken__5D_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 295 : <select_implementation_5F_parser_22>
C_Lexique_goil_5F_lexique::kToken_set_5F_start_5F_uint_5F_number, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_uint_5F_number, -1, // Choice 2
C_Lexique_goil_5F_lexique::kToken_float_5F_number, -1, // Choice 3
  -1,
// At index 302 : <select_implementation_5F_parser_23>
C_Lexique_goil_5F_lexique::kToken__2E__2E_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 308 : <select_implementation_5F_parser_24>
C_Lexique_goil_5F_lexique::kToken__2E__2E_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__5D_, C_Lexique_goil_5F_lexique::kToken__2C_, -1, // Choice 2
  -1,
// At index 314 : <select_implementation_5F_parser_25>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken_idf, -1, // Choice 2
  -1,
// At index 319 : <select_implementation_5F_parser_26>
C_Lexique_goil_5F_lexique::kToken__5B_, -1, // Choice 1
C_Lexique_goil_5F_lexique::kToken__3A_, C_Lexique_goil_5F_lexique::kToken__3D_, C_Lexique_goil_5F_lexique::kToken__3B_, -1, // Choice 2
  -1,
// At index 326 : <> only one production, no choice
  -1,
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gDecisionIndexes_goil_grammar [75] = {
0, // at 0 : <implementation_definition>
1, // at 1 : <start>
2, // at 2 : <file>
3, // at 3 : <sign>
4, // at 4 : <description>
5, // at 5 : <OIL_version>
6, // at 6 : <application_definition>
7, // at 7 : <object_definition_list>
8, // at 8 : <boolean>
9, // at 9 : <oil_declaration_list>
10, // at 10 : <oil_declaration>
11, // at 11 : <include_file_level>
12, // at 12 : <include_cpu_level>
13, // at 13 : <implementation_objects>
14, // at 14 : <implementation_type>
15, // at 15 : <with_auto>
16, // at 16 : <int_or_float>
17, // at 17 : <set_followup>
18, // at 18 : <range>
19, // at 19 : <range_content>
20, // at 20 : <number_options>
21, // at 21 : <type_options>
22, // at 22 : <boolean_options>
23, // at 23 : <string_options>
24, // at 24 : <enum_item>
25, // at 25 : <enum_options>
26, // at 26 : <multiple>
27, // at 27 : <identifier_or_attribute>
28, // at 28 : <identifier_or_enum_value>
29, // at 29 : <implementation_list>
30, // at 30 : <struct_options>
31, // at 31 : <objref_option>
32, // at 32 : <select_goil_5F_syntax_0>
41, // at 33 : <select_goil_5F_syntax_1>
50, // at 34 : <select_goil_5F_syntax_2>
57, // at 35 : <select_goil_5F_syntax_3>
64, // at 36 : <select_goil_5F_syntax_4>
71, // at 37 : <select_goil_5F_syntax_5>
76, // at 38 : <select_goil_5F_syntax_6>
81, // at 39 : <select_goil_5F_syntax_7>
86, // at 40 : <select_goil_5F_syntax_8>
102, // at 41 : <select_goil_5F_syntax_9>
108, // at 42 : <select_goil_5F_syntax_10>
113, // at 43 : <select_goil_5F_syntax_11>
119, // at 44 : <select_goil_5F_syntax_12>
124, // at 45 : <select_goil_5F_syntax_13>
129, // at 46 : <select_implementation_5F_parser_0>
134, // at 47 : <select_implementation_5F_parser_1>
139, // at 48 : <select_implementation_5F_parser_2>
154, // at 49 : <select_implementation_5F_parser_3>
177, // at 50 : <select_implementation_5F_parser_4>
182, // at 51 : <select_implementation_5F_parser_5>
190, // at 52 : <select_implementation_5F_parser_6>
197, // at 53 : <select_implementation_5F_parser_7>
202, // at 54 : <select_implementation_5F_parser_8>
207, // at 55 : <select_implementation_5F_parser_9>
212, // at 56 : <select_implementation_5F_parser_10>
220, // at 57 : <select_implementation_5F_parser_11>
226, // at 58 : <select_implementation_5F_parser_12>
231, // at 59 : <select_implementation_5F_parser_13>
239, // at 60 : <select_implementation_5F_parser_14>
246, // at 61 : <select_implementation_5F_parser_15>
254, // at 62 : <select_implementation_5F_parser_16>
264, // at 63 : <select_implementation_5F_parser_17>
272, // at 64 : <select_implementation_5F_parser_18>
279, // at 65 : <select_implementation_5F_parser_19>
285, // at 66 : <select_implementation_5F_parser_20>
290, // at 67 : <select_implementation_5F_parser_21>
295, // at 68 : <select_implementation_5F_parser_22>
302, // at 69 : <select_implementation_5F_parser_23>
308, // at 70 : <select_implementation_5F_parser_24>
314, // at 71 : <select_implementation_5F_parser_25>
319, // at 72 : <select_implementation_5F_parser_26>
326, // at 73 : <>
0} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'implementation_definition' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_implementation_5F_definition_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_definition_i0_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_implementation_5F_definition_ (GALGAS_implementation & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_definition_i0_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        'start' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_start_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_start_i0_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_start_ (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_start_i0_(inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
    C_Lexique_goil_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_goil_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
    if (scanner->sourceText () != NULL) {
      const bool ok = scanner->performTopDownParsing (gProductions_goil_grammar, gProductionNames_goil_grammar, gProductionIndexes_goil_grammar,
                                                      gFirstProductionIndexes_goil_grammar, gDecision_goil_grammar, gDecisionIndexes_goil_grammar, 388) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_goil_5F_grammar grammar ;
        grammar.nt_start_ (scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    C_Lexique_goil_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_goil_5F_lexique (inCompiler, sourceString, "" COMMA_HERE)) ;
    const bool ok = scanner->performTopDownParsing (gProductions_goil_grammar, gProductionNames_goil_grammar, gProductionIndexes_goil_grammar,
                                                    gFirstProductionIndexes_goil_grammar, gDecision_goil_grammar, gDecisionIndexes_goil_grammar, 388) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_goil_5F_grammar grammar ;
      grammar.nt_start_ (scanner) ;
    }
    macroDetachSharedObject (scanner) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         'file' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_file_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_file_i1_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_file_ (GALGAS_implementation & parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_file_i1_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         'sign' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_sign_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_sign_i2_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_sign_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_sign_i2_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'description' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_description_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_description_i3_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_description_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_description_i3_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'OIL_version' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_OIL_5F_version_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_OIL_5F_version_i4_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_OIL_5F_version_ (GALGAS_lstring & parameter_1,
                                GALGAS_lstring & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_OIL_5F_version_i4_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'application_definition' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_application_5F_definition_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_application_5F_definition_i5_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_application_5F_definition_ (const GALGAS_implementation parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_application_5F_definition_i5_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'object_definition_list' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_object_5F_definition_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_object_5F_definition_5F_list_i6_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_object_5F_definition_5F_list_ (const GALGAS_implementation parameter_1,
                                GALGAS_objectsMap & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_object_5F_definition_5F_list_i6_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'boolean' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_boolean_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_boolean_i7_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_boolean_ (GALGAS_lbool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_boolean_i7_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'oil_declaration_list' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_oil_5F_declaration_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_5F_list_i8_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_oil_5F_declaration_5F_list_ (const GALGAS_implementationObjectMap parameter_1,
                                GALGAS_objectAttributes & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_5F_list_i8_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'oil_declaration' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_oil_5F_declaration_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_i9_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_oil_5F_declaration_ (const GALGAS_implementationObjectMap parameter_1,
                                GALGAS_objectAttributes & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_oil_5F_declaration_i9_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'include_file_level' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_include_5F_file_5F_level_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_file_5F_level_i10_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_include_5F_file_5F_level_ (GALGAS_implementation & parameter_1,
                                GALGAS_applicationDefinition & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_file_5F_level_i10_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'include_cpu_level' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_include_5F_cpu_5F_level_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_cpu_5F_level_i11_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_include_5F_cpu_5F_level_ (const GALGAS_implementation parameter_1,
                                GALGAS_objectsMap & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_goil_5F_syntax_include_5F_cpu_5F_level_i11_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'implementation_objects' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_implementation_5F_objects_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_objects_i1_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_implementation_5F_objects_ (GALGAS_implementation & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_objects_i1_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'implementation_type' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_implementation_5F_type_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_type_i3_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_implementation_5F_type_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_type_i3_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'with_auto' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_with_5F_auto_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_with_5F_auto_i12_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_with_5F_auto_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_with_5F_auto_i12_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'int_or_float' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_int_5F_or_5F_float_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_int_5F_or_5F_float_i13_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_int_5F_or_5F_float_ (GALGAS_object_5F_t & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_int_5F_or_5F_float_i13_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'set_followup' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_set_5F_followup_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_set_5F_followup_i14_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_set_5F_followup_ (GALGAS_numberList & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_set_5F_followup_i14_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        'range' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_range_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_i16_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_range_ (GALGAS_attributeRange & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_i16_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'range_content' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_range_5F_content_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_5F_content_i15_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_range_5F_content_ (GALGAS_attributeRange & parameter_1,
                                const GALGAS_dataType parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_range_5F_content_i15_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'number_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_number_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_number_5F_options_i10_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_number_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                const GALGAS_dataType parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_number_5F_options_i10_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'type_options' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_type_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_type_5F_options_i11_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_type_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                const GALGAS_dataType parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_type_5F_options_i11_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'boolean_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_boolean_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_boolean_5F_options_i7_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_boolean_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_boolean_5F_options_i7_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'string_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_string_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_string_5F_options_i6_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_string_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_string_5F_options_i6_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'enum_item' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_enum_5F_item_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_item_i8_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_enum_5F_item_ (GALGAS_enumValues & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_item_i8_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'enum_options' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_enum_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_options_i9_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_enum_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_enum_5F_options_i9_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'multiple' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_multiple_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_multiple_i17_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_multiple_ (GALGAS_bool & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_multiple_i17_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'identifier_or_attribute' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_identifier_5F_or_5F_attribute_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_identifier_5F_or_5F_attribute_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'identifier_or_enum_value' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_identifier_5F_or_5F_enum_5F_value_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_identifier_5F_or_5F_enum_5F_value_ (GALGAS_lstring & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'implementation_list' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_implementation_5F_list_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_list_i2_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_implementation_5F_list_ (GALGAS_implementationObjectMap & parameter_1,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_implementation_5F_list_i2_(parameter_1, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'struct_options' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_struct_5F_options_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_struct_5F_options_i4_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_struct_5F_options_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_struct_5F_options_i4_(parameter_1, parameter_2, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'objref_option' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_goil_5F_grammar::nt_objref_5F_option_parse (C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_objref_5F_option_i5_parse(inLexique) ;
}

void cGrammar_goil_5F_grammar::nt_objref_5F_option_ (GALGAS_lstring & parameter_1,
                                GALGAS_impType & parameter_2,
                                GALGAS_lstring parameter_3,
                                C_Lexique_goil_5F_lexique * inLexique) {
  rule_implementation_5F_parser_objref_5F_option_i5_(parameter_1, parameter_2, parameter_3, inLexique) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_0' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_0 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_1' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_1 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_2' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_2 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_3' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_3 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_4' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_4 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_5' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_5 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_6' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_6 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_7' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_7 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_8' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_8 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_9' added non terminal implementation                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_9 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_10' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_10 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_11' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_11 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_12' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_12 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_goil_5F_syntax_13' added non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_goil_5F_syntax_13 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_0' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_0 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_1' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_1 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_2' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_2 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_3' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_3 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_4' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_4 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_5' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_5 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_6' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_6 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_7' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_7 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_8' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_8 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_9' added non terminal implementation                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_9 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_10' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_10 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_11' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_11 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_12' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_12 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_13' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_13 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_14' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_14 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_15' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_15 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_16' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_16 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_17' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_17 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_18' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_18 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_19' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_19 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_20' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_20 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_21' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_21 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_22' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_22 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_23' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_23 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_24' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_24 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_25' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_25 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       'select_implementation_5F_parser_26' added non terminal implementation                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_goil_5F_grammar::select_implementation_5F_parser_26 (C_Lexique_goil_5F_lexique * inLexique) {
  return inLexique->nextProductionIndex () ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'dummyFunction'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tfunction function_dummyFunction (C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tfunction result_fct ; // Returned variable
  result_fct = GALGAS_Tfunction::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 78))  COMMA_SOURCE_FILE ("template_semantics.galgas", 78)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 78)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("template_semantics.galgas", 78)) ;
//---
  return result_fct ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_dummyFunction [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_dummyFunction (C_Compiler * inCompiler,
                                                              const cObjectArray & /* inEffectiveParameterArray */,
                                                              const GALGAS_location & /* inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  return function_dummyFunction (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_dummyFunction ("dummyFunction",
                                                               functionWithGenericHeader_dummyFunction,
                                                               & kTypeDescriptor_GALGAS_Tfunction,
                                                               0,
                                                               functionArgs_dummyFunction) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'valueWithBool'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithBool (const GALGAS_bool & constinArgument_inValue,
                                      const GALGAS_lstring & constinArgument_description,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue.reader_sint_36__34_ (SOURCE_FILE ("template_semantics.galgas", 120)), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 123)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 124)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 125)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 119)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithBool [3] = {
  & kTypeDescriptor_GALGAS_bool,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithBool (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & /* §§ inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithBool (operand0,
                                 operand1,
                                 inCompiler
                                 COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithBool ("valueWithBool",
                                                               functionWithGenericHeader_valueWithBool,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               2,
                                                               functionArgs_valueWithBool) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'valueWithUnsigned'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithUnsigned (const GALGAS_uint_36__34_ & constinArgument_inValue,
                                          const GALGAS_lstring & constinArgument_description,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue.reader_sint_36__34_ (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 136)), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 139)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 140)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 141)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 135)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithUnsigned [3] = {
  & kTypeDescriptor_GALGAS_uint_36__34_,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithUnsigned (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & /* §§ inErrorLocation */
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_uint_36__34_ operand0 = GALGAS_uint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                           inCompiler
                                                                           COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithUnsigned (operand0,
                                     operand1,
                                     inCompiler
                                     COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithUnsigned ("valueWithUnsigned",
                                                                   functionWithGenericHeader_valueWithUnsigned,
                                                                   & kTypeDescriptor_GALGAS_Tvalue,
                                                                   2,
                                                                   functionArgs_valueWithUnsigned) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'valueWithSigned'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithSigned (const GALGAS_sint_36__34_ & constinArgument_inValue,
                                        const GALGAS_lstring & constinArgument_description,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue, GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 155)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 156)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 157)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 151)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithSigned [3] = {
  & kTypeDescriptor_GALGAS_sint_36__34_,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithSigned (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_sint_36__34_ operand0 = GALGAS_sint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                           inCompiler
                                                                           COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithSigned (operand0,
                                   operand1,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithSigned ("valueWithSigned",
                                                                 functionWithGenericHeader_valueWithSigned,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 2,
                                                                 functionArgs_valueWithSigned) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'valueWithFloat'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithFloat (const GALGAS_double & constinArgument_inValue,
                                       const GALGAS_lstring & constinArgument_description,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), constinArgument_inValue, GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 171)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 172)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 173)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 167)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithFloat [3] = {
  & kTypeDescriptor_GALGAS_double,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithFloat (C_Compiler * inCompiler,
                                                               const cObjectArray & inEffectiveParameterArray,
                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_double operand0 = GALGAS_double::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithFloat (operand0,
                                  operand1,
                                  inCompiler
                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithFloat ("valueWithFloat",
                                                                functionWithGenericHeader_valueWithFloat,
                                                                & kTypeDescriptor_GALGAS_Tvalue,
                                                                2,
                                                                functionArgs_valueWithFloat) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'valueWithString'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithString (const GALGAS_string & constinArgument_inValue,
                                        const GALGAS_lstring & constinArgument_description,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), constinArgument_inValue, GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 187)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 188)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 189)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 183)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithString [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithString (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithString (operand0,
                                   operand1,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithString ("valueWithString",
                                                                 functionWithGenericHeader_valueWithString,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 2,
                                                                 functionArgs_valueWithString) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'valueWithStruct'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithStruct (const GALGAS_TfieldMap & constinArgument_inValue,
                                        const GALGAS_lstring & constinArgument_description,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 203)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 205)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 199)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithStruct [3] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithStruct (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithStruct (operand0,
                                   operand1,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithStruct ("valueWithStruct",
                                                                 functionWithGenericHeader_valueWithStruct,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 2,
                                                                 functionArgs_valueWithStruct) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'valueWithMap'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithMap (const GALGAS_TfieldMap & constinArgument_inValue,
                                     const GALGAS_lstring & constinArgument_description,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 219)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 221)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 215)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithMap [3] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithMap (C_Compiler * inCompiler,
                                                             const cObjectArray & inEffectiveParameterArray,
                                                             const GALGAS_location & /* §§ inErrorLocation */
                                                             COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithMap (operand0,
                                operand1,
                                inCompiler
                                COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithMap ("valueWithMap",
                                                              functionWithGenericHeader_valueWithMap,
                                                              & kTypeDescriptor_GALGAS_Tvalue,
                                                              2,
                                                              functionArgs_valueWithMap) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'valueWithList'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithList (const GALGAS_TfieldMapList & constinArgument_inValue,
                                      const GALGAS_lstring & constinArgument_description,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), constinArgument_inValue, GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 236)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 237)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 231)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithList [3] = {
  & kTypeDescriptor_GALGAS_TfieldMapList,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithList (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & /* §§ inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMapList operand0 = GALGAS_TfieldMapList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                             inCompiler
                                                                             COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_valueWithList (operand0,
                                 operand1,
                                 inCompiler
                                 COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithList ("valueWithList",
                                                               functionWithGenericHeader_valueWithList,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               2,
                                                               functionArgs_valueWithList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'valueWithVoid'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithVoid (C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 249)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 250)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 251)), GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 252))  COMMA_SOURCE_FILE ("template_semantics.galgas", 252))  COMMA_SOURCE_FILE ("template_semantics.galgas", 245)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithVoid [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithVoid (C_Compiler * inCompiler,
                                                              const cObjectArray & /* inEffectiveParameterArray */,
                                                              const GALGAS_location & /* inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  return function_valueWithVoid (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithVoid ("valueWithVoid",
                                                               functionWithGenericHeader_valueWithVoid,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               0,
                                                               functionArgs_valueWithVoid) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'addBoolValue'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addBoolValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_bool constinArgument_inValue,
                           const GALGAS_lstring constinArgument_description,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_boolType (SOURCE_FILE ("template_semantics.galgas", 264)), function_valueWithBool (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 265)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 262)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'addUnsignedValue'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addUnsignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                               const GALGAS_lstring constinArgument_inVariableName,
                               const GALGAS_uint_36__34_ constinArgument_inValue,
                               const GALGAS_lstring constinArgument_description,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_semantics.galgas", 278)), function_valueWithUnsigned (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 279)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 276)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'addSignedValue'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addSignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_sint_36__34_ constinArgument_inValue,
                             const GALGAS_lstring constinArgument_description,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_semantics.galgas", 293)), function_valueWithSigned (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 294)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 291)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'addFloatValue'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addFloatValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                            const GALGAS_lstring constinArgument_inVariableName,
                            const GALGAS_double constinArgument_inValue,
                            const GALGAS_lstring constinArgument_description,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_floatType (SOURCE_FILE ("template_semantics.galgas", 308)), function_valueWithFloat (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 309)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 306)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'addLUnsignedValue'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addLUnsignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                const GALGAS_string constinArgument_inVariableName,
                                const GALGAS_luint_36__34_ constinArgument_inValue,
                                const GALGAS_lstring constinArgument_description,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  {
  routine_addUnsignedValue (ioArgument_ioTemplateVariableMap, GALGAS_lstring::constructor_new (constinArgument_inVariableName, constinArgument_inValue.reader_location (SOURCE_FILE ("template_semantics.galgas", 321))  COMMA_SOURCE_FILE ("template_semantics.galgas", 321)), constinArgument_inValue.reader_uint_36__34_ (SOURCE_FILE ("template_semantics.galgas", 321)), constinArgument_description, inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 321)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'addStringValue'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addStringValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_string constinArgument_inValue,
                             const GALGAS_lstring constinArgument_description,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_semantics.galgas", 333)), function_valueWithString (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 334)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 331)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'addLStringValue'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addLStringValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                              const GALGAS_string constinArgument_inVariableName,
                              const GALGAS_lstring constinArgument_inValue,
                              const GALGAS_lstring constinArgument_description,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  {
  routine_addStringValue (ioArgument_ioTemplateVariableMap, GALGAS_lstring::constructor_new (constinArgument_inVariableName, constinArgument_inValue.reader_location (SOURCE_FILE ("template_semantics.galgas", 346))  COMMA_SOURCE_FILE ("template_semantics.galgas", 346)), constinArgument_inValue.reader_string (SOURCE_FILE ("template_semantics.galgas", 346)), constinArgument_description, inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 346)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'addListValue'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addListValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_TfieldMapList constinArgument_inValue,
                           const GALGAS_lstring constinArgument_description,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_listType (SOURCE_FILE ("template_semantics.galgas", 358)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), constinArgument_inValue, GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_semantics.galgas", 359)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 359)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 359)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 356)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'addStructValue'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addStructValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_TfieldMap constinArgument_inValue,
                             const GALGAS_lstring constinArgument_description,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_semantics.galgas", 373)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_semantics.galgas", 374)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 374)), constinArgument_description  COMMA_SOURCE_FILE ("template_semantics.galgas", 374)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 371)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'addEnumValue'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addEnumValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_string constinArgument_inValue,
                           const GALGAS_lstring constinArgument_description,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_enumType (SOURCE_FILE ("template_semantics.galgas", 387)), function_valueWithString (constinArgument_inValue, constinArgument_description, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 388)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 385)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'printPath'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_printPath (const GALGAS_TvarPath constinArgument_path,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_TvarPath enumerator_10959 (constinArgument_path, kEnumeration_up) ;
  while (enumerator_10959.hasCurrentObject ()) {
    inCompiler->printMessage (enumerator_10959.current_item (HERE).reader_string (SOURCE_FILE ("template_semantics.galgas", 406))  COMMA_SOURCE_FILE ("template_semantics.galgas", 406)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_10959.current_key (HERE).reader_string (SOURCE_FILE ("template_semantics.galgas", 407)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->printMessage (GALGAS_string ("[\"").add_operation (enumerator_10959.current_key (HERE).reader_string (SOURCE_FILE ("template_semantics.galgas", 408)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 408)).add_operation (GALGAS_string ("\"]"), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 408))  COMMA_SOURCE_FILE ("template_semantics.galgas", 408)) ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_10959.current_idx (HERE).reader_sint (SOURCE_FILE ("template_semantics.galgas", 410)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 410)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->printMessage (GALGAS_string ("[").add_operation (enumerator_10959.current_idx (HERE).mAttribute_sint.reader_string (SOURCE_FILE ("template_semantics.galgas", 411)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 411)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 411))  COMMA_SOURCE_FILE ("template_semantics.galgas", 411)) ;
    }
    if (enumerator_10959.hasNextObject ()) {
      inCompiler->printMessage (GALGAS_string ("::")  COMMA_SOURCE_FILE ("template_semantics.galgas", 413)) ;
    }
    enumerator_10959.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Routine 'searchField'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_searchField (GALGAS_TvarPath inArgument_variable,
                          const GALGAS_TfieldMap constinArgument_inTemplateFieldMap,
                          GALGAS_Ttype & outArgument_variableType,
                          GALGAS_Tvalue & outArgument_variableValue,
                          GALGAS_location & outArgument_variableLocation,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_variableType.drop () ; // Release 'out' argument
  outArgument_variableValue.drop () ; // Release 'out' argument
  outArgument_variableLocation.drop () ; // Release 'out' argument
  GALGAS_lstring var_field ;
  GALGAS_lstring var_key ;
  GALGAS_lsint var_idx ;
  outArgument_variableLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 428)) ;
  {
  inArgument_variable.modifier_popFirst (var_field, var_key, var_idx, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 429)) ;
  }
  constinArgument_inTemplateFieldMap.method_searchKey (var_field, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 430)) ;
  const enumGalgasBool test_0 = constinArgument_inTemplateFieldMap.reader_hasKey (var_field.reader_string (SOURCE_FILE ("template_semantics.galgas", 431)) COMMA_SOURCE_FILE ("template_semantics.galgas", 431)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_variableLocation = constinArgument_inTemplateFieldMap.reader_locationForKey (var_field.reader_string (SOURCE_FILE ("template_semantics.galgas", 432)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 432)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE ("template_semantics.galgas", 434)).objectCompare (GALGAS_string::makeEmptyString ())).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_semantics.galgas", 434)))) COMMA_SOURCE_FILE ("template_semantics.galgas", 434)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_TfieldMap var_mapMap = outArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_semantics.galgas", 435)) ;
    var_mapMap.method_searchKey (var_key, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 436)) ;
    const enumGalgasBool test_2 = var_mapMap.reader_hasKey (var_key.reader_string (SOURCE_FILE ("template_semantics.galgas", 437)) COMMA_SOURCE_FILE ("template_semantics.galgas", 437)).boolEnum () ;
    if (kBoolTrue == test_2) {
      outArgument_variableLocation = var_mapMap.reader_locationForKey (var_key.reader_string (SOURCE_FILE ("template_semantics.galgas", 438)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 438)) ;
    }
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE ("template_semantics.galgas", 440)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 440)))).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE ("template_semantics.galgas", 440)))) COMMA_SOURCE_FILE ("template_semantics.galgas", 440)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_TfieldMapList var_mapList = outArgument_variableValue.reader_mMapListValue (SOURCE_FILE ("template_semantics.galgas", 441)) ;
      const enumGalgasBool test_4 = GALGAS_bool (kIsStrictInf, var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 442)).objectCompare (var_mapList.reader_length (SOURCE_FILE ("template_semantics.galgas", 442)))).boolEnum () ;
      if (kBoolTrue == test_4) {
        outArgument_variableValue.mAttribute_mStructValue = var_mapList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 443)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 443)) ;
        outArgument_variableType = GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_semantics.galgas", 444)) ;
      }else if (kBoolFalse == test_4) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 446)), GALGAS_string ("index: ").add_operation (var_idx.reader_sint (SOURCE_FILE ("template_semantics.galgas", 446)).reader_string (SOURCE_FILE ("template_semantics.galgas", 446)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 446)).add_operation (GALGAS_string (" >= length:"), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 446)).add_operation (var_mapList.reader_length (SOURCE_FILE ("template_semantics.galgas", 446)).reader_string (SOURCE_FILE ("template_semantics.galgas", 446)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 446))  COMMA_SOURCE_FILE ("template_semantics.galgas", 446)) ;
        outArgument_variableValue.drop () ; // Release error dropped variable
        outArgument_variableType.drop () ; // Release error dropped variable
      }
    }
  }
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, inArgument_variable.reader_length (SOURCE_FILE ("template_semantics.galgas", 449)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_semantics.galgas", 450)))).boolEnum () ;
    if (kBoolTrue == test_6) {
      {
      routine_searchField (inArgument_variable, outArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_semantics.galgas", 451)), outArgument_variableType, outArgument_variableValue, outArgument_variableLocation, inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 451)) ;
      }
    }else if (kBoolFalse == test_6) {
      outArgument_variableLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 453)) ;
      GALGAS_location location_7 (var_field.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("struct variable expected")  COMMA_SOURCE_FILE ("template_semantics.galgas", 454)) ;
      outArgument_variableValue.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'searchFieldIfExists'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_searchFieldIfExists (GALGAS_TvarPath inArgument_variable,
                                  const GALGAS_TfieldMap constinArgument_inTemplateFieldMap,
                                  GALGAS_Ttype & outArgument_variableType,
                                  GALGAS_Tvalue & outArgument_variableValue,
                                  GALGAS_bool & outArgument_found,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_variableType.drop () ; // Release 'out' argument
  outArgument_variableValue.drop () ; // Release 'out' argument
  outArgument_found.drop () ; // Release 'out' argument
  GALGAS_lstring var_field ;
  GALGAS_lstring var_key ;
  GALGAS_lsint var_idx ;
  {
  inArgument_variable.modifier_popFirst (var_field, var_key, var_idx, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 470)) ;
  }
  const enumGalgasBool test_0 = constinArgument_inTemplateFieldMap.reader_hasKey (var_field.reader_string (SOURCE_FILE ("template_semantics.galgas", 472)) COMMA_SOURCE_FILE ("template_semantics.galgas", 472)).boolEnum () ;
  if (kBoolTrue == test_0) {
    constinArgument_inTemplateFieldMap.method_searchKey (var_field, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 473)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE ("template_semantics.galgas", 474)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_semantics.galgas", 475)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        const enumGalgasBool test_3 = outArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_semantics.galgas", 476)).reader_hasKey (var_key.reader_string (SOURCE_FILE ("template_semantics.galgas", 476)) COMMA_SOURCE_FILE ("template_semantics.galgas", 476)).boolEnum () ;
        if (kBoolTrue == test_3) {
          outArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_semantics.galgas", 477)).method_searchKey (var_key, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 477)) ;
          outArgument_found = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_3) {
          outArgument_found = GALGAS_bool (false) ;
        }
      }else if (kBoolFalse == test_2) {
        GALGAS_location location_4 (var_key.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("a key is only used in a map")  COMMA_SOURCE_FILE ("template_semantics.galgas", 483)) ;
        outArgument_found.drop () ; // Release error dropped variable
      }
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE ("template_semantics.galgas", 485)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 485)))).boolEnum () ;
      if (kBoolTrue == test_5) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE ("template_semantics.galgas", 486)))).boolEnum () ;
        if (kBoolTrue == test_6) {
          const enumGalgasBool test_7 = GALGAS_bool (kIsStrictInf, var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 487)).objectCompare (outArgument_variableValue.reader_mMapListValue (SOURCE_FILE ("template_semantics.galgas", 487)).reader_length (SOURCE_FILE ("template_semantics.galgas", 487)))).boolEnum () ;
          if (kBoolTrue == test_7) {
            GALGAS_TfieldMapList var_mapList = outArgument_variableValue.reader_mMapListValue (SOURCE_FILE ("template_semantics.galgas", 488)) ;
            outArgument_variableValue.mAttribute_mStructValue = var_mapList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 489)), inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 489)) ;
            outArgument_variableType = GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_semantics.galgas", 490)) ;
            outArgument_found = GALGAS_bool (true) ;
          }else if (kBoolFalse == test_7) {
            outArgument_found = GALGAS_bool (false) ;
          }
        }else if (kBoolFalse == test_6) {
          GALGAS_location location_8 (var_idx.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("an index is only used in a list")  COMMA_SOURCE_FILE ("template_semantics.galgas", 496)) ;
          outArgument_found.drop () ; // Release error dropped variable
        }
      }else if (kBoolFalse == test_5) {
        outArgument_found = GALGAS_bool (true) ;
      }
    }
  }else if (kBoolFalse == test_0) {
    outArgument_variableType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE ("template_semantics.galgas", 502)) ;
    outArgument_variableValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE ("template_semantics.galgas", 503)) ;
    outArgument_found = GALGAS_bool (false) ;
  }
  const enumGalgasBool test_9 = GALGAS_bool (kIsStrictSup, inArgument_variable.reader_length (SOURCE_FILE ("template_semantics.galgas", 506)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (outArgument_found COMMA_SOURCE_FILE ("template_semantics.galgas", 506)).boolEnum () ;
  if (kBoolTrue == test_9) {
    const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_semantics.galgas", 507)))).boolEnum () ;
    if (kBoolTrue == test_10) {
      {
      routine_searchFieldIfExists (inArgument_variable, outArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_semantics.galgas", 508)), outArgument_variableType, outArgument_variableValue, outArgument_found, inCompiler  COMMA_SOURCE_FILE ("template_semantics.galgas", 508)) ;
      }
    }else if (kBoolFalse == test_10) {
      outArgument_found = GALGAS_bool (false) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'matchAndOperatorForTemplate'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_matchAndOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1177)), GALGAS_string ("operand type error : (").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1177)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1177)).add_operation (GALGAS_string (" & "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1177)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1178)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1178)).add_operation (GALGAS_string (") is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1178))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1177)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'matchOrOperatorForTemplate'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_matchOrOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                         GALGAS_Ttype & outArgument_outResultType,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1199)), GALGAS_string ("operand type error : (").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1199)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1199)).add_operation (GALGAS_string (" | "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1199)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1200)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1200)).add_operation (GALGAS_string (") is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1200))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1199)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'matchXorOperatorForTemplate'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_matchXorOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1221)), GALGAS_string ("operand type error : (").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1221)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1221)).add_operation (GALGAS_string (" | "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1221)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1222)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1222)).add_operation (GALGAS_string (") is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1222))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1221)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'checkNotOperatorForTemplate'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkNotOperatorForTemplate (const GALGAS_Ttype constinArgument_inOperandType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_Ttype::constructor_boolType (SOURCE_FILE ("template_expression_parser.galgas", 1236)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1237)), GALGAS_string ("the 'not' operator is not defined for an ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1238)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1237)).add_operation (GALGAS_string (" type"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1238))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1237)) ;
  }
  outArgument_outResultType = constinArgument_inOperandType ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Routine 'checkBitComplementOperatorForTemplate'                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkBitComplementOperatorForTemplate (const GALGAS_Ttype constinArgument_inOperandType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  outArgument_outResultType = constinArgument_inOperandType ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1253)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1254)), GALGAS_string ("the ~ operator is not defined for an ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1255)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1254)).add_operation (GALGAS_string (" type"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1255))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1254)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Routine 'comparison_types_checkForTemplate'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                      const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_enumType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_enumType)) {
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1274)), GALGAS_string ("comparison between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1274)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1274)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1274)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1275)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1275)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1275))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1274)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Routine 'magnitude_comparison_types_checkForTemplate'                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                                   const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1293)), GALGAS_string ("comparison between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1293)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1293)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1293)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1294)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1294)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1294))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1293)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Routine 'left_shift_types_checkForTemplate'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_left_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                         GALGAS_Ttype & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1312)), GALGAS_string ("shift between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1312)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1312)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1312)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1313)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1313)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1313))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1312)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    Routine 'right_shift_types_checkForTemplate'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_right_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                          GALGAS_Ttype & outArgument_outResultType,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1328)), GALGAS_string ("shift between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1328)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1328)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1328)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1329)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1329)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1329))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1328)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'addition_types_checkForTemplate'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_addition_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                    const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1348)), GALGAS_string ("addition between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1348)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1348)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1348)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1349)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1349)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1349))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1348)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Routine 'concatenation_types_checkForTemplate'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_concatenation_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                         GALGAS_Ttype & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_listType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_listType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1370)), GALGAS_string ("addition between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1370)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1370)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1370)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1371)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1371)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1371))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1370)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    Routine 'substraction_types_checkForTemplate'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_substraction_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                        const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                        GALGAS_Ttype & outArgument_outResultType,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1390)), GALGAS_string ("substraction between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1390)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1390)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1390)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1391)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1391)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1391))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1390)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'multiply_types_checkForTemplate'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_multiply_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                    const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1410)), GALGAS_string ("multiplication between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1410)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1410)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1410)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1411)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1411)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1411))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1410)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'divide_types_checkForTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_divide_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                  const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                  GALGAS_Ttype & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1430)), GALGAS_string ("division between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1430)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1430)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1430)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1431)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1431)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1431))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1430)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'modulo_types_checkForTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_modulo_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                  const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                  GALGAS_Ttype & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1450)), GALGAS_string ("modulo between ").add_operation (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1450)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1450)).add_operation (GALGAS_string (" and "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1450)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1451)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1451)).add_operation (GALGAS_string (" is not valid"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1451))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1450)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Function 'argumentListSignature'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_argumentListSignature (const GALGAS_TexpressionList & constinArgument_inParameterTypeList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" this method call has ") ;
  result_outResult.dotAssign_operation (constinArgument_inParameterTypeList.reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1466)).reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1466)).add_operation (GALGAS_string (" argument"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1466))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1466)) ;
  GALGAS_string temp_0 ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1467)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    temp_0 = GALGAS_string ("s") ;
  }else if (kBoolFalse == test_1) {
    temp_0 = GALGAS_string::makeEmptyString () ;
  }
  result_outResult.dotAssign_operation (temp_0  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1467)) ;
  cEnumerator_TexpressionList enumerator_51312 (constinArgument_inParameterTypeList, kEnumeration_up) ;
  const bool bool_2 = true ;
  if (enumerator_51312.hasCurrentObject () && bool_2) {
    result_outResult.dotAssign_operation (GALGAS_string (": ")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1469)) ;
    while (enumerator_51312.hasCurrentObject () && bool_2) {
      result_outResult.dotAssign_operation (categoryReader_messageGoilTemplateType (enumerator_51312.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1470))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1470)) ;
      enumerator_51312.gotoNextObject () ;
      if (enumerator_51312.hasCurrentObject () && bool_2) {
        result_outResult.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1471)) ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_argumentListSignature [2] = {
  & kTypeDescriptor_GALGAS_TexpressionList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_argumentListSignature (C_Compiler * inCompiler,
                                                                      const cObjectArray & inEffectiveParameterArray,
                                                                      const GALGAS_location & /* §§ inErrorLocation */
                                                                      COMMA_LOCATION_ARGS) {
  const GALGAS_TexpressionList operand0 = GALGAS_TexpressionList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                 inCompiler
                                                                                 COMMA_THERE) ;
  return function_argumentListSignature (operand0,
                                         inCompiler
                                         COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_argumentListSignature ("argumentListSignature",
                                                                       functionWithGenericHeader_argumentListSignature,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       1,
                                                                       functionArgs_argumentListSignature) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'checkInvocationHasNoArgument'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkInvocationHasNoArgument (const GALGAS_Ttype constinArgument_inType,
                                           const GALGAS_lstring constinArgument_inMethodName,
                                           const GALGAS_TexpressionList constinArgument_inParameterTypeList,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1485)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling '").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1486)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1486)).add_operation (GALGAS_string ("' on a "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1486)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1487)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1486)).add_operation (GALGAS_string (" type requires no argument; "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1487)).add_operation (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1488)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1487))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1486)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'checkInvocationHasArguments'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkInvocationHasArguments (const GALGAS_Ttype constinArgument_inType,
                                          const GALGAS_lstring constinArgument_inMethodName,
                                          const GALGAS_TexpressionList constinArgument_inParameterTypeList,
                                          const GALGAS_Ttype constinArgument_inExpectedType,
                                          const GALGAS_uint constinArgument_argsNumber,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype var_parameterType ;
  GALGAS_Tvalue joker_52435_0 ; // Joker input parameter
  constinArgument_inParameterTypeList.method_first (joker_52435_0, var_parameterType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1499)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1500)).objectCompare (constinArgument_argsNumber)).operator_or (GALGAS_bool (kIsNotEqual, var_parameterType.objectCompare (constinArgument_inExpectedType)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1500)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling '").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1501)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1501)).add_operation (GALGAS_string ("' on a "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1501)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1502)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1501)).add_operation (GALGAS_string (" type requires "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1502)).add_operation (constinArgument_argsNumber.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1502)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1502)).add_operation (GALGAS_string (" unsigned argument(s); "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1502)).add_operation (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1503)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1502))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1501)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Routine 'templateMethodInvocation'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_templateMethodInvocation (const GALGAS_Ttype constinArgument_inType,
                                       const GALGAS_Tvalue constinArgument_inValue,
                                       const GALGAS_lstring constinArgument_inMethodName,
                                       GALGAS_TexpressionList inArgument_inParameterTypeList,
                                       GALGAS_Ttype & outArgument_outResultType,
                                       GALGAS_Tvalue & outArgument_outResultValue,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  outArgument_outResultValue.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1520)).objectCompare (GALGAS_string ("description"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1521)) ;
    }
    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1522)) ;
    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mDescription (SOURCE_FILE ("template_expression_parser.galgas", 1523)).reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1523)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1523)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1523)) ;
  }else if (kBoolFalse == test_0) {
    if (constinArgument_inType.isValid ()) {
      switch (constinArgument_inType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1527)).objectCompare (GALGAS_string ("trueOrFalse"))).boolEnum () ;
        if (kBoolTrue == test_1) {
          {
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1528)) ;
          }
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1529)) ;
          GALGAS_string temp_2 ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1531)).objectCompare (GALGAS_sint_36__34_ ((int64_t) 0LL))).boolEnum () ;
          if (kBoolTrue == test_3) {
            temp_2 = GALGAS_string ("true") ;
          }else if (kBoolFalse == test_3) {
            temp_2 = GALGAS_string ("false") ;
          }
          outArgument_outResultValue = function_valueWithString (temp_2, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1532)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1530)) ;
        }else if (kBoolFalse == test_1) {
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1534)).objectCompare (GALGAS_string ("yesOrNo"))).boolEnum () ;
          if (kBoolTrue == test_4) {
            {
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1535)) ;
            }
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1536)) ;
            GALGAS_string temp_5 ;
            const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1538)).objectCompare (GALGAS_sint_36__34_ ((int64_t) 0LL))).boolEnum () ;
            if (kBoolTrue == test_6) {
              temp_5 = GALGAS_string ("yes") ;
            }else if (kBoolFalse == test_6) {
              temp_5 = GALGAS_string ("no") ;
            }
            outArgument_outResultValue = function_valueWithString (temp_5, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1539)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1537)) ;
          }else if (kBoolFalse == test_4) {
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1541)).objectCompare (GALGAS_string ("unsigned"))).boolEnum () ;
            if (kBoolTrue == test_7) {
              {
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1542)) ;
              }
              outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1543)) ;
              outArgument_outResultValue = constinArgument_inValue ;
            }else if (kBoolFalse == test_7) {
              GALGAS_location location_8 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_8, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1546)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1546)).add_operation (GALGAS_string (" template method is not defined"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1546))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1546)) ;
              outArgument_outResultValue.drop () ; // Release error dropped variable
              outArgument_outResultType.drop () ; // Release error dropped variable
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1549)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          {
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1550)) ;
          }
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1551)) ;
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1552)).reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1552)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1552)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1552)) ;
        }else if (kBoolFalse == test_9) {
          const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1553)).objectCompare (GALGAS_string ("hexString"))).boolEnum () ;
          if (kBoolTrue == test_10) {
            {
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1554)) ;
            }
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1555)) ;
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1556)).reader_uint_36__34_ (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1556)).reader_hexString (SOURCE_FILE ("template_expression_parser.galgas", 1556)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1556)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1556)) ;
          }else if (kBoolFalse == test_10) {
            const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1557)).objectCompare (GALGAS_string ("numberOfBytes"))).operator_or (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1557)).objectCompare (GALGAS_string ("signedNumberOfBytes"))) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1557)).boolEnum () ;
            if (kBoolTrue == test_11) {
              {
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1558)) ;
              }
              outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1559)) ;
              GALGAS_sint_36__34_ var_value = constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1560)) ;
              GALGAS_uint var_numberOfBytes = GALGAS_uint ((uint32_t) 1U) ;
              const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1563)).objectCompare (GALGAS_string ("signedNumberOfBytes"))).boolEnum () ;
              if (kBoolTrue == test_12) {
                var_value = var_value.multiply_operation (GALGAS_uint ((uint32_t) 2U).reader_sint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1564)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1564)) ;
              }
              GALGAS_uint var_count = GALGAS_uint ((uint32_t) 0U) ;
              if (GALGAS_uint ((uint32_t) 4U).isValid ()) {
                uint32_t variant_55718 = GALGAS_uint ((uint32_t) 4U).uintValue () ;
                bool loop_55718 = true ;
                while (loop_55718) {
                  loop_55718 = GALGAS_bool (kIsStrictInf, var_count.objectCompare (GALGAS_uint ((uint32_t) 4U))).isValid () ;
                  if (loop_55718) {
                    loop_55718 = GALGAS_bool (kIsStrictInf, var_count.objectCompare (GALGAS_uint ((uint32_t) 4U))).boolValue () ;
                  }
                  if (loop_55718 && (0 == variant_55718)) {
                    loop_55718 = false ;
                    inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_expression_parser.galgas", 1567)) ;
                  }
                  if (loop_55718) {
                    variant_55718 -- ;
                    GALGAS_sint_36__34_ var_maxValue = GALGAS_sint_36__34_ ((int64_t) 1LL).left_shift_operation (var_numberOfBytes.multiply_operation (GALGAS_uint ((uint32_t) 8U), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1569)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1569)).substract_operation (GALGAS_sint_36__34_ ((int64_t) 1LL), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1569)) ;
                    const enumGalgasBool test_13 = GALGAS_bool (kIsStrictInf, var_maxValue.objectCompare (var_value)).boolEnum () ;
                    if (kBoolTrue == test_13) {
                      var_numberOfBytes = var_numberOfBytes.multiply_operation (GALGAS_uint ((uint32_t) 2U), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1571)) ;
                    }
                    var_count.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1573)) ;
                  }
                }
              }
              outArgument_outResultValue = function_valueWithUnsigned (var_numberOfBytes.reader_uint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1575)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1575)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1575)) ;
            }else if (kBoolFalse == test_11) {
              const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1576)).objectCompare (GALGAS_string ("numberOfBits"))).operator_or (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1576)).objectCompare (GALGAS_string ("signedNumberOfBits"))) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1576)).boolEnum () ;
              if (kBoolTrue == test_14) {
                {
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1577)) ;
                }
                outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1578)) ;
                GALGAS_sint_36__34_ var_value = constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1579)) ;
                const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1580)).objectCompare (GALGAS_string ("signedNumberOfBits"))).boolEnum () ;
                if (kBoolTrue == test_15) {
                  var_value = var_value.multiply_operation (GALGAS_uint ((uint32_t) 2U).reader_sint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1581)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1581)) ;
                }
                GALGAS_sint_36__34_ var_numberOfBits = GALGAS_sint_36__34_ ((int64_t) 0LL) ;
                if (GALGAS_uint ((uint32_t) 64U).isValid ()) {
                  uint32_t variant_56491 = GALGAS_uint ((uint32_t) 64U).uintValue () ;
                  bool loop_56491 = true ;
                  while (loop_56491) {
                    loop_56491 = GALGAS_bool (kIsNotEqual, var_value.objectCompare (GALGAS_sint_36__34_ ((int64_t) 0LL))).isValid () ;
                    if (loop_56491) {
                      loop_56491 = GALGAS_bool (kIsNotEqual, var_value.objectCompare (GALGAS_sint_36__34_ ((int64_t) 0LL))).boolValue () ;
                    }
                    if (loop_56491 && (0 == variant_56491)) {
                      loop_56491 = false ;
                      inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_expression_parser.galgas", 1585)) ;
                    }
                    if (loop_56491) {
                      variant_56491 -- ;
                      var_numberOfBits.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1587)) ;
                      var_value = var_value.right_shift_operation (GALGAS_uint ((uint32_t) 1U) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1588)) ;
                    }
                  }
                }
                outArgument_outResultValue = function_valueWithSigned (var_numberOfBits, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1590)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1590)) ;
              }else if (kBoolFalse == test_14) {
                GALGAS_location location_16 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_16, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1592)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1592)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1592)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1592)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1592))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1592)) ;
                outArgument_outResultValue.drop () ; // Release error dropped variable
                outArgument_outResultType.drop () ; // Release error dropped variable
              }
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_stringType: {
        const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1595)).objectCompare (GALGAS_string ("HTMLRepresentation"))).boolEnum () ;
        if (kBoolTrue == test_17) {
          {
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1596)) ;
          }
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1597)) ;
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1598)).reader_HTMLRepresentation (SOURCE_FILE ("template_expression_parser.galgas", 1598)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1598)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1598)) ;
        }else if (kBoolFalse == test_17) {
          const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1599)).objectCompare (GALGAS_string ("identifierRepresentation"))).boolEnum () ;
          if (kBoolTrue == test_18) {
            {
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1600)) ;
            }
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1601)) ;
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1602)).reader_identifierRepresentation (SOURCE_FILE ("template_expression_parser.galgas", 1602)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1602)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1602)) ;
          }else if (kBoolFalse == test_18) {
            const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1603)).objectCompare (GALGAS_string ("fileExists"))).boolEnum () ;
            if (kBoolTrue == test_19) {
              {
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1604)) ;
              }
              outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE ("template_expression_parser.galgas", 1605)) ;
              outArgument_outResultValue = function_valueWithBool (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1606)).reader_fileExists (SOURCE_FILE ("template_expression_parser.galgas", 1606)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1606)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1606)) ;
            }else if (kBoolFalse == test_19) {
              const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1607)).objectCompare (GALGAS_string ("lowercaseString"))).boolEnum () ;
              if (kBoolTrue == test_20) {
                {
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1608)) ;
                }
                outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1609)) ;
                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1610)).reader_lowercaseString (SOURCE_FILE ("template_expression_parser.galgas", 1610)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1610)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1610)) ;
              }else if (kBoolFalse == test_20) {
                const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1611)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
                if (kBoolTrue == test_21) {
                  {
                  routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1612)) ;
                  }
                  outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1613)) ;
                  outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1614)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1614)).reader_uint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1614)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1614)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1614)) ;
                }else if (kBoolFalse == test_21) {
                  const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1615)).objectCompare (GALGAS_string ("stringByCapitalizingFirstCharacter"))).boolEnum () ;
                  if (kBoolTrue == test_22) {
                    {
                    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1616)) ;
                    }
                    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1617)) ;
                    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1618)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE ("template_expression_parser.galgas", 1618)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1618)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1618)) ;
                  }else if (kBoolFalse == test_22) {
                    const enumGalgasBool test_23 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1619)).objectCompare (GALGAS_string ("uppercaseString"))).boolEnum () ;
                    if (kBoolTrue == test_23) {
                      {
                      routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1620)) ;
                      }
                      outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1621)) ;
                      outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1622)).reader_uppercaseString (SOURCE_FILE ("template_expression_parser.galgas", 1622)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1622)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1622)) ;
                    }else if (kBoolFalse == test_23) {
                      const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1623)).objectCompare (GALGAS_string ("unsigned"))).boolEnum () ;
                      if (kBoolTrue == test_24) {
                        {
                        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1624)) ;
                        }
                        outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1625)) ;
                        outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1626)).reader_decimalUnsignedNumber (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1626)).reader_uint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1626)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1626)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1626)) ;
                      }else if (kBoolFalse == test_24) {
                        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1627)).objectCompare (GALGAS_string ("leftSubString"))).boolEnum () ;
                        if (kBoolTrue == test_25) {
                          {
                          routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1628)), GALGAS_uint ((uint32_t) 1U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1628)) ;
                          }
                          GALGAS_Tvalue var_parameter ;
                          GALGAS_Ttype joker_59431_0 ; // Joker input parameter
                          inArgument_inParameterTypeList.method_first (var_parameter, joker_59431_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1630)) ;
                          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1631)) ;
                          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1632)).reader_leftSubString (var_parameter.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1632)).reader_uint (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1632)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1632)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1632)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1632)) ;
                        }else if (kBoolFalse == test_25) {
                          const enumGalgasBool test_26 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1633)).objectCompare (GALGAS_string ("rightSubString"))).boolEnum () ;
                          if (kBoolTrue == test_26) {
                            {
                            routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1634)), GALGAS_uint ((uint32_t) 1U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1634)) ;
                            }
                            GALGAS_Tvalue var_parameter ;
                            GALGAS_Ttype joker_59842_0 ; // Joker input parameter
                            inArgument_inParameterTypeList.method_first (var_parameter, joker_59842_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1636)) ;
                            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1637)) ;
                            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1638)).reader_rightSubString (var_parameter.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1638)).reader_uint (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1638)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1638)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1638)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1638)) ;
                          }else if (kBoolFalse == test_26) {
                            const enumGalgasBool test_27 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1639)).objectCompare (GALGAS_string ("subString"))).boolEnum () ;
                            if (kBoolTrue == test_27) {
                              {
                              routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1640)), GALGAS_uint ((uint32_t) 2U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1640)) ;
                              }
                              GALGAS_Tvalue var_start = inArgument_inParameterTypeList.reader_mValueAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1641)) ;
                              GALGAS_Tvalue var_length = inArgument_inParameterTypeList.reader_mValueAtIndex (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1642)) ;
                              outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1645)) ;
                              outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1646)).reader_subString (var_start.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1646)).reader_uint (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1646)), var_length.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1646)).reader_uint (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1646)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1646)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1646)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1646)) ;
                            }else if (kBoolFalse == test_27) {
                              const enumGalgasBool test_28 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1647)).objectCompare (GALGAS_string ("reversedString"))).boolEnum () ;
                              if (kBoolTrue == test_28) {
                                {
                                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1648)) ;
                                }
                                outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1649)) ;
                                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1650)).reader_reversedString (SOURCE_FILE ("template_expression_parser.galgas", 1650)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1650)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1650)) ;
                              }else if (kBoolFalse == test_28) {
                                const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1651)).objectCompare (GALGAS_string ("componentsSeparatedByString"))).boolEnum () ;
                                if (kBoolTrue == test_29) {
                                  {
                                  routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1652)), GALGAS_uint ((uint32_t) 1U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1652)) ;
                                  }
                                  GALGAS_Tvalue var_separator ;
                                  GALGAS_Ttype joker_61074_0 ; // Joker input parameter
                                  inArgument_inParameterTypeList.method_first (var_separator, joker_61074_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1654)) ;
                                  GALGAS_stringlist var_stringlist = constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1655)).reader_componentsSeparatedByString (var_separator.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1655)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1655)) ;
                                  GALGAS_TfieldMapList var_result = GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_expression_parser.galgas", 1656)) ;
                                  cEnumerator_stringlist enumerator_61265 (var_stringlist, kEnumeration_up) ;
                                  while (enumerator_61265.hasCurrentObject ()) {
                                    GALGAS_TfieldMap var_item = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_expression_parser.galgas", 1658)) ;
                                    {
                                    routine_addStringValue (var_item, function_lstringWith (GALGAS_string ("VALUE"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1659)), enumerator_61265.current_mValue (HERE), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1659)), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1659)) ;
                                    }
                                    var_result.addAssign_operation (var_item  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1660)) ;
                                    enumerator_61265.gotoNextObject () ;
                                  }
                                  outArgument_outResultType = GALGAS_Ttype::constructor_listType (SOURCE_FILE ("template_expression_parser.galgas", 1662)) ;
                                  outArgument_outResultValue = function_valueWithList (var_result, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1663)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1663)) ;
                                }else if (kBoolFalse == test_29) {
                                  const enumGalgasBool test_30 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1664)).objectCompare (GALGAS_string ("interpretEscape"))).boolEnum () ;
                                  if (kBoolTrue == test_30) {
                                    {
                                    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1665)) ;
                                    }
                                    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1666)) ;
                                    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1667)).reader_stringByReplacingStringByString (GALGAS_string ("\\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1667)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1667)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1667)) ;
                                  }else if (kBoolFalse == test_30) {
                                    const enumGalgasBool test_31 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1668)).objectCompare (GALGAS_string ("columnPrefixedBy"))).boolEnum () ;
                                    if (kBoolTrue == test_31) {
                                      {
                                      routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1669)), GALGAS_uint ((uint32_t) 1U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1669)) ;
                                      }
                                      GALGAS_Tvalue var_separator ;
                                      GALGAS_Ttype joker_62091_0 ; // Joker input parameter
                                      inArgument_inParameterTypeList.method_first (var_separator, joker_62091_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1671)) ;
                                      outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1672)) ;
                                      outArgument_outResultValue = function_valueWithString (var_separator.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1673)).add_operation (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1673)).reader_stringByReplacingStringByString (GALGAS_string ("\n"), GALGAS_string ("\n").add_operation (var_separator.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1673)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1673)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1673)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1673)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1673)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1673)) ;
                                    }else if (kBoolFalse == test_31) {
                                      const enumGalgasBool test_32 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1674)).objectCompare (GALGAS_string ("wrap"))).boolEnum () ;
                                      if (kBoolTrue == test_32) {
                                        {
                                        routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1675)), GALGAS_uint ((uint32_t) 2U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1675)) ;
                                        }
                                        GALGAS_Tvalue var_width ;
                                        {
                                        GALGAS_Ttype joker_62642_0 ; // Joker input parameter
                                        inArgument_inParameterTypeList.modifier_popFirst (var_width, joker_62642_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1678)) ;
                                        }
                                        GALGAS_Tvalue var_shift ;
                                        {
                                        GALGAS_Ttype joker_62715_0 ; // Joker input parameter
                                        inArgument_inParameterTypeList.modifier_popFirst (var_shift, joker_62715_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1680)) ;
                                        }
                                        GALGAS_string var_stringshift = GALGAS_string::constructor_stringWithSequenceOfCharacters (GALGAS_char (TO_UNICODE (32)), var_shift.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1681)).reader_uint (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1681))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1681)) ;
                                        GALGAS_string var_result = constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1682)) ;
                                        GALGAS_stringlist var_paragraph = var_result.reader_componentsSeparatedByString (GALGAS_string ("\n") COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1691)) ;
                                        GALGAS_stringlist var_resultParagraph = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("template_expression_parser.galgas", 1692)) ;
                                        cEnumerator_stringlist enumerator_63380 (var_paragraph, kEnumeration_up) ;
                                        while (enumerator_63380.hasCurrentObject ()) {
                                          GALGAS_stringlist var_parts = enumerator_63380.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string (" ") COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1694)) ;
                                          GALGAS_sint_36__34_ var_linewidth = GALGAS_sint_36__34_ ((int64_t) 0LL) ;
                                          GALGAS_bool var_newline = GALGAS_bool (true) ;
                                          var_result = GALGAS_string::makeEmptyString () ;
                                          cEnumerator_stringlist enumerator_63580 (var_parts, kEnumeration_up) ;
                                          while (enumerator_63580.hasCurrentObject ()) {
                                            const enumGalgasBool test_33 = GALGAS_bool (kIsStrictSup, var_linewidth.add_operation (enumerator_63580.current_mValue (HERE).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1699)).reader_sint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1699)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1699)).objectCompare (var_width.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1699)))).boolEnum () ;
                                            if (kBoolTrue == test_33) {
                                              var_result.dotAssign_operation (GALGAS_string ("\n").add_operation (var_stringshift, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1700))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1700)) ;
                                              var_linewidth = var_shift.reader_mInt_36__34_Value (SOURCE_FILE ("template_expression_parser.galgas", 1701)) ;
                                              var_newline = GALGAS_bool (true) ;
                                            }
                                            const enumGalgasBool test_34 = GALGAS_bool (kIsEqual, var_newline.objectCompare (GALGAS_bool (false))).boolEnum () ;
                                            if (kBoolTrue == test_34) {
                                              var_linewidth = var_linewidth.add_operation (GALGAS_sint_36__34_ ((int64_t) 1LL), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1705)) ;
                                              var_result.dotAssign_operation (GALGAS_string (" ")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1706)) ;
                                            }
                                            var_linewidth = var_linewidth.add_operation (enumerator_63580.current_mValue (HERE).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1708)).reader_sint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1708)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1708)) ;
                                            var_result.dotAssign_operation (enumerator_63580.current_mValue (HERE)  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1709)) ;
                                            var_newline = GALGAS_bool (false) ;
                                            enumerator_63580.gotoNextObject () ;
                                          }
                                          var_resultParagraph.addAssign_operation (var_result  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1712)) ;
                                          enumerator_63380.gotoNextObject () ;
                                        }
                                        outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1714)) ;
                                        outArgument_outResultValue = function_valueWithString (GALGAS_string::constructor_componentsJoinedByString (var_resultParagraph, GALGAS_string ("\n")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1715)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1715)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1715)) ;
                                      }else if (kBoolFalse == test_32) {
                                        const enumGalgasBool test_35 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1716)).objectCompare (GALGAS_string ("substringExists"))).boolEnum () ;
                                        if (kBoolTrue == test_35) {
                                          {
                                          routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE ("template_expression_parser.galgas", 1717)), GALGAS_uint ((uint32_t) 1U), inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1717)) ;
                                          }
                                          GALGAS_Tvalue var_subString ;
                                          {
                                          GALGAS_Ttype joker_64489_0 ; // Joker input parameter
                                          inArgument_inParameterTypeList.modifier_popFirst (var_subString, joker_64489_0, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1718)) ;
                                          }
                                          GALGAS_uint var_start = GALGAS_uint ((uint32_t) 0U) ;
                                          GALGAS_uint var_stop = constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1720)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1720)).substract_operation (var_subString.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1720)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1720)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1720)) ;
                                          GALGAS_bool var_exists = GALGAS_bool (false) ;
                                          if (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1722)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1722)).isValid ()) {
                                            uint32_t variant_64647 = constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1722)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1722)).uintValue () ;
                                            bool loop_64647 = true ;
                                            while (loop_64647) {
                                              loop_64647 = GALGAS_bool (kIsInfOrEqual, var_start.objectCompare (var_stop)).isValid () ;
                                              if (loop_64647) {
                                                loop_64647 = GALGAS_bool (kIsInfOrEqual, var_start.objectCompare (var_stop)).boolValue () ;
                                              }
                                              if (loop_64647 && (0 == variant_64647)) {
                                                loop_64647 = false ;
                                                inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_expression_parser.galgas", 1722)) ;
                                              }
                                              if (loop_64647) {
                                                variant_64647 -- ;
                                                const enumGalgasBool test_36 = GALGAS_bool (kIsEqual, constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1724)).reader_subString (var_start, var_subString.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1724)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1724)) COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1724)).objectCompare (var_subString.reader_mStringValue (SOURCE_FILE ("template_expression_parser.galgas", 1724)))).boolEnum () ;
                                                if (kBoolTrue == test_36) {
                                                  var_exists = GALGAS_bool (true) ;
                                                }
                                                var_start.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1727)) ;
                                              }
                                            }
                                          }
                                          outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE ("template_expression_parser.galgas", 1729)) ;
                                          outArgument_outResultValue = function_valueWithBool (var_exists, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1730)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1730)) ;
                                        }else if (kBoolFalse == test_35) {
                                          GALGAS_location location_37 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                                          inCompiler->emitSemanticError (location_37, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1732)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1732)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1732)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1732)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1732))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1732)) ;
                                          outArgument_outResultValue.drop () ; // Release error dropped variable
                                          outArgument_outResultType.drop () ; // Release error dropped variable
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        GALGAS_location location_38 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_38, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1735)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1735)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1735)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1735)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1735))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1735)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_listType: {
        const enumGalgasBool test_39 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1737)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
        if (kBoolTrue == test_39) {
          {
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1738)) ;
          }
          outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1739)) ;
          outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_expression_parser.galgas", 1740)).reader_length (SOURCE_FILE ("template_expression_parser.galgas", 1740)).reader_uint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1740)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1740)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1740)) ;
        }else if (kBoolFalse == test_39) {
          const enumGalgasBool test_40 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1741)).objectCompare (GALGAS_string ("first"))).boolEnum () ;
          if (kBoolTrue == test_40) {
            {
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1742)) ;
            }
            outArgument_outResultType = GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_expression_parser.galgas", 1743)) ;
            GALGAS_TfieldMap var_firstElement ;
            constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_expression_parser.galgas", 1745)).method_first (var_firstElement, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1745)) ;
            outArgument_outResultValue = function_valueWithStruct (var_firstElement, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1746)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1746)) ;
          }else if (kBoolFalse == test_40) {
            const enumGalgasBool test_41 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1747)).objectCompare (GALGAS_string ("last"))).boolEnum () ;
            if (kBoolTrue == test_41) {
              {
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1748)) ;
              }
              outArgument_outResultType = GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_expression_parser.galgas", 1749)) ;
              GALGAS_TfieldMap var_lastElement ;
              constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_expression_parser.galgas", 1751)).method_last (var_lastElement, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1751)) ;
              outArgument_outResultValue = function_valueWithStruct (var_lastElement, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1752)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1752)) ;
            }else if (kBoolFalse == test_41) {
              GALGAS_location location_42 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_42, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1754)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1754)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1754)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1754)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1754))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1754)) ;
              outArgument_outResultValue.drop () ; // Release error dropped variable
              outArgument_outResultType.drop () ; // Release error dropped variable
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_mapType: {
        const enumGalgasBool test_43 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1757)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
        if (kBoolTrue == test_43) {
          {
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1758)) ;
          }
          outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_expression_parser.galgas", 1759)) ;
          outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStructValue (SOURCE_FILE ("template_expression_parser.galgas", 1760)).reader_count (SOURCE_FILE ("template_expression_parser.galgas", 1760)).reader_uint_36__34_ (SOURCE_FILE ("template_expression_parser.galgas", 1760)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1760)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1760)) ;
        }else if (kBoolFalse == test_43) {
          GALGAS_location location_44 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_44, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1762)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1762)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1762)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1762)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1762))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1762)) ;
          outArgument_outResultValue.drop () ; // Release error dropped variable
          outArgument_outResultType.drop () ; // Release error dropped variable
        }
        } break ;
      case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_structType: {
        GALGAS_location location_45 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_45, GALGAS_string ("the ").add_operation (constinArgument_inMethodName.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1765)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1765)).add_operation (GALGAS_string (" template method is not defined for "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1765)).add_operation (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1765)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1765))  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1765)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1767)), GALGAS_string ("internal error, unconstructed type found")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1767)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'typeError'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_typeError (const GALGAS_lstring constinArgument_inFunctionName,
                        const GALGAS_type constinArgument_inActualType,
                        const GALGAS_string constinArgument_inExpectedTypeName,
                        const GALGAS_uint constinArgument_inParameterIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_m = GALGAS_string ("the function requires the parameter ").add_operation (constinArgument_inParameterIndex.reader_string (SOURCE_FILE ("template_expression_parser.galgas", 1785)), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1785)).add_operation (GALGAS_string (" to be "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1785)).add_operation (constinArgument_inExpectedTypeName, inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1786)).add_operation (GALGAS_string ("; its type is "), inCompiler COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1786)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_m.dotAssign_operation (GALGAS_string ("boolean")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1788)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_m.dotAssign_operation (GALGAS_string ("unsigned")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1790)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_m.dotAssign_operation (GALGAS_string ("string")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1792)) ;
      }else if (kBoolFalse == test_2) {
        var_m.dotAssign_operation (GALGAS_string ("a not allowed type")  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1794)) ;
      }
    }
  }
  GALGAS_location location_3 (constinArgument_inFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_3, var_m  COMMA_SOURCE_FILE ("template_expression_parser.galgas", 1796)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'setVariableInPath'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_setVariableInPath (GALGAS_TvarPath inArgument_path,
                                GALGAS_TfieldMap & ioArgument_ioFieldMap,
                                const GALGAS_Ttype constinArgument_expressionType,
                                const GALGAS_Tvalue constinArgument_enumeratedValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring var_varName ;
  GALGAS_lstring var_key ;
  GALGAS_lsint var_idx ;
  {
  inArgument_path.modifier_popFirst (var_varName, var_key, var_idx, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1321)) ;
  }
  const enumGalgasBool test_0 = ioArgument_ioFieldMap.reader_hasKey (var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1323)) COMMA_SOURCE_FILE ("template_parser.galgas", 1323)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_Ttype var_fieldType ;
    GALGAS_Tvalue var_fieldValue ;
    ioArgument_ioFieldMap.method_searchKey (var_varName, var_fieldType, var_fieldValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1326)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_parser.galgas", 1327)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1329)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_TfieldMap var_items = var_fieldValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1331)) ;
        const enumGalgasBool test_3 = var_items.reader_hasKey (var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1332)) COMMA_SOURCE_FILE ("template_parser.galgas", 1332)).boolEnum () ;
        if (kBoolTrue == test_3) {
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1333)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_4) {
            {
            var_items.modifier_setMTypeForKey (constinArgument_expressionType, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1334)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1334)) ;
            }
            {
            var_items.modifier_setMValueForKey (constinArgument_enumeratedValue, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1335)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1335)) ;
            }
          }else if (kBoolFalse == test_4) {
            GALGAS_Ttype var_itemType ;
            GALGAS_Tvalue var_itemValue ;
            var_items.method_searchKey (var_key, var_itemType, var_itemValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1339)) ;
            GALGAS_TfieldMap var_nextFieldMap = var_itemValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1340)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1341)) ;
            }
            var_itemValue.mAttribute_mStructValue = var_nextFieldMap ;
            var_itemType = GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1343)) ;
            {
            var_items.modifier_setMTypeForKey (var_itemType, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1344)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1344)) ;
            }
            {
            var_items.modifier_setMValueForKey (var_itemValue, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1345)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1345)) ;
            }
          }
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1348)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            var_items.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1349)) ;
            }
          }else if (kBoolFalse == test_5) {
            GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1351)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1352)) ;
            }
            {
            var_items.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1353)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1353)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1353)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1353)) ;
            }
          }
        }
        var_fieldValue.mAttribute_mStructValue = var_items ;
        {
        ioArgument_ioFieldMap.modifier_setMTypeForKey (var_fieldType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1357)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1357)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1358)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1358)) ;
        }
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1360)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_6) {
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1362)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1362)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1363)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1363)) ;
          }
        }else if (kBoolFalse == test_6) {
          GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1366)) ;
          {
          routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1367)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1368)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1368)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1368)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1369)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1369)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1369)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1369)) ;
          }
        }
      }
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE ("template_parser.galgas", 1372)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE ("template_parser.galgas", 1374)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1374)))).boolEnum () ;
        if (kBoolTrue == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1375)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_9) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, constinArgument_expressionType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1376)))).boolEnum () ;
            if (kBoolTrue == test_10) {
              GALGAS_TfieldMapList var_theList = var_fieldValue.reader_mMapListValue (SOURCE_FILE ("template_parser.galgas", 1378)) ;
              {
              var_theList.modifier_setMMapAtIndex (constinArgument_enumeratedValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1379)), var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1379)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1379)) ;
              }
              var_fieldValue.mAttribute_mMapListValue = var_theList ;
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_11 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_11, GALGAS_string ("struct expression expected")  COMMA_SOURCE_FILE ("template_parser.galgas", 1383)) ;
            }
          }else if (kBoolFalse == test_9) {
            GALGAS_TfieldMapList var_theList = var_fieldValue.reader_mMapListValue (SOURCE_FILE ("template_parser.galgas", 1387)) ;
            GALGAS_TfieldMap var_nextFieldMap = var_theList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1388)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1388)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1389)) ;
            }
            {
            var_theList.modifier_setMMapAtIndex (var_nextFieldMap, var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1390)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1390)) ;
            }
            var_fieldValue.mAttribute_mMapListValue = var_theList ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (var_fieldType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1393)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1393)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1394)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1394)) ;
          }
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1397)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_12) {
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1399)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1399)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1400)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1400)) ;
            }
          }else if (kBoolFalse == test_12) {
            GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1403)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1404)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1405)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1405)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1405)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1406)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1406)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1406)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1406)) ;
            }
          }
        }
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1409)))).boolEnum () ;
        if (kBoolTrue == test_13) {
          const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1410)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_14) {
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1412)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1412)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1413)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1413)) ;
            }
          }else if (kBoolFalse == test_14) {
            GALGAS_TfieldMap var_nextFieldMap = var_fieldValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1416)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1417)) ;
            }
            var_fieldValue.mAttribute_mStructValue = var_nextFieldMap ;
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1420)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1420)) ;
            }
          }
        }else if (kBoolFalse == test_13) {
          const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1423)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_15) {
            const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE ("template_parser.galgas", 1424)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1424)))).boolEnum () ;
            if (kBoolTrue == test_16) {
              const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1425)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
              if (kBoolTrue == test_17) {
                {
                ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1427)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1427)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1428)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1428)) ;
                }
              }else if (kBoolFalse == test_17) {
                GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1430)) ;
                {
                routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1431)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1432)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1432)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1432)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1433)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1433)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1433)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1433)) ;
                }
              }
            }else if (kBoolFalse == test_16) {
              GALGAS_location location_18 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_18, GALGAS_string ("A list must exist before setting one of its item")  COMMA_SOURCE_FILE ("template_parser.galgas", 1437)) ;
            }
          }else if (kBoolFalse == test_15) {
            GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1441)) ;
            const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1442)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
            if (kBoolTrue == test_19) {
              {
              var_newMap.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1443)) ;
              }
            }else if (kBoolFalse == test_19) {
              GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1445)) ;
              {
              routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1446)) ;
              }
              {
              var_newMap.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1447)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1447)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1447)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1447)) ;
              }
            }
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_parser.galgas", 1449)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1449)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1449)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1450)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1450)), var_varName.reader_string (SOURCE_FILE ("template_parser.galgas", 1450)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1450)) ;
            }
          }
        }
      }
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE ("template_parser.galgas", 1455)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_20) {
      const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1456)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_21) {
        const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE ("template_parser.galgas", 1457)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1457)))).boolEnum () ;
        if (kBoolTrue == test_22) {
          {
          ioArgument_ioFieldMap.modifier_insertKey (var_varName, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1458)) ;
          }
        }else if (kBoolFalse == test_22) {
          GALGAS_location location_23 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_23, GALGAS_string ("A list must exist before setting one of its item")  COMMA_SOURCE_FILE ("template_parser.galgas", 1461)) ;
        }
      }else if (kBoolFalse == test_21) {
        GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1464)) ;
        {
        var_newMap.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1465)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_parser.galgas", 1466)), function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1466)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1466)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1466)) ;
        }
      }
    }else if (kBoolFalse == test_20) {
      const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE ("template_parser.galgas", 1469)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_24) {
        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE ("template_parser.galgas", 1470)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1470)))).boolEnum () ;
        if (kBoolTrue == test_25) {
          GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1471)) ;
          {
          routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1472)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1473)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1473)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1473)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1473)) ;
          }
        }else if (kBoolFalse == test_25) {
          GALGAS_location location_26 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_26, GALGAS_string ("A list must exist before setting one of its item")  COMMA_SOURCE_FILE ("template_parser.galgas", 1476)) ;
        }
      }else if (kBoolFalse == test_24) {
        GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1479)) ;
        GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE ("template_parser.galgas", 1480)) ;
        {
        routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1481)) ;
        }
        {
        var_newMap.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1482)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1482)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1482)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1482)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_mapType (SOURCE_FILE ("template_parser.galgas", 1483)), function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1483)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1483)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1483)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'printVariable'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_printVariable (GALGAS_uint inArgument_indent,
                            const GALGAS_Ttype constinArgument_variableType,
                            const GALGAS_Tvalue constinArgument_variableValue,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  inArgument_indent = inArgument_indent.add_operation (GALGAS_uint ((uint32_t) 4U), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1494)) ;
  GALGAS_string var_offset = GALGAS_string::constructor_stringWithSequenceOfCharacters (GALGAS_char (TO_UNICODE (32)), inArgument_indent  COMMA_SOURCE_FILE ("template_parser.galgas", 1495)) ;
  if (constinArgument_variableType.isValid ()) {
    switch (constinArgument_variableType.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_boolType: {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_variableValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1498)).objectCompare (GALGAS_sint_36__34_ ((int64_t) 1LL))).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->printMessage (var_offset.add_operation (GALGAS_string ("true\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1499))  COMMA_SOURCE_FILE ("template_parser.galgas", 1499)) ;
      }else if (kBoolFalse == test_0) {
        inCompiler->printMessage (var_offset.add_operation (GALGAS_string ("false\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1501))  COMMA_SOURCE_FILE ("template_parser.galgas", 1501)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_intType: {
      inCompiler->printMessage (var_offset.add_operation (constinArgument_variableValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1504)).reader_string (SOURCE_FILE ("template_parser.galgas", 1504)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1504)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1504))  COMMA_SOURCE_FILE ("template_parser.galgas", 1504)) ;
      } break ;
    case GALGAS_Ttype::kEnum_floatType: {
      inCompiler->printMessage (var_offset.add_operation (constinArgument_variableValue.reader_mFloatValue (SOURCE_FILE ("template_parser.galgas", 1506)).reader_string (SOURCE_FILE ("template_parser.galgas", 1506)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1506)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1506))  COMMA_SOURCE_FILE ("template_parser.galgas", 1506)) ;
      } break ;
    case GALGAS_Ttype::kEnum_stringType: {
      inCompiler->printMessage (var_offset.add_operation (GALGAS_string ("\""), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1508)).add_operation (constinArgument_variableValue.reader_mStringValue (SOURCE_FILE ("template_parser.galgas", 1508)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1508)).add_operation (GALGAS_string ("\"\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1508))  COMMA_SOURCE_FILE ("template_parser.galgas", 1508)) ;
      } break ;
    case GALGAS_Ttype::kEnum_enumType: {
      inCompiler->printMessage (var_offset.add_operation (constinArgument_variableValue.reader_mStringValue (SOURCE_FILE ("template_parser.galgas", 1510)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1510)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1510))  COMMA_SOURCE_FILE ("template_parser.galgas", 1510)) ;
      } break ;
    case GALGAS_Ttype::kEnum_listType: {
      cEnumerator_TfieldMapList enumerator_45930 (constinArgument_variableValue.reader_mMapListValue (SOURCE_FILE ("template_parser.galgas", 1512)), kEnumeration_up) ;
      GALGAS_uint index_45893 ((uint32_t) 0) ;
      while (enumerator_45930.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.add_operation (GALGAS_string ("item at "), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1513)).add_operation (index_45893.reader_string (SOURCE_FILE ("template_parser.galgas", 1513)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1513)).add_operation (GALGAS_string (":\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1513))  COMMA_SOURCE_FILE ("template_parser.galgas", 1513)) ;
        {
        routine_printVariable (inArgument_indent, GALGAS_Ttype::constructor_structType (SOURCE_FILE ("template_parser.galgas", 1514)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((int64_t) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE ("template_parser.galgas", 1514)), enumerator_45930.current_mMap (HERE), function_dummyFunction (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1514)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1514))  COMMA_SOURCE_FILE ("template_parser.galgas", 1514)), inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1514)) ;
        }
        enumerator_45930.gotoNextObject () ;
        index_45893.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1512)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_mapType: {
      cEnumerator_TfieldMap enumerator_46196 (constinArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1517)), kEnumeration_up) ;
      while (enumerator_46196.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.add_operation (enumerator_46196.current_lkey (HERE).reader_string (SOURCE_FILE ("template_parser.galgas", 1518)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1518)).add_operation (GALGAS_string (":\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1518))  COMMA_SOURCE_FILE ("template_parser.galgas", 1518)) ;
        {
        routine_printVariable (inArgument_indent, enumerator_46196.current_mType (HERE), enumerator_46196.current_mValue (HERE), inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1519)) ;
        }
        enumerator_46196.gotoNextObject () ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_structType: {
      cEnumerator_TfieldMap enumerator_46348 (constinArgument_variableValue.reader_mStructValue (SOURCE_FILE ("template_parser.galgas", 1522)), kEnumeration_up) ;
      while (enumerator_46348.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.add_operation (enumerator_46348.current_lkey (HERE).reader_string (SOURCE_FILE ("template_parser.galgas", 1523)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1523)).add_operation (GALGAS_string (":\n"), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1523))  COMMA_SOURCE_FILE ("template_parser.galgas", 1523)) ;
        {
        routine_printVariable (inArgument_indent, enumerator_46348.current_mType (HERE), enumerator_46348.current_mValue (HERE), inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1524)) ;
        }
        enumerator_46348.gotoNextObject () ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
      } break ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'structCompare'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint function_structCompare (const GALGAS_TfieldMap & constinArgument_s_31_,
                                    const GALGAS_TfieldMap & constinArgument_s_32_,
                                    GALGAS_sortingKeyList inArgument_fieldList,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint result_result ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, inArgument_fieldList.reader_length (SOURCE_FILE ("template_parser.galgas", 1542)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring var_field ;
    GALGAS_lsint var_order ;
    {
    inArgument_fieldList.modifier_popFirst (var_field, var_order, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1545)) ;
    }
    GALGAS_Ttype var_s_31_Type ;
    GALGAS_Tvalue var_s_31_Value ;
    constinArgument_s_31_.method_searchKey (var_field, var_s_31_Type, var_s_31_Value, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1548)) ;
    GALGAS_Ttype var_s_32_Type ;
    GALGAS_Tvalue var_s_32_Value ;
    constinArgument_s_32_.method_searchKey (var_field, var_s_32_Type, var_s_32_Value, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1551)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_s_31_Type.objectCompare (var_s_32_Type)).operator_and (GALGAS_bool (kIsEqual, var_s_31_Type.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE ("template_parser.galgas", 1552)))) COMMA_SOURCE_FILE ("template_parser.galgas", 1552)).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictInf, var_s_31_Value.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1554)).objectCompare (var_s_32_Value.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1554)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_result = GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1556)).multiply_operation (var_order.reader_sint (SOURCE_FILE ("template_parser.galgas", 1556)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1556)) ;
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_s_31_Value.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1558)).objectCompare (var_s_32_Value.reader_mInt_36__34_Value (SOURCE_FILE ("template_parser.galgas", 1558)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          result_result = GALGAS_sint ((int32_t) 1L).multiply_operation (var_order.reader_sint (SOURCE_FILE ("template_parser.galgas", 1560)), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1560)) ;
        }else if (kBoolFalse == test_3) {
          result_result = function_structCompare (constinArgument_s_31_, constinArgument_s_32_, inArgument_fieldList, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1563)) ;
        }
      }
    }else if (kBoolFalse == test_1) {
      GALGAS_location location_4 (var_field.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("unsigned sort key required")  COMMA_SOURCE_FILE ("template_parser.galgas", 1567)) ;
      result_result.drop () ; // Release error dropped variable
    }
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_sint ((int32_t) 0L) ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_structCompare [4] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_sortingKeyList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_structCompare (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & /* §§ inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_TfieldMap operand1 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_sortingKeyList operand2 = GALGAS_sortingKeyList::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                               inCompiler
                                                                               COMMA_THERE) ;
  return function_structCompare (operand0,
                                 operand1,
                                 operand2,
                                 inCompiler
                                 COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_structCompare ("structCompare",
                                                               functionWithGenericHeader_structCompare,
                                                               & kTypeDescriptor_GALGAS_sint,
                                                               3,
                                                               functionArgs_structCompare) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   Routine 'swap'                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_swap (GALGAS_TfieldMapList & ioArgument_t,
                   const GALGAS_uint constinArgument_index_31_,
                   const GALGAS_uint constinArgument_index_32_,
                   C_Compiler * inCompiler
                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_TfieldMap var_temp = ioArgument_t.reader_mMapAtIndex (constinArgument_index_31_, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1579)) ;
  {
  ioArgument_t.modifier_setMMapAtIndex (ioArgument_t.reader_mMapAtIndex (constinArgument_index_32_, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1580)), constinArgument_index_31_, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1580)) ;
  }
  {
  ioArgument_t.modifier_setMMapAtIndex (var_temp, constinArgument_index_32_, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1581)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'partition'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_partition (GALGAS_TfieldMapList & ioArgument_t,
                        GALGAS_uint inArgument_min,
                        GALGAS_uint inArgument_max,
                        const GALGAS_sortingKeyList constinArgument_fieldList,
                        GALGAS_uint & ioArgument_pivotIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_TfieldMap var_pivot = ioArgument_t.reader_mMapAtIndex (ioArgument_pivotIndex, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1590)) ;
  {
  routine_swap (ioArgument_t, ioArgument_pivotIndex, inArgument_max, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1591)) ;
  }
  GALGAS_uint var_storeIndex = inArgument_min ;
  GALGAS_uint var_i = inArgument_min ;
  if (inArgument_max.substract_operation (inArgument_min, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1594)).isValid ()) {
    uint32_t variant_48097 = inArgument_max.substract_operation (inArgument_min, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1594)).uintValue () ;
    bool loop_48097 = true ;
    while (loop_48097) {
      loop_48097 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (inArgument_max)).isValid () ;
      if (loop_48097) {
        loop_48097 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (inArgument_max)).boolValue () ;
      }
      if (loop_48097 && (0 == variant_48097)) {
        loop_48097 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_parser.galgas", 1594)) ;
      }
      if (loop_48097) {
        variant_48097 -- ;
        const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, function_structCompare (ioArgument_t.reader_mMapAtIndex (var_i, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1596)), var_pivot, constinArgument_fieldList, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1596)).objectCompare (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1596)))).boolEnum () ;
        if (kBoolTrue == test_0) {
          {
          routine_swap (ioArgument_t, var_i, var_storeIndex, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1597)) ;
          }
          var_storeIndex.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1598)) ;
        }
        var_i.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1600)) ;
      }
    }
  }
  {
  routine_swap (ioArgument_t, var_storeIndex, inArgument_max, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1602)) ;
  }
  ioArgument_pivotIndex = var_storeIndex ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'quickSort'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_quickSort (GALGAS_TfieldMapList & ioArgument_t,
                        const GALGAS_uint constinArgument_min,
                        const GALGAS_uint constinArgument_max,
                        const GALGAS_sortingKeyList constinArgument_fieldList,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, constinArgument_min.objectCompare (constinArgument_max)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_uint var_pivotIndex = constinArgument_max.add_operation (constinArgument_min, inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1613)).divide_operation (GALGAS_uint ((uint32_t) 2U), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1613)) ;
    {
    routine_partition (ioArgument_t, constinArgument_min, constinArgument_max, constinArgument_fieldList, var_pivotIndex, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1615)) ;
    }
    {
    routine_quickSort (ioArgument_t, constinArgument_min, var_pivotIndex, constinArgument_fieldList, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1616)) ;
    }
    {
    routine_quickSort (ioArgument_t, var_pivotIndex.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("template_parser.galgas", 1617)), constinArgument_max, constinArgument_fieldList, inCompiler  COMMA_SOURCE_FILE ("template_parser.galgas", 1617)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Once function 'allowedFunctions'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_allowedFunctions (C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outAllowedFunctionSet ; // Returned variable
  result_outAllowedFunctionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("template_invocation.galgas", 25)) ;
  result_outAllowedFunctionSet.addAssign_operation (GALGAS_string ("testFunction")  COMMA_SOURCE_FILE ("template_invocation.galgas", 26)) ;
  result_outAllowedFunctionSet.addAssign_operation (GALGAS_string ("tasks")  COMMA_SOURCE_FILE ("template_invocation.galgas", 27)) ;
  result_outAllowedFunctionSet.addAssign_operation (GALGAS_string ("trueFalse")  COMMA_SOURCE_FILE ("template_invocation.galgas", 28)) ;
  result_outAllowedFunctionSet.addAssign_operation (GALGAS_string ("yesNo")  COMMA_SOURCE_FILE ("template_invocation.galgas", 29)) ;
//---
  return result_outAllowedFunctionSet ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_allowedFunctions = false ;
static GALGAS_stringset gOnceFunctionResult_allowedFunctions ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset function_allowedFunctions (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_allowedFunctions) {
    gOnceFunctionResult_allowedFunctions = onceFunction_allowedFunctions (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_allowedFunctions = true ;
  }
  return gOnceFunctionResult_allowedFunctions ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_allowedFunctions (void) {
  gOnceFunctionResult_allowedFunctions.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_allowedFunctions (NULL,
                                                              releaseOnceFunctionResult_allowedFunctions) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_allowedFunctions [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_allowedFunctions (C_Compiler * inCompiler,
                                                                 const cObjectArray & /* inEffectiveParameterArray */,
                                                                 const GALGAS_location & /* inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  return function_allowedFunctions (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_allowedFunctions ("allowedFunctions",
                                                                  functionWithGenericHeader_allowedFunctions,
                                                                  & kTypeDescriptor_GALGAS_stringset,
                                                                  0,
                                                                  functionArgs_allowedFunctions) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'fullPrefix'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_fullPrefix (const GALGAS_TfieldMap & constinArgument_vars,
                                   const GALGAS_lstring & constinArgument_prefix,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_full ; // Returned variable
  GALGAS_string var_stringPrefix = constinArgument_prefix.reader_string (SOURCE_FILE ("template_invocation.galgas", 37)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_stringPrefix.objectCompare (GALGAS_string ("compiler"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_Ttype var_type ;
    GALGAS_Tvalue var_value ;
    constinArgument_vars.method_searchKey (function_lstringWith (GALGAS_string ("COMPILER"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 41)), var_type, var_value, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 41)) ;
    var_stringPrefix.dotAssign_operation (GALGAS_string ("/").add_operation (var_value.reader_mStringValue (SOURCE_FILE ("template_invocation.galgas", 42)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 42))  COMMA_SOURCE_FILE ("template_invocation.galgas", 42)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_stringPrefix.objectCompare (GALGAS_string ("linker"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_Ttype var_type ;
      GALGAS_Tvalue var_value ;
      constinArgument_vars.method_searchKey (function_lstringWith (GALGAS_string ("LINKER"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 46)), var_type, var_value, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 46)) ;
      var_stringPrefix.dotAssign_operation (GALGAS_string ("/").add_operation (var_value.reader_mStringValue (SOURCE_FILE ("template_invocation.galgas", 47)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 47))  COMMA_SOURCE_FILE ("template_invocation.galgas", 47)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_stringPrefix.objectCompare (GALGAS_string ("assembler"))).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_Ttype var_type ;
        GALGAS_Tvalue var_value ;
        constinArgument_vars.method_searchKey (function_lstringWith (GALGAS_string ("ASSEMBLER"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 51)), var_type, var_value, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 51)) ;
        var_stringPrefix.dotAssign_operation (GALGAS_string ("/").add_operation (var_value.reader_mStringValue (SOURCE_FILE ("template_invocation.galgas", 52)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 52))  COMMA_SOURCE_FILE ("template_invocation.galgas", 52)) ;
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_stringPrefix.objectCompare (GALGAS_string ("ROOT"))).boolEnum () ;
        if (kBoolTrue == test_3) {
          var_stringPrefix = GALGAS_string::makeEmptyString () ;
        }
      }
    }
  }
  result_full = var_stringPrefix ;
//---
  return result_full ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_fullPrefix [3] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_fullPrefix (C_Compiler * inCompiler,
                                                           const cObjectArray & inEffectiveParameterArray,
                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_fullPrefix (operand0,
                              operand1,
                              inCompiler
                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_fullPrefix ("fullPrefix",
                                                            functionWithGenericHeader_fullPrefix,
                                                            & kTypeDescriptor_GALGAS_string,
                                                            2,
                                                            functionArgs_fullPrefix) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'displayTypeAndValue'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_displayTypeAndValue (const GALGAS_Ttype & constinArgument_inType,
                                            const GALGAS_Tvalue & constinArgument_inValue,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (constinArgument_inType.isValid ()) {
    switch (constinArgument_inType.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_boolType: {
      GALGAS_string temp_0 ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_invocation.galgas", 72)).objectCompare (GALGAS_sint_36__34_ ((int64_t) 1LL))).boolEnum () ;
      if (kBoolTrue == test_1) {
        temp_0 = GALGAS_string ("yes") ;
      }else if (kBoolFalse == test_1) {
        temp_0 = GALGAS_string ("no") ;
      }
      result_outResult = GALGAS_string ("bool: ").add_operation (temp_0, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 72)) ;
      } break ;
    case GALGAS_Ttype::kEnum_intType: {
      result_outResult = GALGAS_string ("unsigned: ").add_operation (constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE ("template_invocation.galgas", 74)).reader_string (SOURCE_FILE ("template_invocation.galgas", 74)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 74)) ;
      } break ;
    case GALGAS_Ttype::kEnum_floatType: {
      result_outResult = GALGAS_string ("float: ").add_operation (constinArgument_inValue.reader_mFloatValue (SOURCE_FILE ("template_invocation.galgas", 76)).reader_string (SOURCE_FILE ("template_invocation.galgas", 76)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 76)) ;
      } break ;
    case GALGAS_Ttype::kEnum_stringType: {
      result_outResult = GALGAS_string ("string: '").add_operation (constinArgument_inValue.reader_mStringValue (SOURCE_FILE ("template_invocation.galgas", 78)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 78)).add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 78)) ;
      } break ;
    case GALGAS_Ttype::kEnum_listType: {
      GALGAS_string temp_2 ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_invocation.galgas", 80)).reader_length (SOURCE_FILE ("template_invocation.galgas", 80)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        temp_2 = GALGAS_string ("s") ;
      }else if (kBoolFalse == test_3) {
        temp_2 = GALGAS_string::makeEmptyString () ;
      }
      result_outResult = GALGAS_string ("list, ").add_operation (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_invocation.galgas", 80)).reader_length (SOURCE_FILE ("template_invocation.galgas", 80)).reader_string (SOURCE_FILE ("template_invocation.galgas", 80)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 80)).add_operation (GALGAS_string (" element"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 80)).add_operation (temp_2, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 80)).add_operation (GALGAS_string (":"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 80)) ;
      cEnumerator_TfieldMapList enumerator_3571 (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE ("template_invocation.galgas", 81)), kEnumeration_up) ;
      GALGAS_uint index_3540 ((uint32_t) 0) ;
      while (enumerator_3571.hasCurrentObject ()) {
        result_outResult.dotAssign_operation (GALGAS_string ("\n"
          "  #").add_operation (index_3540.reader_string (SOURCE_FILE ("template_invocation.galgas", 82)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 82)).add_operation (GALGAS_string (":"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 82))  COMMA_SOURCE_FILE ("template_invocation.galgas", 82)) ;
        cEnumerator_TfieldMap enumerator_3649 (enumerator_3571.current_mMap (HERE), kEnumeration_up) ;
        while (enumerator_3649.hasCurrentObject ()) {
          result_outResult.dotAssign_operation (GALGAS_string ("'").add_operation (enumerator_3649.current_lkey (HERE).reader_string (SOURCE_FILE ("template_invocation.galgas", 84)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 84)).add_operation (GALGAS_string ("' "), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 84))  COMMA_SOURCE_FILE ("template_invocation.galgas", 84)) ;
          if (enumerator_3649.current_mType (HERE).isValid ()) {
            switch (enumerator_3649.current_mType (HERE).enumValue ()) {
            case GALGAS_Ttype::kNotBuilt:
              break ;
            case GALGAS_Ttype::kEnum_boolType: {
              GALGAS_string temp_4 ;
              const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_3649.current_mValue (HERE).reader_mInt_36__34_Value (SOURCE_FILE ("template_invocation.galgas", 87)).objectCompare (GALGAS_sint_36__34_ ((int64_t) 1LL))).boolEnum () ;
              if (kBoolTrue == test_5) {
                temp_4 = GALGAS_string ("yes") ;
              }else if (kBoolFalse == test_5) {
                temp_4 = GALGAS_string ("no") ;
              }
              result_outResult.dotAssign_operation (GALGAS_string ("bool: ").add_operation (temp_4, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 87))  COMMA_SOURCE_FILE ("template_invocation.galgas", 87)) ;
              } break ;
            case GALGAS_Ttype::kEnum_intType: {
              result_outResult.dotAssign_operation (GALGAS_string ("unsigned: ").add_operation (enumerator_3649.current_mValue (HERE).reader_mInt_36__34_Value (SOURCE_FILE ("template_invocation.galgas", 89)).reader_string (SOURCE_FILE ("template_invocation.galgas", 89)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 89))  COMMA_SOURCE_FILE ("template_invocation.galgas", 89)) ;
              } break ;
            case GALGAS_Ttype::kEnum_floatType: {
              result_outResult.dotAssign_operation (GALGAS_string ("float: ").add_operation (enumerator_3649.current_mValue (HERE).reader_mFloatValue (SOURCE_FILE ("template_invocation.galgas", 91)).reader_string (SOURCE_FILE ("template_invocation.galgas", 91)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 91))  COMMA_SOURCE_FILE ("template_invocation.galgas", 91)) ;
              } break ;
            case GALGAS_Ttype::kEnum_stringType: {
              result_outResult.dotAssign_operation (GALGAS_string ("string: '").add_operation (enumerator_3649.current_mValue (HERE).reader_mStringValue (SOURCE_FILE ("template_invocation.galgas", 93)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 93)).add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 93))  COMMA_SOURCE_FILE ("template_invocation.galgas", 93)) ;
              } break ;
            case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
              } break ;
            case GALGAS_Ttype::kEnum_enumType: {
              } break ;
            case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
              inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 97)), GALGAS_string ("internal error, unconstructed type found")  COMMA_SOURCE_FILE ("template_invocation.galgas", 97)) ;
              } break ;
            }
          }
          if (enumerator_3649.hasNextObject ()) {
            result_outResult.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("template_invocation.galgas", 99)) ;
          }
          enumerator_3649.gotoNextObject () ;
        }
        enumerator_3571.gotoNextObject () ;
        index_3540.increment_operation (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 81)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_Ttype::kEnum_enumType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 107)), GALGAS_string ("internal error, unconstructed type found")  COMMA_SOURCE_FILE ("template_invocation.galgas", 107)) ;
      result_outResult.drop () ; // Release error dropped variable
      } break ;
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_displayTypeAndValue [3] = {
  & kTypeDescriptor_GALGAS_Ttype,
  & kTypeDescriptor_GALGAS_Tvalue,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_displayTypeAndValue (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_Ttype operand0 = GALGAS_Ttype::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                             inCompiler
                                                             COMMA_THERE) ;
  const GALGAS_Tvalue operand1 = GALGAS_Tvalue::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_displayTypeAndValue (operand0,
                                       operand1,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_displayTypeAndValue ("displayTypeAndValue",
                                                                     functionWithGenericHeader_displayTypeAndValue,
                                                                     & kTypeDescriptor_GALGAS_string,
                                                                     2,
                                                                     functionArgs_displayTypeAndValue) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'displayTemplateVariableMap'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_displayTemplateVariableMap (const GALGAS_TfieldMap constinArgument_inTemplateVariableMap,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_TfieldMap enumerator_4754 (constinArgument_inTemplateVariableMap, kEnumeration_up) ;
  while (enumerator_4754.hasCurrentObject ()) {
    inCompiler->printMessage (GALGAS_string ("'").add_operation (enumerator_4754.current_lkey (HERE).reader_string (SOURCE_FILE ("template_invocation.galgas", 116)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 116)).add_operation (GALGAS_string ("' "), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 116)).add_operation (function_displayTypeAndValue (enumerator_4754.current_mType (HERE), enumerator_4754.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 116)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 116)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 116))  COMMA_SOURCE_FILE ("template_invocation.galgas", 116)) ;
    enumerator_4754.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'displayPathList'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_displayPathList (const GALGAS_stringlist constinArgument_pathList,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  inCompiler->printMessage (GALGAS_string (" -----------------------------------------\n")  COMMA_SOURCE_FILE ("template_invocation.galgas", 122)) ;
  cEnumerator_stringlist enumerator_4972 (constinArgument_pathList, kEnumeration_up) ;
  while (enumerator_4972.hasCurrentObject ()) {
    inCompiler->printMessage (GALGAS_string (" - '").add_operation (enumerator_4972.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 124)).add_operation (GALGAS_string ("'\n"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 124))  COMMA_SOURCE_FILE ("template_invocation.galgas", 124)) ;
    enumerator_4972.gotoNextObject () ;
  }
  inCompiler->printMessage (GALGAS_string (" -----------------------------------------\n")  COMMA_SOURCE_FILE ("template_invocation.galgas", 126)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'findFileInHierarchy'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_findFileInHierarchy (const GALGAS_string constinArgument_file,
                                  const GALGAS_string constinArgument_rootPath,
                                  const GALGAS_string constinArgument_searchPath,
                                  GALGAS_stringlist & ioArgument_searchedPathList,
                                  GALGAS_bool & ioArgument_found,
                                  GALGAS_string & ioArgument_fullPath,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_partialPath = constinArgument_searchPath ;
  if (constinArgument_searchPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 139)).isValid ()) {
    uint32_t variant_5368 = constinArgument_searchPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 139)).uintValue () ;
    bool loop_5368 = true ;
    while (loop_5368) {
      loop_5368 = GALGAS_bool (kIsStrictSup, var_partialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 140)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (ioArgument_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 140)) COMMA_SOURCE_FILE ("template_invocation.galgas", 140)).isValid () ;
      if (loop_5368) {
        loop_5368 = GALGAS_bool (kIsStrictSup, var_partialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 140)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (ioArgument_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 140)) COMMA_SOURCE_FILE ("template_invocation.galgas", 140)).boolValue () ;
      }
      if (loop_5368 && (0 == variant_5368)) {
        loop_5368 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_invocation.galgas", 139)) ;
      }
      if (loop_5368) {
        variant_5368 -- ;
        GALGAS_string var_fullFilePath = constinArgument_rootPath.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 141)).add_operation (var_partialPath, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 141)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 141)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 141)) ;
        ioArgument_searchedPathList.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 142)) ;
        ioArgument_found = var_fullFilePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 143)) ;
        const enumGalgasBool test_0 = ioArgument_found.boolEnum () ;
        if (kBoolTrue == test_0) {
          ioArgument_fullPath = var_fullFilePath ;
        }else if (kBoolFalse == test_0) {
          var_partialPath = var_partialPath.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("template_invocation.galgas", 147)) ;
        }
      }
    }
  }
  const enumGalgasBool test_1 = ioArgument_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 150)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_string var_fullFilePath = constinArgument_rootPath.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 151)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 151)) ;
    ioArgument_searchedPathList.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 152)) ;
    ioArgument_found = var_fullFilePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 153)) ;
    const enumGalgasBool test_2 = ioArgument_found.boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_fullPath = var_fullFilePath ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Routine 'findAllFilesInHierarchy'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_findAllFilesInHierarchy (const GALGAS_string constinArgument_file,
                                      const GALGAS_string constinArgument_rootPath,
                                      const GALGAS_string constinArgument_searchPath,
                                      GALGAS_stringlist & ioArgument_searchedPathList,
                                      GALGAS_stringlist & ioArgument_fullPaths,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_partialPath = constinArgument_searchPath ;
  if (constinArgument_searchPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 169)).isValid ()) {
    uint32_t variant_6226 = constinArgument_searchPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 169)).uintValue () ;
    bool loop_6226 = true ;
    while (loop_6226) {
      loop_6226 = GALGAS_bool (kIsStrictSup, var_partialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 170)).objectCompare (GALGAS_uint ((uint32_t) 0U))).isValid () ;
      if (loop_6226) {
        loop_6226 = GALGAS_bool (kIsStrictSup, var_partialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 170)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolValue () ;
      }
      if (loop_6226 && (0 == variant_6226)) {
        loop_6226 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_invocation.galgas", 169)) ;
      }
      if (loop_6226) {
        variant_6226 -- ;
        GALGAS_string var_fullFilePath = constinArgument_rootPath.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 171)).add_operation (var_partialPath, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 171)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 171)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 171)) ;
        ioArgument_searchedPathList.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 172)) ;
        const enumGalgasBool test_0 = var_fullFilePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 173)).boolEnum () ;
        if (kBoolTrue == test_0) {
          ioArgument_fullPaths.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 174)) ;
        }
        GALGAS_string var_newPartialPath = var_partialPath.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("template_invocation.galgas", 176)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_newPartialPath.objectCompare (var_partialPath)).boolEnum () ;
        if (kBoolTrue == test_1) {
          var_partialPath = GALGAS_string::makeEmptyString () ;
        }else if (kBoolFalse == test_1) {
          var_partialPath = var_newPartialPath ;
        }
      }
    }
  }
  GALGAS_string var_fullFilePath = constinArgument_rootPath.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 183)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 183)) ;
  ioArgument_searchedPathList.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 184)) ;
  const enumGalgasBool test_2 = var_fullFilePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 185)).boolEnum () ;
  if (kBoolTrue == test_2) {
    ioArgument_fullPaths.addAssign_operation (var_fullFilePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 186)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'findFileInPathList'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_findFileInPathList (const GALGAS_string constinArgument_file,
                                 const GALGAS_stringlist constinArgument_rootPathList,
                                 const GALGAS_string constinArgument_searchPath,
                                 GALGAS_stringlist & outArgument_searchedPathList,
                                 GALGAS_bool & outArgument_found,
                                 GALGAS_string & outArgument_fullPath,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_searchedPathList.drop () ; // Release 'out' argument
  outArgument_found.drop () ; // Release 'out' argument
  outArgument_fullPath.drop () ; // Release 'out' argument
  outArgument_searchedPathList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("template_invocation.galgas", 199)) ;
  outArgument_found = GALGAS_bool (false) ;
  outArgument_fullPath = GALGAS_string::makeEmptyString () ;
  cEnumerator_stringlist enumerator_7214 (constinArgument_rootPathList, kEnumeration_up) ;
  while (enumerator_7214.hasCurrentObject ()) {
    {
    routine_findFileInHierarchy (constinArgument_file, enumerator_7214.current_mValue (HERE), constinArgument_searchPath, outArgument_searchedPathList, outArgument_found, outArgument_fullPath, inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 204)) ;
    }
    enumerator_7214.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Routine 'findAllFilesInPathList'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_findAllFilesInPathList (const GALGAS_string constinArgument_file,
                                     const GALGAS_stringlist constinArgument_rootPathList,
                                     const GALGAS_string constinArgument_searchPath,
                                     GALGAS_stringlist & outArgument_searchedPathList,
                                     GALGAS_stringlist & outArgument_fullPaths,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_searchedPathList.drop () ; // Release 'out' argument
  outArgument_fullPaths.drop () ; // Release 'out' argument
  outArgument_searchedPathList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("template_invocation.galgas", 223)) ;
  outArgument_fullPaths = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("template_invocation.galgas", 224)) ;
  cEnumerator_stringlist enumerator_7735 (constinArgument_rootPathList, kEnumeration_up) ;
  while (enumerator_7735.hasCurrentObject ()) {
    {
    routine_findAllFilesInHierarchy (constinArgument_file, enumerator_7735.current_mValue (HERE), constinArgument_searchPath, outArgument_searchedPathList, outArgument_fullPaths, inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 227)) ;
    }
    enumerator_7735.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'templateInvocation'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_templateInvocation (const GALGAS_lstring constinArgument_inTemplateName,
                                 const GALGAS_string constinArgument_inPrefix,
                                 const GALGAS_string constinArgument_inPath,
                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                 const GALGAS_bool constinArgument_inErrorIfNotFound,
                                 const GALGAS_TfieldMap constinArgument_inTemplateVariableMap,
                                 GALGAS_string & ioArgument_ioResultingString,
                                 GALGAS_bool & outArgument_outNoErrorOccured,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outNoErrorOccured.drop () ; // Release 'out' argument
  outArgument_outNoErrorOccured = GALGAS_bool (true) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("template_invocation.galgas", 249)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_templateDir = constinArgument_inTemplateDirectory ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_templateDir.reader_length (SOURCE_FILE ("template_invocation.galgas", 251)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (constinArgument_inTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '--goil-templates' option or the environment variable GOIL_TEMPLATES is required for generating code")  COMMA_SOURCE_FILE ("template_invocation.galgas", 252)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_3 = var_templateDir.reader_directoryExists (SOURCE_FILE ("template_invocation.galgas", 253)).operator_not (SOURCE_FILE ("template_invocation.galgas", 253)).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (constinArgument_inTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the template path '").add_operation (var_templateDir, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 254)).add_operation (GALGAS_string ("' exists but is not a valid directory path"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 254))  COMMA_SOURCE_FILE ("template_invocation.galgas", 254)) ;
      }else if (kBoolFalse == test_3) {
        GALGAS_string var_targetDir = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()) ;
        GALGAS_string var_fullTemplateDir ;
        const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, constinArgument_inPrefix.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_5) {
          var_fullTemplateDir = var_templateDir ;
        }else if (kBoolFalse == test_5) {
          var_fullTemplateDir = var_templateDir.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 261)).add_operation (constinArgument_inPrefix, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 261)) ;
        }
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_targetDir.reader_length (SOURCE_FILE ("template_invocation.galgas", 263)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_6) {
          GALGAS_location location_7 (constinArgument_inTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_7, GALGAS_string ("the '--target' (or '-t') option is required for generating code")  COMMA_SOURCE_FILE ("template_invocation.galgas", 264)) ;
        }else if (kBoolFalse == test_6) {
          const enumGalgasBool test_8 = var_fullTemplateDir.reader_directoryExists (SOURCE_FILE ("template_invocation.galgas", 265)).operator_not (SOURCE_FILE ("template_invocation.galgas", 265)).boolEnum () ;
          if (kBoolTrue == test_8) {
            GALGAS_location location_9 (constinArgument_inTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_9, GALGAS_string ("internal. no '").add_operation (var_fullTemplateDir, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 266)).add_operation (GALGAS_string ("' template found"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 266))  COMMA_SOURCE_FILE ("template_invocation.galgas", 266)) ;
          }else if (kBoolFalse == test_8) {
            GALGAS_stringlist var_pathList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("template_invocation.galgas", 273)) ;
            GALGAS_bool var_found = GALGAS_bool (false) ;
            const enumGalgasBool test_10 = GALGAS_bool (kIsNotEqual, constinArgument_inPath.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_10) {
              GALGAS_string var_userTemplateDir ;
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, constinArgument_inPrefix.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
              if (kBoolTrue == test_11) {
                var_userTemplateDir = constinArgument_inPath ;
              }else if (kBoolFalse == test_11) {
                var_userTemplateDir = constinArgument_inPath.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 280)).add_operation (constinArgument_inPrefix, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 280)) ;
              }
              GALGAS_string var_fullTemplatePath = var_userTemplateDir.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 282)).add_operation (constinArgument_inTemplateName.reader_string (SOURCE_FILE ("template_invocation.galgas", 282)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 282)).add_operation (GALGAS_string (".goilTemplate"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 282)) ;
              var_pathList.addAssign_operation (var_fullTemplatePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 283)) ;
              var_found = var_fullTemplatePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 284)) ;
              const enumGalgasBool test_12 = var_found.boolEnum () ;
              if (kBoolTrue == test_12) {
                GALGAS_Tvalue joker_10268_0 ; // Joker input parameter
                GALGAS_Ttype joker_10271_0 ; // Joker input parameter
                cGrammar_template_5F_grammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_fullTemplatePath, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 287))  COMMA_SOURCE_FILE ("template_invocation.galgas", 287)), constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inTemplateVariableMap, ioArgument_ioResultingString, joker_10268_0, joker_10271_0  COMMA_SOURCE_FILE ("template_invocation.galgas", 287)) ;
              }
            }
            GALGAS_string var_targetTemplatePartialPath = var_targetDir ;
            if (var_targetDir.reader_length (SOURCE_FILE ("template_invocation.galgas", 291)).isValid ()) {
              uint32_t variant_10365 = var_targetDir.reader_length (SOURCE_FILE ("template_invocation.galgas", 291)).uintValue () ;
              bool loop_10365 = true ;
              while (loop_10365) {
                loop_10365 = GALGAS_bool (kIsStrictSup, var_targetTemplatePartialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 292)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (var_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 292)) COMMA_SOURCE_FILE ("template_invocation.galgas", 292)).isValid () ;
                if (loop_10365) {
                  loop_10365 = GALGAS_bool (kIsStrictSup, var_targetTemplatePartialPath.reader_length (SOURCE_FILE ("template_invocation.galgas", 292)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (var_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 292)) COMMA_SOURCE_FILE ("template_invocation.galgas", 292)).boolValue () ;
                }
                if (loop_10365 && (0 == variant_10365)) {
                  loop_10365 = false ;
                  inCompiler->loopRunTimeVariantError (SOURCE_FILE ("template_invocation.galgas", 291)) ;
                }
                if (loop_10365) {
                  variant_10365 -- ;
                  GALGAS_string var_fullTemplatePath = var_fullTemplateDir.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 294)).add_operation (var_targetTemplatePartialPath, inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 294)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 294)).add_operation (constinArgument_inTemplateName.reader_string (SOURCE_FILE ("template_invocation.galgas", 294)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 294)).add_operation (GALGAS_string (".goilTemplate"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 294)) ;
                  var_pathList.addAssign_operation (var_fullTemplatePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 295)) ;
                  var_found = var_fullTemplatePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 296)) ;
                  const enumGalgasBool test_13 = var_found.boolEnum () ;
                  if (kBoolTrue == test_13) {
                    GALGAS_Tvalue joker_10923_0 ; // Joker input parameter
                    GALGAS_Ttype joker_10926_0 ; // Joker input parameter
                    cGrammar_template_5F_grammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_fullTemplatePath, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 299))  COMMA_SOURCE_FILE ("template_invocation.galgas", 299)), constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inTemplateVariableMap, ioArgument_ioResultingString, joker_10923_0, joker_10926_0  COMMA_SOURCE_FILE ("template_invocation.galgas", 299)) ;
                  }else if (kBoolFalse == test_13) {
                    var_targetTemplatePartialPath = var_targetTemplatePartialPath.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("template_invocation.galgas", 301)) ;
                  }
                }
              }
            }
            const enumGalgasBool test_14 = var_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 304)).boolEnum () ;
            if (kBoolTrue == test_14) {
              GALGAS_string var_fullTemplatePath = var_fullTemplateDir.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 305)).add_operation (constinArgument_inTemplateName.reader_string (SOURCE_FILE ("template_invocation.galgas", 305)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 305)).add_operation (GALGAS_string (".goilTemplate"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 305)) ;
              var_pathList.addAssign_operation (var_fullTemplatePath  COMMA_SOURCE_FILE ("template_invocation.galgas", 306)) ;
              var_found = var_fullTemplatePath.reader_fileExists (SOURCE_FILE ("template_invocation.galgas", 307)) ;
              const enumGalgasBool test_15 = var_found.boolEnum () ;
              if (kBoolTrue == test_15) {
                GALGAS_Tvalue joker_11521_0 ; // Joker input parameter
                GALGAS_Ttype joker_11524_0 ; // Joker input parameter
                cGrammar_template_5F_grammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_fullTemplatePath, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_invocation.galgas", 310))  COMMA_SOURCE_FILE ("template_invocation.galgas", 310)), constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inTemplateVariableMap, ioArgument_ioResultingString, joker_11521_0, joker_11524_0  COMMA_SOURCE_FILE ("template_invocation.galgas", 310)) ;
              }
            }
            const enumGalgasBool test_16 = var_found.operator_not (SOURCE_FILE ("template_invocation.galgas", 313)).boolEnum () ;
            if (kBoolTrue == test_16) {
              outArgument_outNoErrorOccured = GALGAS_bool (false) ;
              const enumGalgasBool test_17 = constinArgument_inErrorIfNotFound.boolEnum () ;
              if (kBoolTrue == test_17) {
                GALGAS_string var_m = GALGAS_string ("cannot find a valid path for the '").add_operation (constinArgument_inTemplateName.reader_string (SOURCE_FILE ("template_invocation.galgas", 316)), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 316)).add_operation (GALGAS_string ("' template; I have tried:"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 316)) ;
                cEnumerator_stringlist enumerator_11789 (var_pathList, kEnumeration_up) ;
                while (enumerator_11789.hasCurrentObject ()) {
                  var_m.dotAssign_operation (GALGAS_string ("\n"
                    "  - '").add_operation (enumerator_11789.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 318)).add_operation (GALGAS_string ("';"), inCompiler COMMA_SOURCE_FILE ("template_invocation.galgas", 318))  COMMA_SOURCE_FILE ("template_invocation.galgas", 318)) ;
                  enumerator_11789.gotoNextObject () ;
                }
                GALGAS_location location_18 (constinArgument_inTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_18, var_m  COMMA_SOURCE_FILE ("template_invocation.galgas", 320)) ;
              }
            }
          }
        }
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'goil_template'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_goil_5F_template (const GALGAS_string & constinArgument_prefix,
                                         const GALGAS_TfieldMap & constinArgument_cfg,
                                         const GALGAS_string & constinArgument_name,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  {
  GALGAS_bool joker_282_0 ; // Joker input parameter
  routine_templateInvocation (GALGAS_lstring::constructor_new (constinArgument_name, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_routines.galgas", 10))  COMMA_SOURCE_FILE ("template_routines.galgas", 10)), constinArgument_prefix, GALGAS_string ("templates"), function_rootTemplatesDirectory (inCompiler COMMA_SOURCE_FILE ("template_routines.galgas", 13)), GALGAS_bool (true), constinArgument_cfg, result_result, joker_282_0, inCompiler  COMMA_SOURCE_FILE ("template_routines.galgas", 9)) ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_goil_5F_template [4] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_goil_5F_template (C_Compiler * inCompiler,
                                                                 const cObjectArray & inEffectiveParameterArray,
                                                                 const GALGAS_location & /* §§ inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_TfieldMap operand1 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_string operand2 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_goil_5F_template (operand0,
                                    operand1,
                                    operand2,
                                    inCompiler
                                    COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_goil_5F_template ("goil_template",
                                                                  functionWithGenericHeader_goil_5F_template,
                                                                  & kTypeDescriptor_GALGAS_string,
                                                                  3,
                                                                  functionArgs_goil_5F_template) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'computeTemplate'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_computeTemplate (const GALGAS_string & constinArgument_prefix,
                                        const GALGAS_TfieldMap & constinArgument_cfg,
                                        const GALGAS_string & constinArgument_name,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  {
  GALGAS_bool joker_571_0 ; // Joker input parameter
  routine_templateInvocation (GALGAS_lstring::constructor_new (constinArgument_name, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("template_routines.galgas", 27))  COMMA_SOURCE_FILE ("template_routines.galgas", 27)), constinArgument_prefix, GALGAS_string ("templates"), function_rootTemplatesDirectory (inCompiler COMMA_SOURCE_FILE ("template_routines.galgas", 30)), GALGAS_bool (true), constinArgument_cfg, result_result, joker_571_0, inCompiler  COMMA_SOURCE_FILE ("template_routines.galgas", 26)) ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_computeTemplate [4] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_computeTemplate (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_TfieldMap operand1 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_string operand2 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_computeTemplate (operand0,
                                   operand1,
                                   operand2,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_computeTemplate ("computeTemplate",
                                                                 functionWithGenericHeader_computeTemplate,
                                                                 & kTypeDescriptor_GALGAS_string,
                                                                 3,
                                                                 functionArgs_computeTemplate) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'trueFalse'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_trueFalse (const GALGAS_bool & constinArgument_inBool,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inBool.boolEnum () ;
  if (kBoolTrue == test_0) {
    result_result = GALGAS_string ("true") ;
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_string ("false") ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_trueFalse [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_trueFalse (C_Compiler * inCompiler,
                                                          const cObjectArray & inEffectiveParameterArray,
                                                          const GALGAS_location & /* §§ inErrorLocation */
                                                          COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_trueFalse (operand0,
                             inCompiler
                             COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_trueFalse ("trueFalse",
                                                           functionWithGenericHeader_trueFalse,
                                                           & kTypeDescriptor_GALGAS_string,
                                                           1,
                                                           functionArgs_trueFalse) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  Function 'yesNo'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_yesNo (const GALGAS_bool & constinArgument_inBool,
                              C_Compiler * /* inCompiler */
                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inBool.boolEnum () ;
  if (kBoolTrue == test_0) {
    result_result = GALGAS_string ("YES") ;
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_string ("NO") ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_yesNo [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_yesNo (C_Compiler * inCompiler,
                                                      const cObjectArray & inEffectiveParameterArray,
                                                      const GALGAS_location & /* §§ inErrorLocation */
                                                      COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_yesNo (operand0,
                         inCompiler
                         COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_yesNo ("yesNo",
                                                       functionWithGenericHeader_yesNo,
                                                       & kTypeDescriptor_GALGAS_string,
                                                       1,
                                                       functionArgs_yesNo) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'TRUEFALSE'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_TRUEFALSE (const GALGAS_bool & constinArgument_inBool,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inBool.boolEnum () ;
  if (kBoolTrue == test_0) {
    result_result = GALGAS_string ("TRUE") ;
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_string ("FALSE") ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_TRUEFALSE [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_TRUEFALSE (C_Compiler * inCompiler,
                                                          const cObjectArray & inEffectiveParameterArray,
                                                          const GALGAS_location & /* §§ inErrorLocation */
                                                          COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_TRUEFALSE (operand0,
                             inCompiler
                             COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_TRUEFALSE ("TRUEFALSE",
                                                           functionWithGenericHeader_TRUEFALSE,
                                                           & kTypeDescriptor_GALGAS_string,
                                                           1,
                                                           functionArgs_TRUEFALSE) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Bool options                                                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

C_BoolCommandLineOption gOption_goil_5F_options_generate_5F_log ("goil_options",
                                         "generate_log",
                                         108,
                                         "logfile",
                                         "generate a goil.log file containing the a log of the compilation") ;

C_BoolCommandLineOption gOption_goil_5F_options_warnMultiple ("goil_options",
                                         "warnMultiple",
                                         0,
                                         "warn-multiple",
                                         "Emit a warning if an object not defined for the first time in the implementation does not have the same multiple attribute as in the first definition") ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               UInt options                                                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              String options                                                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

C_StringCommandLineOption gOption_goil_5F_options_config ("goil_options",
                                         "config",
                                         99,
                                         "config",
                                         "Specifies the OIL config file used by goil",
                                         "") ;

C_StringCommandLineOption gOption_goil_5F_options_project_5F_dir ("goil_options",
                                         "project_dir",
                                         112,
                                         "project",
                                         "Specifies project directory (by default, the project directory is the name of the oil file, without the .oil extension)",
                                         "") ;

C_StringCommandLineOption gOption_goil_5F_options_target_5F_platform ("goil_options",
                                         "target_platform",
                                         116,
                                         "target",
                                         "Specifies target platform (avr, h8300h, libpcl, posix, posix_vp2, v850e, arm, c166, hcs12, ppc or cortex-m3)",
                                         "") ;

C_StringCommandLineOption gOption_goil_5F_options_template_5F_dir ("goil_options",
                                         "template_dir",
                                         0,
                                         "templates",
                                         "Specifies template directory (used by goil for code generation)",
                                         "") ;

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'checkEnums'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_checkEnums (const GALGAS_impEnumType & constinArgument_previousEnum,
                                 const GALGAS_impEnumType & constinArgument_newEnum,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_inside ; // Returned variable
  GALGAS_stringset var_newValues = constinArgument_newEnum.reader_valuesMap (SOURCE_FILE ("implementation_parser.galgas", 538)).reader_keySet (SOURCE_FILE ("implementation_parser.galgas", 538)) ;
  GALGAS_stringset var_previousValues = constinArgument_previousEnum.reader_valuesMap (SOURCE_FILE ("implementation_parser.galgas", 539)).reader_keySet (SOURCE_FILE ("implementation_parser.galgas", 539)) ;
  result_inside = GALGAS_bool (kIsEqual, var_newValues.operator_and (var_previousValues COMMA_SOURCE_FILE ("implementation_parser.galgas", 540)).objectCompare (var_newValues)) ;
  const enumGalgasBool test_0 = result_inside.operator_not (SOURCE_FILE ("implementation_parser.galgas", 541)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_newEnum.reader_location (SOURCE_FILE ("implementation_parser.galgas", 542)), GALGAS_string ("ENUM is not within previous enum declaration")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 542)) ;
    inCompiler->emitSemanticError (constinArgument_previousEnum.reader_location (SOURCE_FILE ("implementation_parser.galgas", 543)), GALGAS_string ("previous ENUM declaration was here")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 543)) ;
  }
//---
  return result_inside ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkEnums [3] = {
  & kTypeDescriptor_GALGAS_impEnumType,
  & kTypeDescriptor_GALGAS_impEnumType,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkEnums (C_Compiler * inCompiler,
                                                           const cObjectArray & inEffectiveParameterArray,
                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_impEnumType operand0 = GALGAS_impEnumType::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_impEnumType operand1 = GALGAS_impEnumType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  return function_checkEnums (operand0,
                              operand1,
                              inCompiler
                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkEnums ("checkEnums",
                                                            functionWithGenericHeader_checkEnums,
                                                            & kTypeDescriptor_GALGAS_bool,
                                                            2,
                                                            functionArgs_checkEnums) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'checkRanged'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_checkRanged (const GALGAS_impRangedType & constinArgument_previousRanged,
                                  const GALGAS_impRangedType & constinArgument_newRanged,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_inside ; // Returned variable
  callCategoryMethod_enclose ((const cPtr_attributeRange *) constinArgument_previousRanged.reader_setOrRange (SOURCE_FILE ("implementation_parser.galgas", 554)).ptr (), result_inside, constinArgument_newRanged.reader_setOrRange (SOURCE_FILE ("implementation_parser.galgas", 554)), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 554)) ;
  const enumGalgasBool test_0 = result_inside.operator_not (SOURCE_FILE ("implementation_parser.galgas", 555)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_newRanged.reader_location (SOURCE_FILE ("implementation_parser.galgas", 556)), GALGAS_string ("new range or set is not within previous range or set declaration")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 556)) ;
    inCompiler->emitSemanticError (constinArgument_previousRanged.reader_location (SOURCE_FILE ("implementation_parser.galgas", 557)), GALGAS_string ("previous range or set declaration was here")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 557)) ;
  }
//---
  return result_inside ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkRanged [3] = {
  & kTypeDescriptor_GALGAS_impRangedType,
  & kTypeDescriptor_GALGAS_impRangedType,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkRanged (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_impRangedType operand0 = GALGAS_impRangedType::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                             inCompiler
                                                                             COMMA_THERE) ;
  const GALGAS_impRangedType operand1 = GALGAS_impRangedType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                             inCompiler
                                                                             COMMA_THERE) ;
  return function_checkRanged (operand0,
                               operand1,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkRanged ("checkRanged",
                                                             functionWithGenericHeader_checkRanged,
                                                             & kTypeDescriptor_GALGAS_bool,
                                                             2,
                                                             functionArgs_checkRanged) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Function 'checkNewTypeWithinPreviousType'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_checkNewTypeWithinPreviousType (const GALGAS_lstring & constinArgument_name,
                                                     const GALGAS_impType & constinArgument_previousType,
                                                     const GALGAS_impType & constinArgument_newType,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_result ; // Returned variable
  result_result = GALGAS_bool (false) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_newType.reader_type (SOURCE_FILE ("implementation_parser.galgas", 567)).objectCompare (constinArgument_previousType.reader_type (SOURCE_FILE ("implementation_parser.galgas", 567)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_newType.reader_location (SOURCE_FILE ("implementation_parser.galgas", 568)), constinArgument_name.reader_string (SOURCE_FILE ("implementation_parser.galgas", 568)).add_operation (GALGAS_string (" should be a "), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 568)).add_operation (categoryReader_oilType (constinArgument_previousType.reader_type (SOURCE_FILE ("implementation_parser.galgas", 568)), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 568)), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 568))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 568)) ;
    inCompiler->emitSemanticError (constinArgument_previousType.reader_location (SOURCE_FILE ("implementation_parser.galgas", 569)), constinArgument_name.reader_string (SOURCE_FILE ("implementation_parser.galgas", 569)).add_operation (GALGAS_string (" was previouly defined here"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 569))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 569)) ;
    result_result = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    if (constinArgument_previousType.isValid ()) {
      if (constinArgument_previousType.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impEnumType) {
        GALGAS_impEnumType cast_15677_previousEnum ((cPtr_impEnumType *) constinArgument_previousType.ptr ()) ;
        if (constinArgument_newType.isValid ()) {
          if (constinArgument_newType.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impEnumType) {
            GALGAS_impEnumType cast_15733_newEnum ((cPtr_impEnumType *) constinArgument_newType.ptr ()) ;
            result_result = function_checkEnums (cast_15677_previousEnum, cast_15733_newEnum, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 576)) ;
          }
        }
      }else if (constinArgument_previousType.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impRangedType) {
        GALGAS_impRangedType cast_15844_previousRanged ((cPtr_impRangedType *) constinArgument_previousType.ptr ()) ;
        if (constinArgument_newType.isValid ()) {
          if (constinArgument_newType.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impRangedType) {
            GALGAS_impRangedType cast_15904_newRanged ((cPtr_impRangedType *) constinArgument_newType.ptr ()) ;
            result_result = function_checkRanged (cast_15844_previousRanged, cast_15904_newRanged, inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 581)) ;
          }
        }
      }else{
        result_result = GALGAS_bool (true) ;
      }
    }
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkNewTypeWithinPreviousType [4] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_impType,
  & kTypeDescriptor_GALGAS_impType,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkNewTypeWithinPreviousType (C_Compiler * inCompiler,
                                                                               const cObjectArray & inEffectiveParameterArray,
                                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_impType operand1 = GALGAS_impType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_impType operand2 = GALGAS_impType::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_checkNewTypeWithinPreviousType (operand0,
                                                  operand1,
                                                  operand2,
                                                  inCompiler
                                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkNewTypeWithinPreviousType ("checkNewTypeWithinPreviousType",
                                                                                functionWithGenericHeader_checkNewTypeWithinPreviousType,
                                                                                & kTypeDescriptor_GALGAS_bool,
                                                                                3,
                                                                                functionArgs_checkNewTypeWithinPreviousType) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'buildRange'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeRange function_buildRange (const GALGAS_dataType & constinArgument_type,
                                           const GALGAS_object_5F_t & constinArgument_start,
                                           const GALGAS_object_5F_t & constinArgument_stop,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeRange result_range ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_parser.galgas", 594)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_range = GALGAS_uint_33__32_AttributeMinMax::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 595)), function_uint_33__32_OrError (constinArgument_start, GALGAS_string ("UINT32 Range start"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 595)), function_uint_33__32_OrError (constinArgument_stop, GALGAS_string ("UINT32 Range stop"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 595))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 595)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE ("implementation_parser.galgas", 596)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      result_range = GALGAS_sint_33__32_AttributeMinMax::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 597)), function_sint_33__32_OrError (constinArgument_start, GALGAS_string ("SINT32 Range start"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 597)), function_sint_33__32_OrError (constinArgument_stop, GALGAS_string ("SINT32 Range stop"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 597))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 597)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_parser.galgas", 598)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_range = GALGAS_uint_36__34_AttributeMinMax::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 599)), function_uint_36__34_OrError (constinArgument_start, GALGAS_string ("UINT64 Range start"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 599)), function_uint_36__34_OrError (constinArgument_stop, GALGAS_string ("UINT64 Range stop"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 599))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 599)) ;
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE ("implementation_parser.galgas", 600)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          result_range = GALGAS_sint_36__34_AttributeMinMax::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 601)), function_sint_36__34_OrError (constinArgument_start, GALGAS_string ("SINT64 Range start"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 601)), function_sint_36__34_OrError (constinArgument_stop, GALGAS_string ("SINT64 Range stop"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 601))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 601)) ;
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_floatNumber (SOURCE_FILE ("implementation_parser.galgas", 602)))).boolEnum () ;
          if (kBoolTrue == test_4) {
            result_range = GALGAS_floatAttributeMinMax::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 603)), function_floatOrError (constinArgument_start, GALGAS_string ("FLOAT Range start"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 603)), function_floatOrError (constinArgument_stop, GALGAS_string ("FLOAT Range stop"), inCompiler COMMA_SOURCE_FILE ("implementation_parser.galgas", 603))  COMMA_SOURCE_FILE ("implementation_parser.galgas", 603)) ;
          }else if (kBoolFalse == test_4) {
            inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_parser.galgas", 605)), GALGAS_string ("internal. Unknown number type")  COMMA_SOURCE_FILE ("implementation_parser.galgas", 605)) ;
            result_range.drop () ; // Release error dropped variable
          }
        }
      }
    }
  }
//---
  return result_range ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_buildRange [4] = {
  & kTypeDescriptor_GALGAS_dataType,
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_object_5F_t,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_buildRange (C_Compiler * inCompiler,
                                                           const cObjectArray & inEffectiveParameterArray,
                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_dataType operand0 = GALGAS_dataType::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                   inCompiler
                                                                   COMMA_THERE) ;
  const GALGAS_object_5F_t operand1 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_object_5F_t operand2 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  return function_buildRange (operand0,
                              operand1,
                              operand2,
                              inCompiler
                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_buildRange ("buildRange",
                                                            functionWithGenericHeader_buildRange,
                                                            & kTypeDescriptor_GALGAS_attributeRange,
                                                            3,
                                                            functionArgs_buildRange) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'stringWithUInt32List'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringWithUInt_33__32_List (const GALGAS_uint_33__32_List & constinArgument_values,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_uint_33__32_List enumerator_1704 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_1704.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_1704.current_value (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 69))  COMMA_SOURCE_FILE ("implementation_types.galgas", 69)) ;
    if (enumerator_1704.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 69)) ;
    }
    enumerator_1704.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringWithUInt_33__32_List [2] = {
  & kTypeDescriptor_GALGAS_uint_33__32_List,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringWithUInt_33__32_List (C_Compiler * inCompiler,
                                                                           const cObjectArray & inEffectiveParameterArray,
                                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_uint_33__32_List operand0 = GALGAS_uint_33__32_List::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                   inCompiler
                                                                                   COMMA_THERE) ;
  return function_stringWithUInt_33__32_List (operand0,
                                              inCompiler
                                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringWithUInt_33__32_List ("stringWithUInt32List",
                                                                            functionWithGenericHeader_stringWithUInt_33__32_List,
                                                                            & kTypeDescriptor_GALGAS_string,
                                                                            1,
                                                                            functionArgs_stringWithUInt_33__32_List) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'stringWithUInt64List'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringWithUInt_36__34_List (const GALGAS_uint_36__34_List & constinArgument_values,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_uint_36__34_List enumerator_1866 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_1866.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_1866.current_value (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 74))  COMMA_SOURCE_FILE ("implementation_types.galgas", 74)) ;
    if (enumerator_1866.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 74)) ;
    }
    enumerator_1866.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringWithUInt_36__34_List [2] = {
  & kTypeDescriptor_GALGAS_uint_36__34_List,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringWithUInt_36__34_List (C_Compiler * inCompiler,
                                                                           const cObjectArray & inEffectiveParameterArray,
                                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_uint_36__34_List operand0 = GALGAS_uint_36__34_List::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                   inCompiler
                                                                                   COMMA_THERE) ;
  return function_stringWithUInt_36__34_List (operand0,
                                              inCompiler
                                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringWithUInt_36__34_List ("stringWithUInt64List",
                                                                            functionWithGenericHeader_stringWithUInt_36__34_List,
                                                                            & kTypeDescriptor_GALGAS_string,
                                                                            1,
                                                                            functionArgs_stringWithUInt_36__34_List) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'stringWithSInt32List'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringWithSInt_33__32_List (const GALGAS_sint_33__32_List & constinArgument_values,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_sint_33__32_List enumerator_2028 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_2028.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_2028.current_value (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 79))  COMMA_SOURCE_FILE ("implementation_types.galgas", 79)) ;
    if (enumerator_2028.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 79)) ;
    }
    enumerator_2028.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringWithSInt_33__32_List [2] = {
  & kTypeDescriptor_GALGAS_sint_33__32_List,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringWithSInt_33__32_List (C_Compiler * inCompiler,
                                                                           const cObjectArray & inEffectiveParameterArray,
                                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_sint_33__32_List operand0 = GALGAS_sint_33__32_List::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                   inCompiler
                                                                                   COMMA_THERE) ;
  return function_stringWithSInt_33__32_List (operand0,
                                              inCompiler
                                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringWithSInt_33__32_List ("stringWithSInt32List",
                                                                            functionWithGenericHeader_stringWithSInt_33__32_List,
                                                                            & kTypeDescriptor_GALGAS_string,
                                                                            1,
                                                                            functionArgs_stringWithSInt_33__32_List) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'stringWithSInt64List'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringWithSInt_36__34_List (const GALGAS_sint_36__34_List & constinArgument_values,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_sint_36__34_List enumerator_2190 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_2190.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_2190.current_value (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 84))  COMMA_SOURCE_FILE ("implementation_types.galgas", 84)) ;
    if (enumerator_2190.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 84)) ;
    }
    enumerator_2190.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringWithSInt_36__34_List [2] = {
  & kTypeDescriptor_GALGAS_sint_36__34_List,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringWithSInt_36__34_List (C_Compiler * inCompiler,
                                                                           const cObjectArray & inEffectiveParameterArray,
                                                                           const GALGAS_location & /* §§ inErrorLocation */
                                                                           COMMA_LOCATION_ARGS) {
  const GALGAS_sint_36__34_List operand0 = GALGAS_sint_36__34_List::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                   inCompiler
                                                                                   COMMA_THERE) ;
  return function_stringWithSInt_36__34_List (operand0,
                                              inCompiler
                                              COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringWithSInt_36__34_List ("stringWithSInt64List",
                                                                            functionWithGenericHeader_stringWithSInt_36__34_List,
                                                                            & kTypeDescriptor_GALGAS_string,
                                                                            1,
                                                                            functionArgs_stringWithSInt_36__34_List) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'stringWithFloatList'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringWithFloatList (const GALGAS_floatList & constinArgument_values,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_floatList enumerator_2350 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_2350.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_2350.current_value (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 89))  COMMA_SOURCE_FILE ("implementation_types.galgas", 89)) ;
    if (enumerator_2350.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 89)) ;
    }
    enumerator_2350.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringWithFloatList [2] = {
  & kTypeDescriptor_GALGAS_floatList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringWithFloatList (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_floatList operand0 = GALGAS_floatList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  return function_stringWithFloatList (operand0,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringWithFloatList ("stringWithFloatList",
                                                                     functionWithGenericHeader_stringWithFloatList,
                                                                     & kTypeDescriptor_GALGAS_string,
                                                                     1,
                                                                     functionArgs_stringWithFloatList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'uint32ListWithNumberList'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint_33__32_List function_uint_33__32_ListWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint_33__32_List result_result ; // Returned variable
  result_result = GALGAS_uint_33__32_List::constructor_emptyList (SOURCE_FILE ("implementation_types.galgas", 93)) ;
  cEnumerator_numberList enumerator_2542 (constinArgument_numbers, kEnumeration_up) ;
  while (enumerator_2542.hasCurrentObject ()) {
    result_result.addAssign_operation (enumerator_2542.current_location (HERE), function_uint_33__32_OrError (enumerator_2542.current_value (HERE), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 95))  COMMA_SOURCE_FILE ("implementation_types.galgas", 95)) ;
    enumerator_2542.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_uint_33__32_ListWithNumberList [2] = {
  & kTypeDescriptor_GALGAS_numberList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_uint_33__32_ListWithNumberList (C_Compiler * inCompiler,
                                                                               const cObjectArray & inEffectiveParameterArray,
                                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_uint_33__32_ListWithNumberList (operand0,
                                                  inCompiler
                                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_uint_33__32_ListWithNumberList ("uint32ListWithNumberList",
                                                                                functionWithGenericHeader_uint_33__32_ListWithNumberList,
                                                                                & kTypeDescriptor_GALGAS_uint_33__32_List,
                                                                                1,
                                                                                functionArgs_uint_33__32_ListWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'sint32ListWithNumberList'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_List function_sint_33__32_ListWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint_33__32_List result_result ; // Returned variable
  result_result = GALGAS_sint_33__32_List::constructor_emptyList (SOURCE_FILE ("implementation_types.galgas", 100)) ;
  cEnumerator_numberList enumerator_2740 (constinArgument_numbers, kEnumeration_up) ;
  while (enumerator_2740.hasCurrentObject ()) {
    result_result.addAssign_operation (enumerator_2740.current_location (HERE), function_sint_33__32_OrError (enumerator_2740.current_value (HERE), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 102))  COMMA_SOURCE_FILE ("implementation_types.galgas", 102)) ;
    enumerator_2740.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_sint_33__32_ListWithNumberList [2] = {
  & kTypeDescriptor_GALGAS_numberList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_sint_33__32_ListWithNumberList (C_Compiler * inCompiler,
                                                                               const cObjectArray & inEffectiveParameterArray,
                                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_sint_33__32_ListWithNumberList (operand0,
                                                  inCompiler
                                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_sint_33__32_ListWithNumberList ("sint32ListWithNumberList",
                                                                                functionWithGenericHeader_sint_33__32_ListWithNumberList,
                                                                                & kTypeDescriptor_GALGAS_sint_33__32_List,
                                                                                1,
                                                                                functionArgs_sint_33__32_ListWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'uint64ListWithNumberList'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint_36__34_List function_uint_36__34_ListWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint_36__34_List result_result ; // Returned variable
  result_result = GALGAS_uint_36__34_List::constructor_emptyList (SOURCE_FILE ("implementation_types.galgas", 107)) ;
  cEnumerator_numberList enumerator_2938 (constinArgument_numbers, kEnumeration_up) ;
  while (enumerator_2938.hasCurrentObject ()) {
    result_result.addAssign_operation (enumerator_2938.current_location (HERE), function_uint_36__34_OrError (enumerator_2938.current_value (HERE), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 109))  COMMA_SOURCE_FILE ("implementation_types.galgas", 109)) ;
    enumerator_2938.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_uint_36__34_ListWithNumberList [2] = {
  & kTypeDescriptor_GALGAS_numberList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_uint_36__34_ListWithNumberList (C_Compiler * inCompiler,
                                                                               const cObjectArray & inEffectiveParameterArray,
                                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_uint_36__34_ListWithNumberList (operand0,
                                                  inCompiler
                                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_uint_36__34_ListWithNumberList ("uint64ListWithNumberList",
                                                                                functionWithGenericHeader_uint_36__34_ListWithNumberList,
                                                                                & kTypeDescriptor_GALGAS_uint_36__34_List,
                                                                                1,
                                                                                functionArgs_uint_36__34_ListWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'sint64ListWithNumberList'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_36__34_List function_sint_36__34_ListWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint_36__34_List result_result ; // Returned variable
  result_result = GALGAS_sint_36__34_List::constructor_emptyList (SOURCE_FILE ("implementation_types.galgas", 114)) ;
  cEnumerator_numberList enumerator_3136 (constinArgument_numbers, kEnumeration_up) ;
  while (enumerator_3136.hasCurrentObject ()) {
    result_result.addAssign_operation (enumerator_3136.current_location (HERE), function_sint_36__34_OrError (enumerator_3136.current_value (HERE), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 116))  COMMA_SOURCE_FILE ("implementation_types.galgas", 116)) ;
    enumerator_3136.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_sint_36__34_ListWithNumberList [2] = {
  & kTypeDescriptor_GALGAS_numberList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_sint_36__34_ListWithNumberList (C_Compiler * inCompiler,
                                                                               const cObjectArray & inEffectiveParameterArray,
                                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_sint_36__34_ListWithNumberList (operand0,
                                                  inCompiler
                                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_sint_36__34_ListWithNumberList ("sint64ListWithNumberList",
                                                                                functionWithGenericHeader_sint_36__34_ListWithNumberList,
                                                                                & kTypeDescriptor_GALGAS_sint_36__34_List,
                                                                                1,
                                                                                functionArgs_sint_36__34_ListWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'floatListWithNumberList'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatList function_floatListWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_floatList result_result ; // Returned variable
  result_result = GALGAS_floatList::constructor_emptyList (SOURCE_FILE ("implementation_types.galgas", 121)) ;
  cEnumerator_numberList enumerator_3331 (constinArgument_numbers, kEnumeration_up) ;
  while (enumerator_3331.hasCurrentObject ()) {
    result_result.addAssign_operation (enumerator_3331.current_location (HERE), function_floatOrError (enumerator_3331.current_value (HERE), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 123))  COMMA_SOURCE_FILE ("implementation_types.galgas", 123)) ;
    enumerator_3331.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_floatListWithNumberList [2] = {
  & kTypeDescriptor_GALGAS_numberList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_floatListWithNumberList (C_Compiler * inCompiler,
                                                                        const cObjectArray & inEffectiveParameterArray,
                                                                        const GALGAS_location & /* §§ inErrorLocation */
                                                                        COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_floatListWithNumberList (operand0,
                                           inCompiler
                                           COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_floatListWithNumberList ("floatListWithNumberList",
                                                                         functionWithGenericHeader_floatListWithNumberList,
                                                                         & kTypeDescriptor_GALGAS_floatList,
                                                                         1,
                                                                         functionArgs_floatListWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Function 'attributeRangeWithNumberList'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeRange function_attributeRangeWithNumberList (const GALGAS_numberList & constinArgument_numbers,
                                                             const GALGAS_dataType & constinArgument_type,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeRange result_range ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 544)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_range = GALGAS_uint_33__32_AttributeSet::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 545)), function_uint_33__32_ListWithNumberList (constinArgument_numbers, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 545))  COMMA_SOURCE_FILE ("implementation_types.galgas", 545)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 546)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      result_range = GALGAS_sint_33__32_AttributeSet::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 547)), function_sint_33__32_ListWithNumberList (constinArgument_numbers, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 547))  COMMA_SOURCE_FILE ("implementation_types.galgas", 547)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 548)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_range = GALGAS_uint_36__34_AttributeSet::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 549)), function_uint_36__34_ListWithNumberList (constinArgument_numbers, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 549))  COMMA_SOURCE_FILE ("implementation_types.galgas", 549)) ;
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 550)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          result_range = GALGAS_sint_36__34_AttributeSet::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 551)), function_sint_36__34_ListWithNumberList (constinArgument_numbers, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 551))  COMMA_SOURCE_FILE ("implementation_types.galgas", 551)) ;
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_floatNumber (SOURCE_FILE ("implementation_types.galgas", 552)))).boolEnum () ;
          if (kBoolTrue == test_4) {
            result_range = GALGAS_floatAttributeSet::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 553)), function_floatListWithNumberList (constinArgument_numbers, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 553))  COMMA_SOURCE_FILE ("implementation_types.galgas", 553)) ;
          }else if (kBoolFalse == test_4) {
            inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 555)), GALGAS_string ("internal. Unknown number type")  COMMA_SOURCE_FILE ("implementation_types.galgas", 555)) ;
            result_range.drop () ; // Release error dropped variable
          }
        }
      }
    }
  }
//---
  return result_range ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_attributeRangeWithNumberList [3] = {
  & kTypeDescriptor_GALGAS_numberList,
  & kTypeDescriptor_GALGAS_dataType,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_attributeRangeWithNumberList (C_Compiler * inCompiler,
                                                                             const cObjectArray & inEffectiveParameterArray,
                                                                             const GALGAS_location & /* §§ inErrorLocation */
                                                                             COMMA_LOCATION_ARGS) {
  const GALGAS_numberList operand0 = GALGAS_numberList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  const GALGAS_dataType operand1 = GALGAS_dataType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                   inCompiler
                                                                   COMMA_THERE) ;
  return function_attributeRangeWithNumberList (operand0,
                                                operand1,
                                                inCompiler
                                                COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_attributeRangeWithNumberList ("attributeRangeWithNumberList",
                                                                              functionWithGenericHeader_attributeRangeWithNumberList,
                                                                              & kTypeDescriptor_GALGAS_attributeRange,
                                                                              2,
                                                                              functionArgs_attributeRangeWithNumberList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'valueList'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_valueList (const GALGAS_enumValues & constinArgument_values,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  result_result = GALGAS_string::makeEmptyString () ;
  cEnumerator_enumValues enumerator_18129 (constinArgument_values, kEnumeration_up) ;
  while (enumerator_18129.hasCurrentObject ()) {
    result_result.dotAssign_operation (enumerator_18129.current_lkey (HERE).reader_string (SOURCE_FILE ("implementation_types.galgas", 646))  COMMA_SOURCE_FILE ("implementation_types.galgas", 646)) ;
    if (enumerator_18129.hasNextObject ()) {
      result_result.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("implementation_types.galgas", 648)) ;
    }
    enumerator_18129.gotoNextObject () ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueList [2] = {
  & kTypeDescriptor_GALGAS_enumValues,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueList (C_Compiler * inCompiler,
                                                          const cObjectArray & inEffectiveParameterArray,
                                                          const GALGAS_location & /* §§ inErrorLocation */
                                                          COMMA_LOCATION_ARGS) {
  const GALGAS_enumValues operand0 = GALGAS_enumValues::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_valueList (operand0,
                             inCompiler
                             COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueList ("valueList",
                                                           functionWithGenericHeader_valueList,
                                                           & kTypeDescriptor_GALGAS_string,
                                                           1,
                                                           functionArgs_valueList) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Routine 'verifyEnum'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_verifyEnum (const GALGAS_impType constinArgument_anEnum,
                         C_Compiler * inCompiler
                         COMMA_UNUSED_LOCATION_ARGS) {
  if (constinArgument_anEnum.isValid ()) {
    if (constinArgument_anEnum.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impEnumType) {
      GALGAS_impEnumType cast_20843_realEnum ((cPtr_impEnumType *) constinArgument_anEnum.ptr ()) ;
      if (cast_20843_realEnum.reader_defaultValue (SOURCE_FILE ("implementation_types.galgas", 735)).isValid ()) {
        if (cast_20843_realEnum.reader_defaultValue (SOURCE_FILE ("implementation_types.galgas", 735)).dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_string_5F_class) {
          GALGAS_string_5F_class cast_20917_defaultValue ((cPtr_string_5F_class *) cast_20843_realEnum.reader_defaultValue (SOURCE_FILE ("implementation_types.galgas", 735)).ptr ()) ;
          const enumGalgasBool test_0 = cast_20843_realEnum.reader_valuesMap (SOURCE_FILE ("implementation_types.galgas", 737)).reader_hasKey (cast_20917_defaultValue.reader_value (SOURCE_FILE ("implementation_types.galgas", 737)) COMMA_SOURCE_FILE ("implementation_types.galgas", 737)).operator_not (SOURCE_FILE ("implementation_types.galgas", 737)).boolEnum () ;
          if (kBoolTrue == test_0) {
            inCompiler->emitSemanticError (cast_20917_defaultValue.reader_location (SOURCE_FILE ("implementation_types.galgas", 738)), GALGAS_string ("Default enum value does not match any enum value")  COMMA_SOURCE_FILE ("implementation_types.galgas", 738)) ;
          }
        }
      }
    }else{
      inCompiler->emitSemanticError (constinArgument_anEnum.reader_location (SOURCE_FILE ("implementation_types.galgas", 742)), GALGAS_string ("Internal, not an @impEnumType")  COMMA_SOURCE_FILE ("implementation_types.galgas", 742)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'checkAndGetIntegerNumber'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_object_5F_t function_checkAndGetIntegerNumber (const GALGAS_lstring & constinArgument_oil_5F_desc,
                                                      const GALGAS_dataType & constinArgument_type,
                                                      const GALGAS_luint_36__34_ & constinArgument_number,
                                                      const GALGAS_bool & constinArgument_signed,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_object_5F_t result_value ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_signed.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 811)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      result_value = GALGAS_sint_33__32__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 812)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 812)).reader_sint (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 812)).multiply_operation (GALGAS_sint ((int32_t) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 812)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 812))  COMMA_SOURCE_FILE ("implementation_types.galgas", 812)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 813)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_value = GALGAS_sint_36__34__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 814)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 814)).reader_sint_36__34_ (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 814)).multiply_operation (GALGAS_sint_36__34_ ((int64_t) 1LL).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 814)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 814))  COMMA_SOURCE_FILE ("implementation_types.galgas", 814)) ;
      }else if (kBoolFalse == test_2) {
        result_value = GALGAS_void::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 816))  COMMA_SOURCE_FILE ("implementation_types.galgas", 816)) ;
        GALGAS_location location_3 (constinArgument_number.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, categoryReader_oilType (constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 817)).add_operation (GALGAS_string (" expected, got a SINT"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 817))  COMMA_SOURCE_FILE ("implementation_types.galgas", 817)) ;
      }
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 820)))).boolEnum () ;
    if (kBoolTrue == test_4) {
      result_value = GALGAS_sint_33__32__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 821)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 821)).reader_sint (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 821))  COMMA_SOURCE_FILE ("implementation_types.galgas", 821)) ;
    }else if (kBoolFalse == test_4) {
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 822)))).boolEnum () ;
      if (kBoolTrue == test_5) {
        result_value = GALGAS_sint_36__34__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 823)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 823)).reader_sint_36__34_ (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 823))  COMMA_SOURCE_FILE ("implementation_types.galgas", 823)) ;
      }else if (kBoolFalse == test_5) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 824)))).boolEnum () ;
        if (kBoolTrue == test_6) {
          result_value = GALGAS_uint_33__32__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 825)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 825)).reader_uint (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 825))  COMMA_SOURCE_FILE ("implementation_types.galgas", 825)) ;
        }else if (kBoolFalse == test_6) {
          const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 826)))).boolEnum () ;
          if (kBoolTrue == test_7) {
            result_value = GALGAS_uint_36__34__5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 827)), constinArgument_number.reader_uint_36__34_ (SOURCE_FILE ("implementation_types.galgas", 827))  COMMA_SOURCE_FILE ("implementation_types.galgas", 827)) ;
          }else if (kBoolFalse == test_7) {
            result_value = GALGAS_void::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 829))  COMMA_SOURCE_FILE ("implementation_types.galgas", 829)) ;
            GALGAS_location location_8 (constinArgument_number.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_8, categoryReader_oilType (constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 830)).add_operation (GALGAS_string (" expected, got a UINT"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 830))  COMMA_SOURCE_FILE ("implementation_types.galgas", 830)) ;
          }
        }
      }
    }
  }
//---
  return result_value ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkAndGetIntegerNumber [5] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_dataType,
  & kTypeDescriptor_GALGAS_luint_36__34_,
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkAndGetIntegerNumber (C_Compiler * inCompiler,
                                                                         const cObjectArray & inEffectiveParameterArray,
                                                                         const GALGAS_location & /* §§ inErrorLocation */
                                                                         COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_dataType operand1 = GALGAS_dataType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                   inCompiler
                                                                   COMMA_THERE) ;
  const GALGAS_luint_36__34_ operand2 = GALGAS_luint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                             inCompiler
                                                                             COMMA_THERE) ;
  const GALGAS_bool operand3 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (3 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_checkAndGetIntegerNumber (operand0,
                                            operand1,
                                            operand2,
                                            operand3,
                                            inCompiler
                                            COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkAndGetIntegerNumber ("checkAndGetIntegerNumber",
                                                                          functionWithGenericHeader_checkAndGetIntegerNumber,
                                                                          & kTypeDescriptor_GALGAS_object_5F_t,
                                                                          4,
                                                                          functionArgs_checkAndGetIntegerNumber) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Function 'checkAndGetFloatNumber'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_object_5F_t function_checkAndGetFloatNumber (const GALGAS_lstring & constinArgument_oil_5F_desc,
                                                    const GALGAS_dataType & constinArgument_type,
                                                    const GALGAS_ldouble & constinArgument_number,
                                                    const GALGAS_bool & constinArgument_signed,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_object_5F_t result_value ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_signed.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_floatNumber (SOURCE_FILE ("implementation_types.galgas", 842)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      result_value = GALGAS_float_5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 843)), constinArgument_number.reader_double (SOURCE_FILE ("implementation_types.galgas", 843)).multiply_operation (GALGAS_double (1).operator_unary_minus (inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 843)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 843))  COMMA_SOURCE_FILE ("implementation_types.galgas", 843)) ;
    }else if (kBoolFalse == test_1) {
      result_value = GALGAS_void::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 845))  COMMA_SOURCE_FILE ("implementation_types.galgas", 845)) ;
      GALGAS_location location_2 (constinArgument_number.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, categoryReader_oilType (constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 846)).add_operation (GALGAS_string (" expected, got a FLOAT"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 846))  COMMA_SOURCE_FILE ("implementation_types.galgas", 846)) ;
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, constinArgument_type.objectCompare (GALGAS_dataType::constructor_floatNumber (SOURCE_FILE ("implementation_types.galgas", 849)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      result_value = GALGAS_float_5F_class::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 850)), constinArgument_number.reader_double (SOURCE_FILE ("implementation_types.galgas", 850))  COMMA_SOURCE_FILE ("implementation_types.galgas", 850)) ;
    }else if (kBoolFalse == test_3) {
      result_value = GALGAS_void::constructor_new (constinArgument_oil_5F_desc, constinArgument_number.reader_location (SOURCE_FILE ("implementation_types.galgas", 852))  COMMA_SOURCE_FILE ("implementation_types.galgas", 852)) ;
      GALGAS_location location_4 (constinArgument_number.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, categoryReader_oilType (constinArgument_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 853)).add_operation (GALGAS_string (" expected, got a FLOAT"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 853))  COMMA_SOURCE_FILE ("implementation_types.galgas", 853)) ;
    }
  }
//---
  return result_value ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_checkAndGetFloatNumber [5] = {
  & kTypeDescriptor_GALGAS_lstring,
  & kTypeDescriptor_GALGAS_dataType,
  & kTypeDescriptor_GALGAS_ldouble,
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_checkAndGetFloatNumber (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & /* §§ inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_dataType operand1 = GALGAS_dataType::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                   inCompiler
                                                                   COMMA_THERE) ;
  const GALGAS_ldouble operand2 = GALGAS_ldouble::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  const GALGAS_bool operand3 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (3 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_checkAndGetFloatNumber (operand0,
                                          operand1,
                                          operand2,
                                          operand3,
                                          inCompiler
                                          COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_checkAndGetFloatNumber ("checkAndGetFloatNumber",
                                                                        functionWithGenericHeader_checkAndGetFloatNumber,
                                                                        & kTypeDescriptor_GALGAS_object_5F_t,
                                                                        4,
                                                                        functionArgs_checkAndGetFloatNumber) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'checkTypeForAttribute'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkTypeForAttribute (const GALGAS_implementationObjectMap constinArgument_obj,
                                    const GALGAS_string constinArgument_attributeName,
                                    const GALGAS_dataType constinArgument_expectedType,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = constinArgument_obj.reader_hasKey (constinArgument_attributeName COMMA_SOURCE_FILE ("implementation_types.galgas", 862)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_impType var_type ;
    constinArgument_obj.method_get (function_lstringWith (constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 864)), var_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 864)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_type.reader_type (SOURCE_FILE ("implementation_types.galgas", 865)).objectCompare (constinArgument_expectedType)).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (var_type.reader_location (SOURCE_FILE ("implementation_types.galgas", 866)), constinArgument_attributeName.add_operation (GALGAS_string (" is a "), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 866)).add_operation (categoryReader_oilType (var_type.reader_type (SOURCE_FILE ("implementation_types.galgas", 866)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 866)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 866))  COMMA_SOURCE_FILE ("implementation_types.galgas", 866)) ;
      inCompiler->emitSemanticError (var_type.reader_location (SOURCE_FILE ("implementation_types.galgas", 867)), constinArgument_attributeName.add_operation (GALGAS_string (" should be a "), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 867)).add_operation (categoryReader_oilType (constinArgument_expectedType, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 867)), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 867))  COMMA_SOURCE_FILE ("implementation_types.galgas", 867)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'boolSubAttributes'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_implementationObjectMap function_boolSubAttributes (const GALGAS_implementationObject & constinArgument_obj,
                                                           const GALGAS_string & constinArgument_attributeName,
                                                           const GALGAS_bool & constinArgument_boolValue,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_implementationObjectMap result_subImplementation ; // Returned variable
  result_subImplementation = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_types.galgas", 877)) ;
  const enumGalgasBool test_0 = constinArgument_obj.reader_attributes (SOURCE_FILE ("implementation_types.galgas", 878)).reader_hasKey (constinArgument_attributeName COMMA_SOURCE_FILE ("implementation_types.galgas", 878)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_impType var_type ;
    constinArgument_obj.reader_attributes (SOURCE_FILE ("implementation_types.galgas", 880)).method_get (function_lstringWith (constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 880)), var_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 880)) ;
    if (var_type.isValid ()) {
      if (var_type.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impBoolType) {
        GALGAS_impBoolType cast_25340_boolType ((cPtr_impBoolType *) var_type.ptr ()) ;
        const enumGalgasBool test_1 = constinArgument_boolValue.boolEnum () ;
        if (kBoolTrue == test_1) {
          result_subImplementation = cast_25340_boolType.reader_trueSubAttributes (SOURCE_FILE ("implementation_types.galgas", 884)) ;
        }else if (kBoolFalse == test_1) {
          result_subImplementation = cast_25340_boolType.reader_falseSubAttributes (SOURCE_FILE ("implementation_types.galgas", 886)) ;
        }
      }
    }
  }
//---
  return result_subImplementation ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_boolSubAttributes [4] = {
  & kTypeDescriptor_GALGAS_implementationObject,
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_boolSubAttributes (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & /* §§ inErrorLocation */
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_implementationObject operand0 = GALGAS_implementationObject::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                           inCompiler
                                                                                           COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_bool operand2 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_boolSubAttributes (operand0,
                                     operand1,
                                     operand2,
                                     inCompiler
                                     COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_boolSubAttributes ("boolSubAttributes",
                                                                   functionWithGenericHeader_boolSubAttributes,
                                                                   & kTypeDescriptor_GALGAS_implementationObjectMap,
                                                                   3,
                                                                   functionArgs_boolSubAttributes) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'enumSubAttributes'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_implementationObjectMap function_enumSubAttributes (const GALGAS_implementationObject & constinArgument_obj,
                                                           const GALGAS_string & constinArgument_attributeName,
                                                           const GALGAS_string & constinArgument_enumValue,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_implementationObjectMap result_subImplementation ; // Returned variable
  result_subImplementation = GALGAS_implementationObjectMap::constructor_emptyMap (SOURCE_FILE ("implementation_types.galgas", 897)) ;
  const enumGalgasBool test_0 = constinArgument_obj.reader_attributes (SOURCE_FILE ("implementation_types.galgas", 898)).reader_hasKey (constinArgument_attributeName COMMA_SOURCE_FILE ("implementation_types.galgas", 898)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_impType var_type ;
    constinArgument_obj.reader_attributes (SOURCE_FILE ("implementation_types.galgas", 900)).method_get (function_lstringWith (constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 900)), var_type, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 900)) ;
    if (var_type.isValid ()) {
      if (var_type.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impEnumType) {
        GALGAS_impEnumType cast_25919_enumType ((cPtr_impEnumType *) var_type.ptr ()) ;
        const enumGalgasBool test_1 = cast_25919_enumType.reader_valuesMap (SOURCE_FILE ("implementation_types.galgas", 903)).reader_hasKey (constinArgument_enumValue COMMA_SOURCE_FILE ("implementation_types.galgas", 903)).boolEnum () ;
        if (kBoolTrue == test_1) {
          cast_25919_enumType.reader_valuesMap (SOURCE_FILE ("implementation_types.galgas", 904)).method_get (function_lstringWith (constinArgument_enumValue, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 904)), result_subImplementation, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 904)) ;
        }
      }
    }
  }
//---
  return result_subImplementation ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_enumSubAttributes [4] = {
  & kTypeDescriptor_GALGAS_implementationObject,
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_enumSubAttributes (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & /* §§ inErrorLocation */
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_implementationObject operand0 = GALGAS_implementationObject::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                           inCompiler
                                                                                           COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand2 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_enumSubAttributes (operand0,
                                     operand1,
                                     operand2,
                                     inCompiler
                                     COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_enumSubAttributes ("enumSubAttributes",
                                                                   functionWithGenericHeader_enumSubAttributes,
                                                                   & kTypeDescriptor_GALGAS_implementationObjectMap,
                                                                   3,
                                                                   functionArgs_enumSubAttributes) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'checkFilters'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkFilters (const GALGAS_implementationObject constinArgument_messageProperty,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_implementationObjectMap var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("MASKEDNEWEQUALSX"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 915)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MASK"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 916)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 916)) ;
  }
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("X"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 917)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 917)) ;
  }
  var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("MASKEDNEWDIFFERSX"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 918)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MASK"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 919)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 919)) ;
  }
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("X"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 920)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 920)) ;
  }
  var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("MASKEDNEWEQUALSMASKEDOLD"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 921)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MASK"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 922)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 922)) ;
  }
  var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("NEWISWITHIN"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 923)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MIN"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 924)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 924)) ;
  }
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MAX"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 925)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 925)) ;
  }
  var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("NEWISOUTSIDE"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 926)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MIN"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 927)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 927)) ;
  }
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("MAX"), GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE ("implementation_types.galgas", 928)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 928)) ;
  }
  var_filter = function_enumSubAttributes (constinArgument_messageProperty, GALGAS_string ("FILTER"), GALGAS_string ("ONEEVERYN"), inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 929)) ;
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("PERIOD"), GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 930)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 930)) ;
  }
  {
  routine_checkTypeForAttribute (var_filter, GALGAS_string ("OFFSET"), GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE ("implementation_types.galgas", 931)), inCompiler  COMMA_SOURCE_FILE ("implementation_types.galgas", 931)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'setDefaultsForType'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_setDefaultsForType (const GALGAS_implementationObjectMap constinArgument_impObject,
                                 GALGAS_objectAttributes & ioArgument_objectParams,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_implementationObjectMap enumerator_39156 (constinArgument_impObject, kEnumeration_up) ;
  while (enumerator_39156.hasCurrentObject ()) {
    if (enumerator_39156.current_type (HERE).isValid ()) {
      if (NULL != dynamic_cast <const cPtr_impAutoDefaultType *> (enumerator_39156.current_type (HERE).ptr ())) {
        GALGAS_impAutoDefaultType cast_39217_defaultType ((cPtr_impAutoDefaultType *) enumerator_39156.current_type (HERE).ptr ()) ;
        callCategoryMethod_setDefault ((const cPtr_impAutoDefaultType *) cast_39217_defaultType.ptr (), ioArgument_objectParams, inCompiler COMMA_SOURCE_FILE ("implementation_types.galgas", 1132)) ;
      }
    }
    enumerator_39156.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Once function 'emptyLString'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_lstring onceFunction_emptyLString (C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_ls ; // Returned variable
  result_ls = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 29))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 29)) ;
//---
  return result_ls ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_emptyLString = false ;
static GALGAS_lstring gOnceFunctionResult_emptyLString ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_emptyLString (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_emptyLString) {
    gOnceFunctionResult_emptyLString = onceFunction_emptyLString (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_emptyLString = true ;
  }
  return gOnceFunctionResult_emptyLString ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_emptyLString (void) {
  gOnceFunctionResult_emptyLString.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_emptyLString (NULL,
                                                          releaseOnceFunctionResult_emptyLString) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_emptyLString [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_emptyLString (C_Compiler * inCompiler,
                                                             const cObjectArray & /* inEffectiveParameterArray */,
                                                             const GALGAS_location & /* inErrorLocation */
                                                             COMMA_LOCATION_ARGS) {
  return function_emptyLString (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_emptyLString ("emptyLString",
                                                              functionWithGenericHeader_emptyLString,
                                                              & kTypeDescriptor_GALGAS_lstring,
                                                              0,
                                                              functionArgs_emptyLString) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'emptyObject'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectAttributes function_emptyObject (C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_objectAttributes result_result ; // Returned variable
  result_result = GALGAS_objectAttributes::constructor_new (GALGAS_identifierMap::constructor_emptyMap (SOURCE_FILE ("goil_basic_types.galgas", 52))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 52)) ;
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_emptyObject [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_emptyObject (C_Compiler * inCompiler,
                                                            const cObjectArray & /* inEffectiveParameterArray */,
                                                            const GALGAS_location & /* inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  return function_emptyObject (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_emptyObject ("emptyObject",
                                                             functionWithGenericHeader_emptyObject,
                                                             & kTypeDescriptor_GALGAS_objectAttributes,
                                                             0,
                                                             functionArgs_emptyObject) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'multipleAttributeOrError'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierList function_multipleAttributeOrError (const GALGAS_object_5F_t & constinArgument_t,
                                                         const GALGAS_string & constinArgument_att,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_identifierList result_v ; // Returned variable
  result_v = GALGAS_identifierList::constructor_emptyList (SOURCE_FILE ("goil_basic_types.galgas", 71)) ;
  if (constinArgument_t.isValid ()) {
    if (constinArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_multipleAttribute) {
      GALGAS_multipleAttribute cast_1426_l ((cPtr_multipleAttribute *) constinArgument_t.ptr ()) ;
      result_v = cast_1426_l.reader_items (SOURCE_FILE ("goil_basic_types.galgas", 74)) ;
    }else{
      inCompiler->emitSemanticError (constinArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 76)), GALGAS_string ("Internal error, ").add_operation (constinArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 76)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 76))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 76)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_multipleAttributeOrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_multipleAttributeOrError (C_Compiler * inCompiler,
                                                                         const cObjectArray & inEffectiveParameterArray,
                                                                         const GALGAS_location & /* §§ inErrorLocation */
                                                                         COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_multipleAttributeOrError (operand0,
                                            operand1,
                                            inCompiler
                                            COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_multipleAttributeOrError ("multipleAttributeOrError",
                                                                          functionWithGenericHeader_multipleAttributeOrError,
                                                                          & kTypeDescriptor_GALGAS_identifierList,
                                                                          2,
                                                                          functionArgs_multipleAttributeOrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'boolAttributeOrError'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_boolAttributeOrError (GALGAS_object_5F_t inArgument_t,
                                           GALGAS_string inArgument_att,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_v ; // Returned variable
  result_v = GALGAS_bool (false) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_boolAttribute) {
      GALGAS_boolAttribute cast_1762_attribute ((cPtr_boolAttribute *) inArgument_t.ptr ()) ;
      result_v = cast_1762_attribute.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 92)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 94)), GALGAS_string ("Internal error, ").add_operation (inArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 94)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 94))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 94)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_boolAttributeOrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_boolAttributeOrError (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_boolAttributeOrError (operand0,
                                        operand1,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_boolAttributeOrError ("boolAttributeOrError",
                                                                      functionWithGenericHeader_boolAttributeOrError,
                                                                      & kTypeDescriptor_GALGAS_bool,
                                                                      2,
                                                                      functionArgs_boolAttributeOrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'uint32_or_error'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint function_uint_33__32__5F_or_5F_error (GALGAS_object_5F_t inArgument_t,
                                                  GALGAS_string inArgument_att,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_v ; // Returned variable
  result_v = GALGAS_uint ((uint32_t) 0U) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_33__32__5F_class) {
      GALGAS_uint_33__32__5F_class cast_2223_ui ((cPtr_uint_33__32__5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_2223_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 119)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 121)), inArgument_att.add_operation (GALGAS_string (" is not defined"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 121))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 121)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_uint_33__32__5F_or_5F_error [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_uint_33__32__5F_or_5F_error (C_Compiler * inCompiler,
                                                                            const cObjectArray & inEffectiveParameterArray,
                                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_uint_33__32__5F_or_5F_error (operand0,
                                               operand1,
                                               inCompiler
                                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_uint_33__32__5F_or_5F_error ("uint32_or_error",
                                                                             functionWithGenericHeader_uint_33__32__5F_or_5F_error,
                                                                             & kTypeDescriptor_GALGAS_uint,
                                                                             2,
                                                                             functionArgs_uint_33__32__5F_or_5F_error) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'uint32OrError'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint function_uint_33__32_OrError (GALGAS_object_5F_t inArgument_t,
                                          GALGAS_string inArgument_att,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_v ; // Returned variable
  result_v = GALGAS_uint ((uint32_t) 0U) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_33__32__5F_class) {
      GALGAS_uint_33__32__5F_class cast_2422_ui ((cPtr_uint_33__32__5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_2422_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 132)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 134)), inArgument_att.add_operation (GALGAS_string (" is not defined"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 134))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 134)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_uint_33__32_OrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_uint_33__32_OrError (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_uint_33__32_OrError (operand0,
                                       operand1,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_uint_33__32_OrError ("uint32OrError",
                                                                     functionWithGenericHeader_uint_33__32_OrError,
                                                                     & kTypeDescriptor_GALGAS_uint,
                                                                     2,
                                                                     functionArgs_uint_33__32_OrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'sint32OrError'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint function_sint_33__32_OrError (GALGAS_object_5F_t inArgument_t,
                                          GALGAS_string inArgument_att,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint result_v ; // Returned variable
  result_v = GALGAS_sint ((int32_t) 0L) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_sint_33__32__5F_class) {
      GALGAS_sint_33__32__5F_class cast_2760_ui ((cPtr_sint_33__32__5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_2760_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 152)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 154)), inArgument_att.add_operation (GALGAS_string (" is not defined"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 154))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 154)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_sint_33__32_OrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_sint_33__32_OrError (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_sint_33__32_OrError (operand0,
                                       operand1,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_sint_33__32_OrError ("sint32OrError",
                                                                     functionWithGenericHeader_sint_33__32_OrError,
                                                                     & kTypeDescriptor_GALGAS_sint,
                                                                     2,
                                                                     functionArgs_sint_33__32_OrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'uint64OrError'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint_36__34_ function_uint_36__34_OrError (GALGAS_object_5F_t inArgument_t,
                                                  GALGAS_string inArgument_att,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint_36__34_ result_v ; // Returned variable
  result_v = GALGAS_uint_36__34_ ((uint64_t) 0ULL) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_36__34__5F_class) {
      GALGAS_uint_36__34__5F_class cast_3098_ui ((cPtr_uint_36__34__5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_3098_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 172)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 174)), GALGAS_string ("Internal error, ").add_operation (inArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 174)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 174))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 174)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_uint_36__34_OrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_uint_36__34_OrError (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_uint_36__34_OrError (operand0,
                                       operand1,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_uint_36__34_OrError ("uint64OrError",
                                                                     functionWithGenericHeader_uint_36__34_OrError,
                                                                     & kTypeDescriptor_GALGAS_uint_36__34_,
                                                                     2,
                                                                     functionArgs_uint_36__34_OrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'luint64OrError'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint_36__34_ function_luint_36__34_OrError (GALGAS_object_5F_t inArgument_t,
                                                    GALGAS_string inArgument_att,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_luint_36__34_ result_v ; // Returned variable
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_36__34__5F_class) {
      GALGAS_uint_36__34__5F_class cast_3316_ui ((cPtr_uint_36__34__5F_class *) inArgument_t.ptr ()) ;
      result_v = GALGAS_luint_36__34_::constructor_new (cast_3316_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 184)), cast_3316_ui.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 184))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 184)) ;
    }else{
      result_v = GALGAS_luint_36__34_::constructor_new (GALGAS_uint_36__34_ ((uint64_t) 0ULL), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 186))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 186)) ;
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 187)), GALGAS_string ("Internal error, ").add_operation (inArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 187)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 187))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 187)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_luint_36__34_OrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_luint_36__34_OrError (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_luint_36__34_OrError (operand0,
                                        operand1,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_luint_36__34_OrError ("luint64OrError",
                                                                      functionWithGenericHeader_luint_36__34_OrError,
                                                                      & kTypeDescriptor_GALGAS_luint_36__34_,
                                                                      2,
                                                                      functionArgs_luint_36__34_OrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'sint64OrError'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_36__34_ function_sint_36__34_OrError (GALGAS_object_5F_t inArgument_t,
                                                  GALGAS_string inArgument_att,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint_36__34_ result_v ; // Returned variable
  result_v = GALGAS_sint_36__34_ ((int64_t) 0LL) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_sint_36__34__5F_class) {
      GALGAS_sint_36__34__5F_class cast_3758_ui ((cPtr_sint_36__34__5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_3758_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 205)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 207)), GALGAS_string ("Internal error, ").add_operation (inArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 207)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 207))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 207)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_sint_36__34_OrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_sint_36__34_OrError (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_sint_36__34_OrError (operand0,
                                       operand1,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_sint_36__34_OrError ("sint64OrError",
                                                                     functionWithGenericHeader_sint_36__34_OrError,
                                                                     & kTypeDescriptor_GALGAS_sint_36__34_,
                                                                     2,
                                                                     functionArgs_sint_36__34_OrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'floatOrError'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_double function_floatOrError (GALGAS_object_5F_t inArgument_t,
                                     GALGAS_string inArgument_att,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_double result_v ; // Returned variable
  result_v = GALGAS_double (0) ;
  if (inArgument_t.isValid ()) {
    if (inArgument_t.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_float_5F_class) {
      GALGAS_float_5F_class cast_4108_ui ((cPtr_float_5F_class *) inArgument_t.ptr ()) ;
      result_v = cast_4108_ui.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 225)) ;
    }else{
      inCompiler->emitSemanticError (inArgument_t.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 227)), GALGAS_string ("Internal error, ").add_operation (inArgument_att, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 227)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 227))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 227)) ;
    }
  }
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_floatOrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_floatOrError (C_Compiler * inCompiler,
                                                             const cObjectArray & inEffectiveParameterArray,
                                                             const GALGAS_location & /* §§ inErrorLocation */
                                                             COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_floatOrError (operand0,
                                operand1,
                                inCompiler
                                COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_floatOrError ("floatOrError",
                                                              functionWithGenericHeader_floatOrError,
                                                              & kTypeDescriptor_GALGAS_double,
                                                              2,
                                                              functionArgs_floatOrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Function 'stringAttributeOrError'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_stringAttributeOrError (const GALGAS_object_5F_t & constinArgument_attribute,
                                                const GALGAS_string & constinArgument_attributeName,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_result ; // Returned variable
  result_result = function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 249)) ;
  if (constinArgument_attribute.isValid ()) {
    if (constinArgument_attribute.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_stringAttribute) {
      GALGAS_stringAttribute cast_4660_attribute ((cPtr_stringAttribute *) constinArgument_attribute.ptr ()) ;
      result_result = GALGAS_lstring::constructor_new (cast_4660_attribute.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 252)), cast_4660_attribute.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 252))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 252)) ;
    }else{
      inCompiler->emitSemanticError (constinArgument_attribute.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 254)), GALGAS_string ("Internal error ").add_operation (constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 254)).add_operation (GALGAS_string (" has a wrong datatype"), inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 254))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 254)) ;
    }
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringAttributeOrError [3] = {
  & kTypeDescriptor_GALGAS_object_5F_t,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringAttributeOrError (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & /* §§ inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_object_5F_t operand0 = GALGAS_object_5F_t::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_stringAttributeOrError (operand0,
                                          operand1,
                                          inCompiler
                                          COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringAttributeOrError ("stringAttributeOrError",
                                                                        functionWithGenericHeader_stringAttributeOrError,
                                                                        & kTypeDescriptor_GALGAS_lstring,
                                                                        2,
                                                                        functionArgs_stringAttributeOrError) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'empty_lstring'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_empty_5F_lstring (C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_ls ; // Returned variable
  result_ls = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 424))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 424)) ;
//---
  return result_ls ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_empty_5F_lstring [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_empty_5F_lstring (C_Compiler * inCompiler,
                                                                 const cObjectArray & /* inEffectiveParameterArray */,
                                                                 const GALGAS_location & /* inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  return function_empty_5F_lstring (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_empty_5F_lstring ("empty_lstring",
                                                                  functionWithGenericHeader_empty_5F_lstring,
                                                                  & kTypeDescriptor_GALGAS_lstring,
                                                                  0,
                                                                  functionArgs_empty_5F_lstring) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Function 'void_obj'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_object_5F_t function_void_5F_obj (C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_object_5F_t result_v ; // Returned variable
  result_v = GALGAS_void::constructor_new (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_basic_types.galgas", 429)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 429))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 429)) ;
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_void_5F_obj [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_void_5F_obj (C_Compiler * inCompiler,
                                                            const cObjectArray & /* inEffectiveParameterArray */,
                                                            const GALGAS_location & /* inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  return function_void_5F_obj (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_void_5F_obj ("void_obj",
                                                             functionWithGenericHeader_void_5F_obj,
                                                             & kTypeDescriptor_GALGAS_object_5F_t,
                                                             0,
                                                             functionArgs_void_5F_obj) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'luint64_value'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint_36__34_ function_luint_36__34__5F_value (const GALGAS_uint_36__34__5F_class & constinArgument_c,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_luint_36__34_ result_v ; // Returned variable
  result_v = GALGAS_luint_36__34_::constructor_new (constinArgument_c.reader_value (SOURCE_FILE ("goil_basic_types.galgas", 623)), constinArgument_c.reader_location (SOURCE_FILE ("goil_basic_types.galgas", 623))  COMMA_SOURCE_FILE ("goil_basic_types.galgas", 623)) ;
//---
  return result_v ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_luint_36__34__5F_value [2] = {
  & kTypeDescriptor_GALGAS_uint_36__34__5F_class,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_luint_36__34__5F_value (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & /* §§ inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_uint_36__34__5F_class operand0 = GALGAS_uint_36__34__5F_class::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                             inCompiler
                                                                                             COMMA_THERE) ;
  return function_luint_36__34__5F_value (operand0,
                                          inCompiler
                                          COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_luint_36__34__5F_value ("luint64_value",
                                                                        functionWithGenericHeader_luint_36__34__5F_value,
                                                                        & kTypeDescriptor_GALGAS_luint_36__34_,
                                                                        1,
                                                                        functionArgs_luint_36__34__5F_value) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'projectName'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_projectName (C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_directory ; // Returned variable
  result_directory = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 4)).reader_stringByDeletingPathExtension (SOURCE_FILE ("goil_routines.galgas", 4)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, GALGAS_string (gOption_goil_5F_options_project_5F_dir.reader_value ()).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_directory = GALGAS_string (gOption_goil_5F_options_project_5F_dir.reader_value ()) ;
  }
//---
  return result_directory ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_projectName [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_projectName (C_Compiler * inCompiler,
                                                            const cObjectArray & /* inEffectiveParameterArray */,
                                                            const GALGAS_location & /* inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  return function_projectName (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_projectName ("projectName",
                                                             functionWithGenericHeader_projectName,
                                                             & kTypeDescriptor_GALGAS_string,
                                                             0,
                                                             functionArgs_projectName) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Function 'oil_dir'                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_oil_5F_dir (C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_dir ; // Returned variable
  result_dir = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 11)).reader_stringByDeletingLastPathComponent (SOURCE_FILE ("goil_routines.galgas", 11)) ;
//---
  return result_dir ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_oil_5F_dir [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_oil_5F_dir (C_Compiler * inCompiler,
                                                           const cObjectArray & /* inEffectiveParameterArray */,
                                                           const GALGAS_location & /* inErrorLocation */
                                                           COMMA_LOCATION_ARGS) {
  return function_oil_5F_dir (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_oil_5F_dir ("oil_dir",
                                                            functionWithGenericHeader_oil_5F_dir,
                                                            & kTypeDescriptor_GALGAS_string,
                                                            0,
                                                            functionArgs_oil_5F_dir) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   Function 'arch'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_arch (C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_arch_5F_name ; // Returned variable
  GALGAS_stringlist var_components = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()).reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE ("goil_routines.galgas", 19)) ;
  var_components.method_first (result_arch_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 20)) ;
//---
  return result_arch_5F_name ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_arch [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_arch (C_Compiler * inCompiler,
                                                     const cObjectArray & /* inEffectiveParameterArray */,
                                                     const GALGAS_location & /* inErrorLocation */
                                                     COMMA_LOCATION_ARGS) {
  return function_arch (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_arch ("arch",
                                                      functionWithGenericHeader_arch,
                                                      & kTypeDescriptor_GALGAS_string,
                                                      0,
                                                      functionArgs_arch) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   Function 'chip'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_chip (C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_chip_5F_name ; // Returned variable
  GALGAS_stringlist var_components = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()).reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE ("goil_routines.galgas", 28)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 29)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_chip_5F_name = var_components.reader_mValueAtIndex (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 30)) ;
  }else if (kBoolFalse == test_0) {
    result_chip_5F_name = GALGAS_string::makeEmptyString () ;
  }
//---
  return result_chip_5F_name ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_chip [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_chip (C_Compiler * inCompiler,
                                                     const cObjectArray & /* inEffectiveParameterArray */,
                                                     const GALGAS_location & /* inErrorLocation */
                                                     COMMA_LOCATION_ARGS) {
  return function_chip (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_chip ("chip",
                                                      functionWithGenericHeader_chip,
                                                      & kTypeDescriptor_GALGAS_string,
                                                      0,
                                                      functionArgs_chip) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  Function 'board'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_board (C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_board_5F_name ; // Returned variable
  GALGAS_stringlist var_components = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()).reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE ("goil_routines.galgas", 40)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 41)).objectCompare (GALGAS_uint ((uint32_t) 2U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_board_5F_name = var_components.reader_mValueAtIndex (GALGAS_uint ((uint32_t) 2U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 42)) ;
  }else if (kBoolFalse == test_0) {
    result_board_5F_name = GALGAS_string::makeEmptyString () ;
  }
//---
  return result_board_5F_name ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_board [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_board (C_Compiler * inCompiler,
                                                      const cObjectArray & /* inEffectiveParameterArray */,
                                                      const GALGAS_location & /* inErrorLocation */
                                                      COMMA_LOCATION_ARGS) {
  return function_board (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_board ("board",
                                                       functionWithGenericHeader_board,
                                                       & kTypeDescriptor_GALGAS_string,
                                                       0,
                                                       functionArgs_board) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'add_path_component'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_add_5F_path_5F_component (GALGAS_string inArgument_path,
                                                 GALGAS_string inArgument_component,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_new_5F_path ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inArgument_path.reader_characterAtIndex (inArgument_path.reader_length (SOURCE_FILE ("goil_routines.galgas", 55)).substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 55)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 55)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_new_5F_path = inArgument_path.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 56)).add_operation (inArgument_component, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 56)) ;
  }else if (kBoolFalse == test_0) {
    result_new_5F_path = inArgument_path.add_operation (inArgument_component, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 58)) ;
  }
//---
  return result_new_5F_path ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_add_5F_path_5F_component [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_add_5F_path_5F_component (C_Compiler * inCompiler,
                                                                         const cObjectArray & inEffectiveParameterArray,
                                                                         const GALGAS_location & /* §§ inErrorLocation */
                                                                         COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_add_5F_path_5F_component (operand0,
                                            operand1,
                                            inCompiler
                                            COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_add_5F_path_5F_component ("add_path_component",
                                                                          functionWithGenericHeader_add_5F_path_5F_component,
                                                                          & kTypeDescriptor_GALGAS_string,
                                                                          2,
                                                                          functionArgs_add_5F_path_5F_component) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Function 'rootTemplatesDirectory'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_rootTemplatesDirectory (C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_templateDirectory ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, GALGAS_string (gOption_goil_5F_options_template_5F_dir.reader_value ()).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_templateDirectory = GALGAS_string (gOption_goil_5F_options_template_5F_dir.reader_value ()) ;
  }else if (kBoolFalse == test_0) {
    result_templateDirectory = GALGAS_string::constructor_stringWithEnvironmentVariableOrEmpty (GALGAS_string ("GOIL_TEMPLATES")  COMMA_SOURCE_FILE ("goil_routines.galgas", 67)) ;
  }
  result_templateDirectory = result_templateDirectory.reader_unixPathWithNativePath (SOURCE_FILE ("goil_routines.galgas", 69)) ;
  result_templateDirectory = result_templateDirectory.reader_stringByStandardizingPath (SOURCE_FILE ("goil_routines.galgas", 70)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, result_templateDirectory.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 71)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_string var_currentDirectory = GALGAS_string::constructor_stringWithCurrentDirectory (SOURCE_FILE ("goil_routines.galgas", 72)) ;
    result_templateDirectory = var_currentDirectory.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 73)).add_operation (result_templateDirectory, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 73)) ;
    result_templateDirectory = result_templateDirectory.reader_stringByStandardizingPath (SOURCE_FILE ("goil_routines.galgas", 74)) ;
  }
//---
  return result_templateDirectory ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_rootTemplatesDirectory [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_rootTemplatesDirectory (C_Compiler * inCompiler,
                                                                       const cObjectArray & /* inEffectiveParameterArray */,
                                                                       const GALGAS_location & /* inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  return function_rootTemplatesDirectory (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_rootTemplatesDirectory ("rootTemplatesDirectory",
                                                                        functionWithGenericHeader_rootTemplatesDirectory,
                                                                        & kTypeDescriptor_GALGAS_string,
                                                                        0,
                                                                        functionArgs_rootTemplatesDirectory) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'templates_directory'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_templates_5F_directory (GALGAS_string inArgument_prefix,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_temp_5F_dir ; // Returned variable
  result_temp_5F_dir = function_rootTemplatesDirectory (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 79)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, result_temp_5F_dir.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_temp_5F_dir = function_add_5F_path_5F_component (result_temp_5F_dir, inArgument_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 81)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, result_temp_5F_dir.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 83)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_curdir = GALGAS_string::constructor_stringWithCurrentDirectory (SOURCE_FILE ("goil_routines.galgas", 84)) ;
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, result_temp_5F_dir.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 85)).objectCompare (GALGAS_char (TO_UNICODE (46)))).operator_and (GALGAS_bool (kIsEqual, result_temp_5F_dir.reader_characterAtIndex (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 85)).objectCompare (GALGAS_char (TO_UNICODE (47)))) COMMA_SOURCE_FILE ("goil_routines.galgas", 85)).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_temp_5F_dir = result_temp_5F_dir.reader_stringByRemovingCharacterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 86)).reader_stringByRemovingCharacterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 86)) ;
      }
      result_temp_5F_dir = var_curdir.add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 88)).add_operation (result_temp_5F_dir, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 88)) ;
    }
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, result_temp_5F_dir.reader_characterAtIndex (result_temp_5F_dir.reader_length (SOURCE_FILE ("goil_routines.galgas", 90)).substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 90)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 90)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      result_temp_5F_dir.dotAssign_operation (GALGAS_string ("/")  COMMA_SOURCE_FILE ("goil_routines.galgas", 91)) ;
    }
  }
//---
  return result_temp_5F_dir ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_templates_5F_directory [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_templates_5F_directory (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & /* §§ inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_templates_5F_directory (operand0,
                                          inCompiler
                                          COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_templates_5F_directory ("templates_directory",
                                                                        functionWithGenericHeader_templates_5F_directory,
                                                                        & kTypeDescriptor_GALGAS_string,
                                                                        1,
                                                                        functionArgs_templates_5F_directory) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Function 'template_string_if_exist'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_template_5F_string_5F_if_5F_exist (GALGAS_string inArgument_prefix,
                                                          GALGAS_string inArgument_obj,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_tpl ; // Returned variable
  GALGAS_string var_targ_5F_tpl = GALGAS_string::makeEmptyString () ;
  GALGAS_string var_temp_5F_dir ;
  var_temp_5F_dir = function_templates_5F_directory (inArgument_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 108)) ;
  GALGAS_string var_temp_5F_name = inArgument_obj.add_operation (GALGAS_string (".tpl"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 111)) ;
  var_targ_5F_tpl = var_temp_5F_dir.add_operation (function_arch (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (function_chip (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (function_board (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)).add_operation (var_temp_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 113)) ;
  const enumGalgasBool test_0 = var_targ_5F_tpl.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 114)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_tpl = GALGAS_string::constructor_stringWithContentsOfFile (var_targ_5F_tpl, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 115)) ;
  }else if (kBoolFalse == test_0) {
    var_targ_5F_tpl = var_temp_5F_dir.add_operation (function_arch (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)).add_operation (function_chip (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)).add_operation (var_temp_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 117)) ;
    const enumGalgasBool test_1 = var_targ_5F_tpl.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 118)).boolEnum () ;
    if (kBoolTrue == test_1) {
      result_tpl = GALGAS_string::constructor_stringWithContentsOfFile (var_targ_5F_tpl, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 119)) ;
    }else if (kBoolFalse == test_1) {
      var_targ_5F_tpl = var_temp_5F_dir.add_operation (function_arch (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 121)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 121)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 121)).add_operation (var_temp_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 121)) ;
      const enumGalgasBool test_2 = var_targ_5F_tpl.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 122)).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_tpl = GALGAS_string::constructor_stringWithContentsOfFile (var_targ_5F_tpl, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 123)) ;
      }else if (kBoolFalse == test_2) {
        var_targ_5F_tpl = var_temp_5F_dir.add_operation (GALGAS_string ("all_targets/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 126)).add_operation (var_temp_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 126)) ;
        const enumGalgasBool test_3 = var_targ_5F_tpl.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 127)).boolEnum () ;
        if (kBoolTrue == test_3) {
          result_tpl = GALGAS_string::constructor_stringWithContentsOfFile (var_targ_5F_tpl, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 128)) ;
        }else if (kBoolFalse == test_3) {
          var_targ_5F_tpl = var_temp_5F_dir.add_operation (var_temp_5F_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 130)) ;
          const enumGalgasBool test_4 = var_targ_5F_tpl.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 131)).boolEnum () ;
          if (kBoolTrue == test_4) {
            result_tpl = GALGAS_string::constructor_stringWithContentsOfFile (var_targ_5F_tpl, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 132)) ;
          }else if (kBoolFalse == test_4) {
            result_tpl = GALGAS_string::makeEmptyString () ;
          }
        }
      }
    }
  }
//---
  return result_tpl ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_template_5F_string_5F_if_5F_exist [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_template_5F_string_5F_if_5F_exist (C_Compiler * inCompiler,
                                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                                  const GALGAS_location & /* §§ inErrorLocation */
                                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_template_5F_string_5F_if_5F_exist (operand0,
                                                     operand1,
                                                     inCompiler
                                                     COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_template_5F_string_5F_if_5F_exist ("template_string_if_exist",
                                                                                   functionWithGenericHeader_template_5F_string_5F_if_5F_exist,
                                                                                   & kTypeDescriptor_GALGAS_string,
                                                                                   2,
                                                                                   functionArgs_template_5F_string_5F_if_5F_exist) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'template_string'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_template_5F_string (GALGAS_string inArgument_prefix,
                                           GALGAS_string inArgument_obj,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_tpl ; // Returned variable
  result_tpl = function_template_5F_string_5F_if_5F_exist (inArgument_prefix, inArgument_obj, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 145)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, result_tpl.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_target_5F_platform = function_arch (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 147)) ;
    GALGAS_string var_temp_5F_dir ;
    var_temp_5F_dir = function_templates_5F_directory (inArgument_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 149)) ;
    inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 150)), GALGAS_string ("No template found for ").add_operation (inArgument_obj, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 150)).add_operation (GALGAS_string (" (searched in "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 150)).add_operation (var_temp_5F_dir, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 150)).add_operation (var_target_5F_platform, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 150)).add_operation (GALGAS_string (" and in "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 150)).add_operation (var_temp_5F_dir, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 151)).add_operation (GALGAS_string ("all_targets)"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 151))  COMMA_SOURCE_FILE ("goil_routines.galgas", 150)) ;
  }
//---
  return result_tpl ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_template_5F_string [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_template_5F_string (C_Compiler * inCompiler,
                                                                   const cObjectArray & inEffectiveParameterArray,
                                                                   const GALGAS_location & /* §§ inErrorLocation */
                                                                   COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_template_5F_string (operand0,
                                      operand1,
                                      inCompiler
                                      COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_template_5F_string ("template_string",
                                                                    functionWithGenericHeader_template_5F_string,
                                                                    & kTypeDescriptor_GALGAS_string,
                                                                    2,
                                                                    functionArgs_template_5F_string) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'templateFilePath'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_templateFilePath (const GALGAS_string & constinArgument_prefix,
                                         const GALGAS_string & constinArgument_file,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_path ; // Returned variable
  GALGAS_stringlist var_components = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()).reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE ("goil_routines.galgas", 159)) ;
  GALGAS_string var_templateDir = function_templates_5F_directory (constinArgument_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 160)) ;
  GALGAS_bool var_notFound = GALGAS_bool (true) ;
  GALGAS_bool var_notOver = GALGAS_bool (true) ;
  result_path = GALGAS_string::makeEmptyString () ;
  if (var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 165)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 165)).isValid ()) {
    uint32_t variant_5193 = var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 165)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 165)).uintValue () ;
    bool loop_5193 = true ;
    while (loop_5193) {
      loop_5193 = var_notFound.operator_and (var_notOver COMMA_SOURCE_FILE ("goil_routines.galgas", 166)).isValid () ;
      if (loop_5193) {
        loop_5193 = var_notFound.operator_and (var_notOver COMMA_SOURCE_FILE ("goil_routines.galgas", 166)).boolValue () ;
      }
      if (loop_5193 && (0 == variant_5193)) {
        loop_5193 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("goil_routines.galgas", 165)) ;
      }
      if (loop_5193) {
        variant_5193 -- ;
        GALGAS_string var_targetPath = var_templateDir.add_operation (GALGAS_string::constructor_componentsJoinedByString (var_components, GALGAS_string ("/")  COMMA_SOURCE_FILE ("goil_routines.galgas", 167)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 167)).add_operation (GALGAS_string ("/"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 167)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 167)) ;
        const enumGalgasBool test_0 = var_targetPath.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 169)).boolEnum () ;
        if (kBoolTrue == test_0) {
          var_notFound = GALGAS_bool (false) ;
          result_path = var_targetPath ;
        }
        const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 173)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_1) {
          {
          GALGAS_string joker_5546_0 ; // Joker input parameter
          var_components.modifier_popLast (joker_5546_0, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 174)) ;
          }
        }else if (kBoolFalse == test_1) {
          var_notOver = GALGAS_bool (false) ;
        }
      }
    }
  }
//---
  return result_path ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_templateFilePath [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_templateFilePath (C_Compiler * inCompiler,
                                                                 const cObjectArray & inEffectiveParameterArray,
                                                                 const GALGAS_location & /* §§ inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_templateFilePath (operand0,
                                    operand1,
                                    inCompiler
                                    COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_templateFilePath ("templateFilePath",
                                                                  functionWithGenericHeader_templateFilePath,
                                                                  & kTypeDescriptor_GALGAS_string,
                                                                  2,
                                                                  functionArgs_templateFilePath) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'allTemplateFilePaths'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist function_allTemplateFilePaths (const GALGAS_string & constinArgument_prefix,
                                                 const GALGAS_string & constinArgument_file,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringlist result_paths ; // Returned variable
  GALGAS_stringlist var_components = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()).reader_componentsSeparatedByString (GALGAS_string ("/") COMMA_SOURCE_FILE ("goil_routines.galgas", 185)) ;
  GALGAS_string var_templateDir = function_templates_5F_directory (constinArgument_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 186)) ;
  GALGAS_bool var_notOver = GALGAS_bool (true) ;
  result_paths = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("goil_routines.galgas", 188)) ;
  if (var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 190)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 190)).isValid ()) {
    uint32_t variant_5913 = var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 190)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 190)).uintValue () ;
    bool loop_5913 = true ;
    while (loop_5913) {
      loop_5913 = var_notOver.isValid () ;
      if (loop_5913) {
        loop_5913 = var_notOver.boolValue () ;
      }
      if (loop_5913 && (0 == variant_5913)) {
        loop_5913 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("goil_routines.galgas", 190)) ;
      }
      if (loop_5913) {
        variant_5913 -- ;
        GALGAS_string var_intermediatePath = GALGAS_string::constructor_componentsJoinedByString (var_components, GALGAS_string ("/")  COMMA_SOURCE_FILE ("goil_routines.galgas", 192)) ;
        const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_intermediatePath.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_0) {
          var_intermediatePath.dotAssign_operation (GALGAS_string ("/")  COMMA_SOURCE_FILE ("goil_routines.galgas", 193)) ;
        }
        GALGAS_string var_targetPath = var_templateDir.add_operation (var_intermediatePath, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 194)).add_operation (constinArgument_file, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 194)) ;
        const enumGalgasBool test_1 = var_targetPath.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 196)).boolEnum () ;
        if (kBoolTrue == test_1) {
          result_paths.addAssign_operation (var_targetPath  COMMA_SOURCE_FILE ("goil_routines.galgas", 197)) ;
        }
        const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_components.reader_length (SOURCE_FILE ("goil_routines.galgas", 199)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          GALGAS_string joker_6342_0 ; // Joker input parameter
          var_components.modifier_popLast (joker_6342_0, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 200)) ;
          }
        }else if (kBoolFalse == test_2) {
          var_notOver = GALGAS_bool (false) ;
        }
      }
    }
  }
//---
  return result_paths ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_allTemplateFilePaths [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_allTemplateFilePaths (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_allTemplateFilePaths (operand0,
                                        operand1,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_allTemplateFilePaths ("allTemplateFilePaths",
                                                                      functionWithGenericHeader_allTemplateFilePaths,
                                                                      & kTypeDescriptor_GALGAS_stringlist,
                                                                      2,
                                                                      functionArgs_allTemplateFilePaths) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'config_file'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_config_5F_file (C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_cfg_5F_file ; // Returned variable
  GALGAS_string var_cfg = function_templateFilePath (GALGAS_string ("config"), GALGAS_string ("target.cfg"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 208)) ;
  result_cfg_5F_file = GALGAS_lstring::constructor_new (var_cfg, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 210))  COMMA_SOURCE_FILE ("goil_routines.galgas", 210)) ;
//---
  return result_cfg_5F_file ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_config_5F_file [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_config_5F_file (C_Compiler * inCompiler,
                                                               const cObjectArray & /* inEffectiveParameterArray */,
                                                               const GALGAS_location & /* inErrorLocation */
                                                               COMMA_LOCATION_ARGS) {
  return function_config_5F_file (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_config_5F_file ("config_file",
                                                                functionWithGenericHeader_config_5F_file,
                                                                & kTypeDescriptor_GALGAS_lstring,
                                                                0,
                                                                functionArgs_config_5F_file) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'extra_config_file'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_extra_5F_config_5F_file (C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_cfg_5F_file ; // Returned variable
  GALGAS_string var_cfg = function_oil_5F_dir (inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 214)).add_operation (GALGAS_string ("/target.cfg"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 214)) ;
  const enumGalgasBool test_0 = var_cfg.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 215)).operator_not (SOURCE_FILE ("goil_routines.galgas", 215)).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_cfg = GALGAS_string::makeEmptyString () ;
  }
  result_cfg_5F_file = GALGAS_lstring::constructor_new (var_cfg, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 218))  COMMA_SOURCE_FILE ("goil_routines.galgas", 218)) ;
//---
  return result_cfg_5F_file ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_extra_5F_config_5F_file [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_extra_5F_config_5F_file (C_Compiler * inCompiler,
                                                                        const cObjectArray & /* inEffectiveParameterArray */,
                                                                        const GALGAS_location & /* inErrorLocation */
                                                                        COMMA_LOCATION_ARGS) {
  return function_extra_5F_config_5F_file (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_extra_5F_config_5F_file ("extra_config_file",
                                                                         functionWithGenericHeader_extra_5F_config_5F_file,
                                                                         & kTypeDescriptor_GALGAS_lstring,
                                                                         0,
                                                                         functionArgs_extra_5F_config_5F_file) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  Routine 'prefix'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_prefix (GALGAS_prefix_5F_map inArgument_p,
                     GALGAS_string inArgument_key,
                     GALGAS_string & outArgument_val,
                     C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_val.drop () ; // Release 'out' argument
  GALGAS_lstring var_lkey = GALGAS_lstring::constructor_new (inArgument_key, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 222))  COMMA_SOURCE_FILE ("goil_routines.galgas", 222)) ;
  GALGAS_string joker_6906_0 ; // Joker input parameter
  inArgument_p.method_prefix (var_lkey, outArgument_val, joker_6906_0, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 223)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Routine 'performReplace'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_performReplace (GALGAS_prefix_5F_map inArgument_p,
                             GALGAS_string inArgument_key,
                             GALGAS_string inArgument_name,
                             GALGAS_string & ioArgument_res,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring var_lkey = GALGAS_lstring::constructor_new (inArgument_key, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 227))  COMMA_SOURCE_FILE ("goil_routines.galgas", 227)) ;
  GALGAS_string var_prefix ;
  GALGAS_string var_tag_5F_to_5F_rep ;
  inArgument_p.method_prefix (var_lkey, var_prefix, var_tag_5F_to_5F_rep, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 230)) ;
  ioArgument_res = ioArgument_res.reader_stringByReplacingStringByString (var_tag_5F_to_5F_rep, var_prefix.add_operation (inArgument_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 231)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 231)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'doReplace'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_doReplace (GALGAS_string & ioArgument_s,
                        GALGAS_string inArgument_o,
                        GALGAS_string inArgument_n,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_s = ioArgument_s.reader_stringByReplacingStringByString (inArgument_o, inArgument_n, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 235)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'do_replace_default'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_do_5F_replace_5F_default (GALGAS_string & ioArgument_s,
                                       GALGAS_string inArgument_o,
                                       GALGAS_string inArgument_n,
                                       GALGAS_string inArgument_d,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inArgument_n.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_s = ioArgument_s.reader_stringByReplacingStringByString (inArgument_o, inArgument_n, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 240)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_s = ioArgument_s.reader_stringByReplacingStringByString (inArgument_o, inArgument_d, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 242)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'replace_no_prefix'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_replace_5F_no_5F_prefix (GALGAS_prefix_5F_map inArgument_p,
                                      GALGAS_string inArgument_key,
                                      GALGAS_string inArgument_name,
                                      GALGAS_string & ioArgument_res,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring var_lkey = GALGAS_lstring::constructor_new (inArgument_key, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 247))  COMMA_SOURCE_FILE ("goil_routines.galgas", 247)) ;
  GALGAS_string var_tag_5F_to_5F_rep ;
  GALGAS_string joker_7719_0 ; // Joker input parameter
  inArgument_p.method_prefix (var_lkey, joker_7719_0, var_tag_5F_to_5F_rep, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 250)) ;
  ioArgument_res = ioArgument_res.reader_stringByReplacingStringByString (var_tag_5F_to_5F_rep, inArgument_name, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 251)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Routine 'table_core'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_table_5F_core (GALGAS_string inArgument_typename,
                            GALGAS_string inArgument_varname,
                            GALGAS_string inArgument_obj_5F_prefix,
                            GALGAS_stringset inArgument_names,
                            GALGAS_string & ioArgument_header,
                            GALGAS_string & ioArgument_implementation,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_n = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_stringset enumerator_8185 (inArgument_names, kEnumeration_up) ;
  while (enumerator_8185.hasCurrentObject ()) {
    ioArgument_header = ioArgument_header.add_operation (GALGAS_string ("#define "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (inArgument_varname, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (GALGAS_string ("_id_of_"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (enumerator_8185.current_key (HERE), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (GALGAS_string ("  "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (var_n.reader_string (SOURCE_FILE ("goil_routines.galgas", 270)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 270)) ;
    ioArgument_header = ioArgument_header.add_operation (GALGAS_string ("#define "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (enumerator_8185.current_key (HERE), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (GALGAS_string ("  "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (inArgument_varname, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (GALGAS_string ("_id_of_"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (enumerator_8185.current_key (HERE), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 278)) ;
    ioArgument_implementation = ioArgument_implementation.add_operation (GALGAS_string ("    (tpl_"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 279)).add_operation (inArgument_typename, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 279)).add_operation (GALGAS_string (" *)&"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 279)).add_operation (inArgument_obj_5F_prefix, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 279)).add_operation (enumerator_8185.current_key (HERE), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 279)) ;
    var_n.increment_operation (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 280)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_n.objectCompare (inArgument_names.reader_count (SOURCE_FILE ("goil_routines.galgas", 281)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_implementation = ioArgument_implementation.add_operation (GALGAS_string (",\n"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 282)) ;
    }else if (kBoolFalse == test_0) {
      ioArgument_implementation = ioArgument_implementation.add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 283)) ;
    }
    enumerator_8185.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'add_to_stringset'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_add_5F_to_5F_stringset (GALGAS_stringset & ioArgument_ss,
                                     GALGAS_string inArgument_new,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = ioArgument_ss.reader_hasKey (inArgument_new COMMA_SOURCE_FILE ("goil_routines.galgas", 388)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 389)), GALGAS_string ("'").add_operation (inArgument_new, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 389)).add_operation (GALGAS_string ("' is already declared before"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 389))  COMMA_SOURCE_FILE ("goil_routines.galgas", 389)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ss.addAssign_operation (inArgument_new  COMMA_SOURCE_FILE ("goil_routines.galgas", 391)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'file_in_path'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_file_5F_in_5F_path (GALGAS_lstring & ioArgument_file_5F_name,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_include_5F_path = GALGAS_string::constructor_stringWithEnvironmentVariable (GALGAS_string ("GOIL_INCLUDE_PATH"), inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 397)) ;
  GALGAS_stringlist var_path_5F_list = var_include_5F_path.reader_componentsSeparatedByString (GALGAS_string (":") COMMA_SOURCE_FILE ("goil_routines.galgas", 398)) ;
  GALGAS_bool var_not_5F_found = GALGAS_bool (true) ;
  cEnumerator_stringlist enumerator_12210 (var_path_5F_list, kEnumeration_up) ;
  while (enumerator_12210.hasCurrentObject ()) {
    GALGAS_string var_full_5F_file_5F_path = enumerator_12210.current_mValue (HERE) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_full_5F_file_5F_path.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_full_5F_file_5F_path.reader_characterAtIndex (var_full_5F_file_5F_path.reader_length (SOURCE_FILE ("goil_routines.galgas", 403)).substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 403)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 403)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_full_5F_file_5F_path.dotAssign_operation (GALGAS_string ("/")  COMMA_SOURCE_FILE ("goil_routines.galgas", 404)) ;
      }
    }
    var_full_5F_file_5F_path.dotAssign_operation (ioArgument_file_5F_name.reader_string (SOURCE_FILE ("goil_routines.galgas", 407))  COMMA_SOURCE_FILE ("goil_routines.galgas", 407)) ;
    const enumGalgasBool test_2 = var_full_5F_file_5F_path.reader_fileExists (SOURCE_FILE ("goil_routines.galgas", 408)).operator_and (var_not_5F_found COMMA_SOURCE_FILE ("goil_routines.galgas", 408)).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_file_5F_name = GALGAS_lstring::constructor_new (var_full_5F_file_5F_path, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 409))  COMMA_SOURCE_FILE ("goil_routines.galgas", 409)) ;
      var_not_5F_found = GALGAS_bool (false) ;
    }
    enumerator_12210.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'is_in_lstringlist'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_is_5F_in_5F_lstringlist (GALGAS_lstringlist inArgument_l,
                                      GALGAS_lstring inArgument_e,
                                      GALGAS_lstring & outArgument_f,
                                      GALGAS_bool & outArgument_p,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_f.drop () ; // Release 'out' argument
  outArgument_p.drop () ; // Release 'out' argument
  outArgument_p = GALGAS_bool (false) ;
  outArgument_f = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 421))  COMMA_SOURCE_FILE ("goil_routines.galgas", 421)) ;
  cEnumerator_lstringlist enumerator_12853 (inArgument_l, kEnumeration_up) ;
  while (enumerator_12853.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_12853.current_mValue (HERE).reader_string (SOURCE_FILE ("goil_routines.galgas", 423)).objectCompare (inArgument_e.reader_string (SOURCE_FILE ("goil_routines.galgas", 423)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      outArgument_p = GALGAS_bool (true) ;
      outArgument_f = enumerator_12853.current_mValue (HERE) ;
    }
    enumerator_12853.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Function 'isInLstringlist'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_isInLstringlist (GALGAS_lstringlist inArgument_l,
                                      GALGAS_lstring inArgument_e,
                                      C_Compiler * /* inCompiler */
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_p ; // Returned variable
  result_p = GALGAS_bool (false) ;
  cEnumerator_lstringlist enumerator_13051 (inArgument_l, kEnumeration_up) ;
  while (enumerator_13051.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_13051.current_mValue (HERE).reader_string (SOURCE_FILE ("goil_routines.galgas", 436)).objectCompare (inArgument_e.reader_string (SOURCE_FILE ("goil_routines.galgas", 436)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      result_p = GALGAS_bool (true) ;
    }
    enumerator_13051.gotoNextObject () ;
  }
//---
  return result_p ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_isInLstringlist [3] = {
  & kTypeDescriptor_GALGAS_lstringlist,
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_isInLstringlist (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_lstringlist operand0 = GALGAS_lstringlist::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                         inCompiler
                                                                         COMMA_THERE) ;
  const GALGAS_lstring operand1 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_isInLstringlist (operand0,
                                   operand1,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_isInLstringlist ("isInLstringlist",
                                                                 functionWithGenericHeader_isInLstringlist,
                                                                 & kTypeDescriptor_GALGAS_bool,
                                                                 2,
                                                                 functionArgs_isInLstringlist) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'add_lstring_unique'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_add_5F_lstring_5F_unique (GALGAS_lstringlist & ioArgument_l,
                                       GALGAS_lstring inArgument_e,
                                       GALGAS_string inArgument_att,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_found ;
  GALGAS_lstring var_res ;
  {
  routine_is_5F_in_5F_lstringlist (ioArgument_l, inArgument_e, var_res, var_found, inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 448)) ;
  }
  const enumGalgasBool test_0 = var_found.boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (inArgument_e.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, inArgument_att.add_operation (GALGAS_string (" "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 450)).add_operation (inArgument_e.reader_string (SOURCE_FILE ("goil_routines.galgas", 450)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 450)).add_operation (GALGAS_string (" has already be listed"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 450))  COMMA_SOURCE_FILE ("goil_routines.galgas", 450)) ;
    GALGAS_location location_2 (var_res.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("was listed here")  COMMA_SOURCE_FILE ("goil_routines.galgas", 451)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_l.addAssign_operation (inArgument_e  COMMA_SOURCE_FILE ("goil_routines.galgas", 453)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'set_lstring_if_empty'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_set_5F_lstring_5F_if_5F_empty (GALGAS_lstring & ioArgument_s,
                                            GALGAS_lstring inArgument_ns,
                                            GALGAS_string inArgument_att,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, ioArgument_s.reader_string (SOURCE_FILE ("goil_routines.galgas", 461)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_s = inArgument_ns ;
  }else if (kBoolFalse == test_0) {
    GALGAS_location location_1 (inArgument_ns.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, inArgument_att.add_operation (GALGAS_string (" Redefinition"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 464))  COMMA_SOURCE_FILE ("goil_routines.galgas", 464)) ;
    GALGAS_location location_2 (ioArgument_s.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("was defined here")  COMMA_SOURCE_FILE ("goil_routines.galgas", 465)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'add_makefile_flag_if_not_empty'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_add_5F_makefile_5F_flag_5F_if_5F_not_5F_empty (GALGAS_string & ioArgument_receiver,
                                                            GALGAS_string inArgument_flag_5F_name,
                                                            GALGAS_string inArgument_flag_5F_value,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inArgument_flag_5F_value.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_receiver.dotAssign_operation (inArgument_flag_5F_name.add_operation (GALGAS_string ("="), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 474)).add_operation (inArgument_flag_5F_value, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 474)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 474))  COMMA_SOURCE_FILE ("goil_routines.galgas", 474)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'lstringWith'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring function_lstringWith (GALGAS_string inArgument_s,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring result_r ; // Returned variable
  result_r = GALGAS_lstring::constructor_new (inArgument_s, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 479))  COMMA_SOURCE_FILE ("goil_routines.galgas", 479)) ;
//---
  return result_r ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_lstringWith [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_lstringWith (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_lstringWith (operand0,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_lstringWith ("lstringWith",
                                                             functionWithGenericHeader_lstringWith,
                                                             & kTypeDescriptor_GALGAS_lstring,
                                                             1,
                                                             functionArgs_lstringWith) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'stripString'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stripString (GALGAS_string inArgument_s,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_r ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 483)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_uint var_first = GALGAS_uint ((uint32_t) 0U) ;
    GALGAS_uint var_last = inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 485)) ;
    GALGAS_bool var_finished = GALGAS_bool (false) ;
    if (inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 488)).isValid ()) {
      uint32_t variant_14083 = inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 488)).uintValue () ;
      bool loop_14083 = true ;
      while (loop_14083) {
        loop_14083 = var_finished.operator_not (SOURCE_FILE ("goil_routines.galgas", 489)).isValid () ;
        if (loop_14083) {
          loop_14083 = var_finished.operator_not (SOURCE_FILE ("goil_routines.galgas", 489)).boolValue () ;
        }
        if (loop_14083 && (0 == variant_14083)) {
          loop_14083 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE ("goil_routines.galgas", 488)) ;
        }
        if (loop_14083) {
          variant_14083 -- ;
          const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, inArgument_s.reader_characterAtIndex (var_first, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 490)).objectCompare (GALGAS_char (TO_UNICODE (32)))).boolEnum () ;
          if (kBoolTrue == test_1) {
            var_first.increment_operation (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 491)) ;
            const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_first.objectCompare (inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 492)))).boolEnum () ;
            if (kBoolTrue == test_2) {
              var_finished = GALGAS_bool (true) ;
            }
          }else if (kBoolFalse == test_1) {
            var_finished = GALGAS_bool (true) ;
          }
        }
      }
    }
    var_finished = GALGAS_bool (false) ;
    if (inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 497)).isValid ()) {
      uint32_t variant_14368 = inArgument_s.reader_length (SOURCE_FILE ("goil_routines.galgas", 497)).uintValue () ;
      bool loop_14368 = true ;
      while (loop_14368) {
        loop_14368 = var_finished.operator_not (SOURCE_FILE ("goil_routines.galgas", 498)).isValid () ;
        if (loop_14368) {
          loop_14368 = var_finished.operator_not (SOURCE_FILE ("goil_routines.galgas", 498)).boolValue () ;
        }
        if (loop_14368 && (0 == variant_14368)) {
          loop_14368 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE ("goil_routines.galgas", 497)) ;
        }
        if (loop_14368) {
          variant_14368 -- ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, inArgument_s.reader_characterAtIndex (var_last.substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 499)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 499)).objectCompare (GALGAS_char (TO_UNICODE (32)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_last.decrement_operation (inCompiler  COMMA_SOURCE_FILE ("goil_routines.galgas", 500)) ;
            const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_last.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
            if (kBoolTrue == test_4) {
              var_finished = GALGAS_bool (true) ;
            }
          }else if (kBoolFalse == test_3) {
            var_finished = GALGAS_bool (true) ;
          }
        }
      }
    }
    const enumGalgasBool test_5 = GALGAS_bool (kIsStrictInf, var_first.objectCompare (var_last)).boolEnum () ;
    if (kBoolTrue == test_5) {
      result_r = inArgument_s.reader_subString (var_first, var_last.substract_operation (var_first, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 506)) COMMA_SOURCE_FILE ("goil_routines.galgas", 506)) ;
    }else if (kBoolFalse == test_5) {
      result_r = GALGAS_string::makeEmptyString () ;
    }
  }else if (kBoolFalse == test_0) {
    result_r = GALGAS_string::makeEmptyString () ;
  }
//---
  return result_r ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stripString [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stripString (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_stripString (operand0,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stripString ("stripString",
                                                             functionWithGenericHeader_stripString,
                                                             & kTypeDescriptor_GALGAS_string,
                                                             1,
                                                             functionArgs_stripString) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'errorNoFileFound'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_errorNoFileFound (const GALGAS_stringlist constinArgument_searchedPaths,
                               const GALGAS_string constinArgument_kind,
                               const GALGAS_lstring constinArgument_file,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_m = GALGAS_string ("cannot find a valid path for the '").add_operation (constinArgument_file.reader_string (SOURCE_FILE ("goil_routines.galgas", 519)), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 519)).add_operation (GALGAS_string ("' "), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 519)).add_operation (constinArgument_kind, inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 519)).add_operation (GALGAS_string (" file. I have tried:"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 519)) ;
  cEnumerator_stringlist enumerator_14946 (constinArgument_searchedPaths, kEnumeration_up) ;
  while (enumerator_14946.hasCurrentObject ()) {
    var_m.dotAssign_operation (GALGAS_string ("\n"
      "  - '").add_operation (enumerator_14946.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 521)).add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("goil_routines.galgas", 521))  COMMA_SOURCE_FILE ("goil_routines.galgas", 521)) ;
    enumerator_14946.gotoNextObject () ;
  }
  GALGAS_location location_0 (constinArgument_file.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, var_m  COMMA_SOURCE_FILE ("goil_routines.galgas", 523)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'stringLBool'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_stringLBool (const GALGAS_lbool & constinArgument_boolValue,
                                    C_Compiler * /* inCompiler */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_boolValue.reader_bool (SOURCE_FILE ("goil_routines.galgas", 529)).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_result = GALGAS_string ("TRUE") ;
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_string ("FALSE") ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_stringLBool [2] = {
  & kTypeDescriptor_GALGAS_lbool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_stringLBool (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_lbool operand0 = GALGAS_lbool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                             inCompiler
                                                             COMMA_THERE) ;
  return function_stringLBool (operand0,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_stringLBool ("stringLBool",
                                                             functionWithGenericHeader_stringLBool,
                                                             & kTypeDescriptor_GALGAS_string,
                                                             1,
                                                             functionArgs_stringLBool) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Routine 'setDefaults'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_setDefaults (const GALGAS_implementation constinArgument_imp,
                          GALGAS_applicationDefinition & ioArgument_application,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_objectsMap var_objects = ioArgument_application.reader_objects (SOURCE_FILE ("defaults.galgas", 32)) ;
  cEnumerator_lstringlist enumerator_753 (var_objects.reader_keyList (SOURCE_FILE ("defaults.galgas", 38)), kEnumeration_up) ;
  while (enumerator_753.hasCurrentObject ()) {
    cMapElement_objectsMap * objectArray_765 = (cMapElement_objectsMap *) var_objects.readWriteAccessForWithInstructionWithErrorMessage (inCompiler, enumerator_753.current_mValue (HERE), kSearchErrorMessage_objectsMap_get  COMMA_SOURCE_FILE ("defaults.galgas", 39)) ;
    if (NULL != objectArray_765) {
        macroValidSharedObject (objectArray_765, cMapElement_objectsMap) ;
      GALGAS_objectKindMap var_objOfKind = objectArray_765->mAttribute_objectsOfKind.reader_objects (SOURCE_FILE ("defaults.galgas", 40)) ;
      cEnumerator_lstringlist enumerator_924 (var_objOfKind.reader_keyList (SOURCE_FILE ("defaults.galgas", 41)), kEnumeration_up) ;
      while (enumerator_924.hasCurrentObject ()) {
        cMapElement_objectKindMap * objectArray_940 = (cMapElement_objectKindMap *) var_objOfKind.readWriteAccessForWithInstructionWithErrorMessage (inCompiler, enumerator_924.current_mValue (HERE), kSearchErrorMessage_objectKindMap_get  COMMA_SOURCE_FILE ("defaults.galgas", 42)) ;
        if (NULL != objectArray_940) {
            macroValidSharedObject (objectArray_940, cMapElement_objectKindMap) ;
          GALGAS_implementationObject var_impObject = callCategoryReader_impObject ((const cPtr_implementation *) constinArgument_imp.ptr (), enumerator_753.current_mValue (HERE).reader_string (SOURCE_FILE ("defaults.galgas", 43)), inCompiler COMMA_SOURCE_FILE ("defaults.galgas", 43)) ;
          {
          routine_setDefaultsForType (var_impObject.reader_attributes (SOURCE_FILE ("defaults.galgas", 44)), objectArray_940->mAttribute_attributes, inCompiler  COMMA_SOURCE_FILE ("defaults.galgas", 44)) ;
          }
        }
        enumerator_924.gotoNextObject () ;
      }
      {
      objectArray_765->mAttribute_objectsOfKind.modifier_setObjects (var_objOfKind COMMA_SOURCE_FILE ("defaults.galgas", 47)) ;
      }
    }
    enumerator_753.gotoNextObject () ;
  }
  {
  ioArgument_application.modifier_setObjects (var_objects COMMA_SOURCE_FILE ("defaults.galgas", 51)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'attributeAllowsAuto'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool function_attributeAllowsAuto (const GALGAS_impType & constinArgument_type,
                                          C_Compiler * /* inCompiler */
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_allowsAuto ; // Returned variable
  result_allowsAuto = GALGAS_bool (true) ;
  if (constinArgument_type.isValid ()) {
    if (NULL != dynamic_cast <const cPtr_impAutoDefaultType *> (constinArgument_type.ptr ())) {
      GALGAS_impAutoDefaultType cast_5993_autoType ((cPtr_impAutoDefaultType *) constinArgument_type.ptr ()) ;
      const enumGalgasBool test_0 = cast_5993_autoType.reader_withAuto (SOURCE_FILE ("semantic_verification.galgas", 201)).operator_not (SOURCE_FILE ("semantic_verification.galgas", 201)).boolEnum () ;
      if (kBoolTrue == test_0) {
        result_allowsAuto = GALGAS_bool (false) ;
      }
    }else{
      result_allowsAuto = GALGAS_bool (false) ;
    }
  }
//---
  return result_allowsAuto ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_attributeAllowsAuto [2] = {
  & kTypeDescriptor_GALGAS_impType,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_attributeAllowsAuto (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & /* §§ inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_impType operand0 = GALGAS_impType::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_attributeAllowsAuto (operand0,
                                       inCompiler
                                       COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_attributeAllowsAuto ("attributeAllowsAuto",
                                                                     functionWithGenericHeader_attributeAllowsAuto,
                                                                     & kTypeDescriptor_GALGAS_bool,
                                                                     1,
                                                                     functionArgs_attributeAllowsAuto) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'verifyAllAttributes'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_verifyAllAttributes (const GALGAS_implementation constinArgument_imp,
                                  const GALGAS_objectsMap constinArgument_objects,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_objectsMap enumerator_6305 (constinArgument_objects, kEnumeration_up) ;
  while (enumerator_6305.hasCurrentObject ()) {
    GALGAS_implementationObject var_impObj = callCategoryReader_impObject ((const cPtr_implementation *) constinArgument_imp.ptr (), enumerator_6305.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 218)), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 218)) ;
    cEnumerator_objectKindMap enumerator_6473 (enumerator_6305.current_objectsOfKind (HERE).reader_objects (SOURCE_FILE ("semantic_verification.galgas", 220)), kEnumeration_up) ;
    while (enumerator_6473.hasCurrentObject ()) {
      cEnumerator_implementationObjectMap enumerator_6518 (var_impObj.reader_attributes (SOURCE_FILE ("semantic_verification.galgas", 221)), kEnumeration_up) ;
      while (enumerator_6518.hasCurrentObject ()) {
        const enumGalgasBool test_0 = enumerator_6473.current_attributes (HERE).reader_objectParams (SOURCE_FILE ("semantic_verification.galgas", 222)).reader_hasKey (enumerator_6518.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 222)) COMMA_SOURCE_FILE ("semantic_verification.galgas", 222)).boolEnum () ;
        if (kBoolTrue == test_0) {
          GALGAS_object_5F_t var_value ;
          enumerator_6473.current_attributes (HERE).reader_objectParams (SOURCE_FILE ("semantic_verification.galgas", 226)).method_get (enumerator_6518.current_lkey (HERE), var_value, inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 226)) ;
          if (var_value.isValid ()) {
            if (var_value.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_auto) {
              const enumGalgasBool test_1 = function_attributeAllowsAuto (enumerator_6518.current_type (HERE), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 230)).operator_not (SOURCE_FILE ("semantic_verification.galgas", 230)).boolEnum () ;
              if (kBoolTrue == test_1) {
                inCompiler->emitSemanticError (var_value.reader_location (SOURCE_FILE ("semantic_verification.galgas", 231)), GALGAS_string ("AUTO value is not allowed for the ").add_operation (enumerator_6305.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 231)), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 231)).add_operation (GALGAS_string (" attribute"), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 231))  COMMA_SOURCE_FILE ("semantic_verification.galgas", 231)) ;
              }
            }
          }
        }else if (kBoolFalse == test_0) {
          const enumGalgasBool test_2 = function_attributeAllowsAuto (enumerator_6518.current_type (HERE), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 236)).operator_not (SOURCE_FILE ("semantic_verification.galgas", 236)).operator_and (enumerator_6518.current_type (HERE).reader_multiple (SOURCE_FILE ("semantic_verification.galgas", 236)).operator_not (SOURCE_FILE ("semantic_verification.galgas", 236)) COMMA_SOURCE_FILE ("semantic_verification.galgas", 236)).boolEnum () ;
          if (kBoolTrue == test_2) {
            GALGAS_location location_3 (enumerator_6473.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_3, GALGAS_string ("In ").add_operation (enumerator_6305.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 237)), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)).add_operation (GALGAS_string (" "), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)).add_operation (enumerator_6473.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 237)), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)).add_operation (GALGAS_string (", attribute "), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)).add_operation (enumerator_6518.current_lkey (HERE).reader_string (SOURCE_FILE ("semantic_verification.galgas", 237)), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)).add_operation (GALGAS_string (" is not defined and is not AUTO"), inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 237))  COMMA_SOURCE_FILE ("semantic_verification.galgas", 237)) ;
          }
        }
        if (enumerator_6518.current_type (HERE).isValid ()) {
          if (enumerator_6518.current_type (HERE).dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impAutoDefaultType) {
          }
        }
        enumerator_6518.gotoNextObject () ;
      }
      enumerator_6473.gotoNextObject () ;
    }
    enumerator_6305.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Routine 'verifyAll'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_verifyAll (const GALGAS_implementation constinArgument_imp,
                        const GALGAS_applicationDefinition constinArgument_application,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  {
  routine_verifyAllAttributes (constinArgument_imp, constinArgument_application.reader_objects (SOURCE_FILE ("semantic_verification.galgas", 559)), inCompiler  COMMA_SOURCE_FILE ("semantic_verification.galgas", 559)) ;
  }
  callCategoryMethod_verifyApplication ((const cPtr_implementation *) constinArgument_imp.ptr (), constinArgument_application, inCompiler COMMA_SOURCE_FILE ("semantic_verification.galgas", 560)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Function 'emptyApplicationDefinition'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition function_emptyApplicationDefinition (C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_applicationDefinition result_result ; // Returned variable
  result_result = GALGAS_applicationDefinition::constructor_new (function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 33)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 34)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 35)), function_emptyLString (inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 36)), GALGAS_objectsMap::constructor_emptyMap (SOURCE_FILE ("goil_types_root.galgas", 37))  COMMA_SOURCE_FILE ("goil_types_root.galgas", 32)) ;
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_emptyApplicationDefinition [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_emptyApplicationDefinition (C_Compiler * inCompiler,
                                                                           const cObjectArray & /* inEffectiveParameterArray */,
                                                                           const GALGAS_location & /* inErrorLocation */
                                                                           COMMA_LOCATION_ARGS) {
  return function_emptyApplicationDefinition (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_emptyApplicationDefinition ("emptyApplicationDefinition",
                                                                            functionWithGenericHeader_emptyApplicationDefinition,
                                                                            & kTypeDescriptor_GALGAS_applicationDefinition,
                                                                            0,
                                                                            functionArgs_emptyApplicationDefinition) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Function 'osObject'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectAttributes function_osObject (const GALGAS_objectsMap & constinArgument_objects,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_objectAttributes result_os ; // Returned variable
  GALGAS_objectKind var_objectsForKind ;
  constinArgument_objects.method_get (function_lstringWith (GALGAS_string ("OS"), inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 44)), var_objectsForKind, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 44)) ;
  GALGAS_lstringlist var_names = var_objectsForKind.reader_objects (SOURCE_FILE ("goil_types_root.galgas", 45)).reader_keyList (SOURCE_FILE ("goil_types_root.galgas", 45)) ;
  GALGAS_lstring var_name ;
  var_names.method_first (var_name, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 47)) ;
  var_objectsForKind.reader_objects (SOURCE_FILE ("goil_types_root.galgas", 48)).method_get (var_name, result_os, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 48)) ;
//---
  return result_os ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_osObject [2] = {
  & kTypeDescriptor_GALGAS_objectsMap,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_osObject (C_Compiler * inCompiler,
                                                         const cObjectArray & inEffectiveParameterArray,
                                                         const GALGAS_location & /* §§ inErrorLocation */
                                                         COMMA_LOCATION_ARGS) {
  const GALGAS_objectsMap operand0 = GALGAS_objectsMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  return function_osObject (operand0,
                            inCompiler
                            COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_osObject ("osObject",
                                                          functionWithGenericHeader_osObject,
                                                          & kTypeDescriptor_GALGAS_objectAttributes,
                                                          1,
                                                          functionArgs_osObject) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'objectForKindAndName'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectAttributes function_objectForKindAndName (const GALGAS_objectsMap & constinArgument_objects,
                                                       const GALGAS_string & constinArgument_kind,
                                                       const GALGAS_string & constinArgument_name,
                                                       C_Compiler * inCompiler
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_objectAttributes result_object ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_objects.reader_hasKey (constinArgument_kind COMMA_SOURCE_FILE ("goil_types_root.galgas", 56)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_objectKind var_kindObj ;
    constinArgument_objects.method_get (function_lstringWith (constinArgument_kind, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 58)), var_kindObj, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 58)) ;
    const enumGalgasBool test_1 = var_kindObj.reader_objects (SOURCE_FILE ("goil_types_root.galgas", 59)).reader_hasKey (constinArgument_name COMMA_SOURCE_FILE ("goil_types_root.galgas", 59)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_kindObj.reader_objects (SOURCE_FILE ("goil_types_root.galgas", 60)).method_get (function_lstringWith (constinArgument_name, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 60)), result_object, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 60)) ;
    }else if (kBoolFalse == test_1) {
      result_object = GALGAS_objectAttributes::constructor_new (GALGAS_identifierMap::constructor_emptyMap (SOURCE_FILE ("goil_types_root.galgas", 62))  COMMA_SOURCE_FILE ("goil_types_root.galgas", 62)) ;
    }
  }else if (kBoolFalse == test_0) {
    result_object = GALGAS_objectAttributes::constructor_new (GALGAS_identifierMap::constructor_emptyMap (SOURCE_FILE ("goil_types_root.galgas", 65))  COMMA_SOURCE_FILE ("goil_types_root.galgas", 65)) ;
  }
//---
  return result_object ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_objectForKindAndName [4] = {
  & kTypeDescriptor_GALGAS_objectsMap,
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_objectForKindAndName (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_objectsMap operand0 = GALGAS_objectsMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_string operand2 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_objectForKindAndName (operand0,
                                        operand1,
                                        operand2,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_objectForKindAndName ("objectForKindAndName",
                                                                      functionWithGenericHeader_objectForKindAndName,
                                                                      & kTypeDescriptor_GALGAS_objectAttributes,
                                                                      3,
                                                                      functionArgs_objectForKindAndName) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Routine 'setObjectForKindAndName'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_setObjectForKindAndName (GALGAS_objectsMap & ioArgument_objects,
                                      const GALGAS_string constinArgument_kind,
                                      const GALGAS_string constinArgument_name,
                                      const GALGAS_objectAttributes constinArgument_object,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring var_lkind = function_lstringWith (constinArgument_kind, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 74)) ;
  GALGAS_lstring var_lname = function_lstringWith (constinArgument_name, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 75)) ;
  GALGAS_objectKind var_kindObj = GALGAS_objectKind::constructor_new (GALGAS_objectKindMap::constructor_emptyMap (SOURCE_FILE ("goil_types_root.galgas", 76))  COMMA_SOURCE_FILE ("goil_types_root.galgas", 76)) ;
  const enumGalgasBool test_0 = ioArgument_objects.reader_hasKey (constinArgument_kind COMMA_SOURCE_FILE ("goil_types_root.galgas", 77)).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_objects.modifier_del (var_lkind, var_kindObj, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 78)) ;
    }
  }
  GALGAS_objectKindMap var_kindMap = var_kindObj.reader_objects (SOURCE_FILE ("goil_types_root.galgas", 80)) ;
  const enumGalgasBool test_1 = var_kindMap.reader_hasKey (constinArgument_name COMMA_SOURCE_FILE ("goil_types_root.galgas", 81)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    GALGAS_objectAttributes joker_2173_0 ; // Joker input parameter
    var_kindMap.modifier_del (var_lname, joker_2173_0, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 82)) ;
    }
  }
  {
  var_kindMap.modifier_put (var_lname, constinArgument_object, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 84)) ;
  }
  {
  var_kindObj.modifier_setObjects (var_kindMap COMMA_SOURCE_FILE ("goil_types_root.galgas", 85)) ;
  }
  {
  ioArgument_objects.modifier_put (var_lkind, var_kindObj, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 86)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              Function 'objectsForKind'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectKind function_objectsForKind (const GALGAS_objectsMap & constinArgument_objects,
                                           const GALGAS_string & constinArgument_kind,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_objectKind result_result ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_objects.reader_hasKey (constinArgument_kind COMMA_SOURCE_FILE ("goil_types_root.galgas", 93)).boolEnum () ;
  if (kBoolTrue == test_0) {
    constinArgument_objects.method_get (function_lstringWith (constinArgument_kind, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 94)), result_result, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 94)) ;
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_objectKind::constructor_new (GALGAS_objectKindMap::constructor_emptyMap (SOURCE_FILE ("goil_types_root.galgas", 96))  COMMA_SOURCE_FILE ("goil_types_root.galgas", 96)) ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_objectsForKind [3] = {
  & kTypeDescriptor_GALGAS_objectsMap,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_objectsForKind (C_Compiler * inCompiler,
                                                               const cObjectArray & inEffectiveParameterArray,
                                                               const GALGAS_location & /* §§ inErrorLocation */
                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_objectsMap operand0 = GALGAS_objectsMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_objectsForKind (operand0,
                                  operand1,
                                  inCompiler
                                  COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_objectsForKind ("objectsForKind",
                                                                functionWithGenericHeader_objectsForKind,
                                                                & kTypeDescriptor_GALGAS_objectKind,
                                                                2,
                                                                functionArgs_objectsForKind) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 Function 'listInOS'                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierList function_listInOS (const GALGAS_objectsMap & constinArgument_objects,
                                         const GALGAS_string & constinArgument_attributeName,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_identifierList result_items ; // Returned variable
  GALGAS_object_5F_t var_itemsContainer ;
  GALGAS_objectAttributes var_os = function_osObject (constinArgument_objects, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 105)) ;
  var_os.reader_objectParams (SOURCE_FILE ("goil_types_root.galgas", 106)).method_get (function_lstringWith (constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 106)), var_itemsContainer, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 106)) ;
  result_items = function_multipleAttributeOrError (var_itemsContainer, constinArgument_attributeName, inCompiler COMMA_SOURCE_FILE ("goil_types_root.galgas", 107)) ;
//---
  return result_items ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_listInOS [3] = {
  & kTypeDescriptor_GALGAS_objectsMap,
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_listInOS (C_Compiler * inCompiler,
                                                         const cObjectArray & inEffectiveParameterArray,
                                                         const GALGAS_location & /* §§ inErrorLocation */
                                                         COMMA_LOCATION_ARGS) {
  const GALGAS_objectsMap operand0 = GALGAS_objectsMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                       inCompiler
                                                                       COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_listInOS (operand0,
                            operand1,
                            inCompiler
                            COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_listInOS ("listInOS",
                                                          functionWithGenericHeader_listInOS,
                                                          & kTypeDescriptor_GALGAS_identifierList,
                                                          2,
                                                          functionArgs_listInOS) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'generate_signed_type'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generate_5F_signed_5F_type (GALGAS_uint_36__34_ inArgument_count,
                                         GALGAS_string inArgument_err,
                                         GALGAS_string & outArgument_type,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_type.drop () ; // Release 'out' argument
  GALGAS_uint_36__34_ var_max_5F_s_38_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 7U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 39)) ;
  GALGAS_uint_36__34_ var_max_5F_s_31__36_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 15U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 40)) ;
  GALGAS_uint_36__34_ var_max_5F_s_33__32_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 31U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 41)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_s_38_)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_type = GALGAS_string ("s8") ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_s_31__36_)).boolEnum () ;
    if (kBoolTrue == test_1) {
      outArgument_type = GALGAS_string ("s16") ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_s_33__32_)).boolEnum () ;
      if (kBoolTrue == test_2) {
        outArgument_type = GALGAS_string ("s32") ;
      }else if (kBoolFalse == test_2) {
        outArgument_type = GALGAS_string::makeEmptyString () ;
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 53)), inArgument_err  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 53)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Routine 'generate_unsigned_type'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generate_5F_unsigned_5F_type (GALGAS_uint_36__34_ inArgument_count,
                                           GALGAS_string inArgument_err,
                                           GALGAS_string & outArgument_type,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_type.drop () ; // Release 'out' argument
  GALGAS_uint_36__34_ var_max_5F_u_38_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 8U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 64)) ;
  GALGAS_uint_36__34_ var_max_5F_u_31__36_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 16U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 65)) ;
  GALGAS_uint_36__34_ var_max_5F_u_33__32_ = GALGAS_uint_36__34_ ((uint64_t) 1ULL).left_shift_operation (GALGAS_uint ((uint32_t) 32U) COMMA_SOURCE_FILE ("goil_code_generation.galgas", 66)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_u_38_)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_type = GALGAS_string ("u8") ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_u_31__36_)).boolEnum () ;
    if (kBoolTrue == test_1) {
      outArgument_type = GALGAS_string ("u16") ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictInf, inArgument_count.objectCompare (var_max_5F_u_33__32_)).boolEnum () ;
      if (kBoolTrue == test_2) {
        outArgument_type = GALGAS_string ("u32") ;
      }else if (kBoolFalse == test_2) {
        outArgument_type = GALGAS_string::makeEmptyString () ;
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 78)), inArgument_err  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 78)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'generate_mask_type'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generate_5F_mask_5F_type (GALGAS_uint_36__34_ inArgument_count,
                                       GALGAS_string inArgument_err,
                                       GALGAS_string & outArgument_type,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_type.drop () ; // Release 'out' argument
  GALGAS_uint_36__34_ var_max_5F_u_38_ = GALGAS_uint_36__34_ ((uint64_t) 8ULL) ;
  GALGAS_uint_36__34_ var_max_5F_u_31__36_ = GALGAS_uint_36__34_ ((uint64_t) 16ULL) ;
  GALGAS_uint_36__34_ var_max_5F_u_33__32_ = GALGAS_uint_36__34_ ((uint64_t) 32ULL) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsInfOrEqual, inArgument_count.objectCompare (var_max_5F_u_38_)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_type = GALGAS_string ("u8") ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsInfOrEqual, inArgument_count.objectCompare (var_max_5F_u_31__36_)).boolEnum () ;
    if (kBoolTrue == test_1) {
      outArgument_type = GALGAS_string ("u16") ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsInfOrEqual, inArgument_count.objectCompare (var_max_5F_u_33__32_)).boolEnum () ;
      if (kBoolTrue == test_2) {
        outArgument_type = GALGAS_string ("u32") ;
      }else if (kBoolFalse == test_2) {
        outArgument_type = GALGAS_string::makeEmptyString () ;
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 103)), inArgument_err  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 103)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'generate_all'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generate_5F_all (const GALGAS_TfieldMap constinArgument_cfg,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_temp_5F_dir = function_templates_5F_directory (GALGAS_string ("code"), inCompiler COMMA_SOURCE_FILE ("goil_code_generation.galgas", 697)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_temp_5F_dir.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_target = GALGAS_string (gOption_goil_5F_options_target_5F_platform.reader_value ()) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_target.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_goilLog = function_computeTemplate (GALGAS_string::makeEmptyString (), constinArgument_cfg, GALGAS_string ("root"), inCompiler COMMA_SOURCE_FILE ("goil_code_generation.galgas", 807)) ;
      const enumGalgasBool test_2 = GALGAS_bool (gOption_goil_5F_options_generate_5F_log.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_goilLog.method_writeToFile (GALGAS_string ("goil.log"), inCompiler COMMA_SOURCE_FILE ("goil_code_generation.galgas", 809)) ;
      }
    }else if (kBoolFalse == test_1) {
      inCompiler->printMessage (GALGAS_string ("No target platform given, compiling aborted\n")  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 829)) ;
    }
  }else if (kBoolFalse == test_0) {
    inCompiler->printMessage (GALGAS_string ("No template directory defined, compiling aborted\n")  COMMA_SOURCE_FILE ("goil_code_generation.galgas", 832)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_applicationDefinition::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_applicationDefinition) ;
  if (kOperandEqual == result) {
    result = mAttribute_name.objectCompare (p->mAttribute_name) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_cpuDescription.objectCompare (p->mAttribute_cpuDescription) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_version.objectCompare (p->mAttribute_version) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_versionDescription.objectCompare (p->mAttribute_versionDescription) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_objects.objectCompare (p->mAttribute_objects) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_applicationDefinition::objectCompare (const GALGAS_applicationDefinition & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition::GALGAS_applicationDefinition (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition GALGAS_applicationDefinition::constructor_default (LOCATION_ARGS) {
  return GALGAS_applicationDefinition::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_objectsMap::constructor_emptyMap (HERE)
                                                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition::GALGAS_applicationDefinition (const cPtr_applicationDefinition * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_applicationDefinition) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition GALGAS_applicationDefinition::constructor_new (const GALGAS_lstring & inAttribute_name,
                                                                            const GALGAS_lstring & inAttribute_cpuDescription,
                                                                            const GALGAS_lstring & inAttribute_version,
                                                                            const GALGAS_lstring & inAttribute_versionDescription,
                                                                            const GALGAS_objectsMap & inAttribute_objects
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_applicationDefinition result ;
  if (inAttribute_name.isValid () && inAttribute_cpuDescription.isValid () && inAttribute_version.isValid () && inAttribute_versionDescription.isValid () && inAttribute_objects.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_applicationDefinition (inAttribute_name, inAttribute_cpuDescription, inAttribute_version, inAttribute_versionDescription, inAttribute_objects COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_applicationDefinition::reader_name (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    result = p->mAttribute_name ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_applicationDefinition::reader_name (UNUSED_LOCATION_ARGS) const {
  return mAttribute_name ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_applicationDefinition::reader_cpuDescription (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    result = p->mAttribute_cpuDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_applicationDefinition::reader_cpuDescription (UNUSED_LOCATION_ARGS) const {
  return mAttribute_cpuDescription ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_applicationDefinition::reader_version (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    result = p->mAttribute_version ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_applicationDefinition::reader_version (UNUSED_LOCATION_ARGS) const {
  return mAttribute_version ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_applicationDefinition::reader_versionDescription (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    result = p->mAttribute_versionDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_applicationDefinition::reader_versionDescription (UNUSED_LOCATION_ARGS) const {
  return mAttribute_versionDescription ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectsMap GALGAS_applicationDefinition::reader_objects (UNUSED_LOCATION_ARGS) const {
  GALGAS_objectsMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_applicationDefinition * p = (const cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    result = p->mAttribute_objects ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectsMap cPtr_applicationDefinition::reader_objects (UNUSED_LOCATION_ARGS) const {
  return mAttribute_objects ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_applicationDefinition::modifier_setName (GALGAS_lstring inValue
                                                     COMMA_LOCATION_ARGS) {
  if (NULL != mObjectPtr) {
    insulate (THERE) ;
    cPtr_applicationDefinition * p = (cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    p->mAttribute_name = inValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cPtr_applicationDefinition::modifier_setName (GALGAS_lstring inValue
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_name = inValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_applicationDefinition::modifier_setCpuDescription (GALGAS_lstring inValue
                                                               COMMA_LOCATION_ARGS) {
  if (NULL != mObjectPtr) {
    insulate (THERE) ;
    cPtr_applicationDefinition * p = (cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    p->mAttribute_cpuDescription = inValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cPtr_applicationDefinition::modifier_setCpuDescription (GALGAS_lstring inValue
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_cpuDescription = inValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_applicationDefinition::modifier_setVersion (GALGAS_lstring inValue
                                                        COMMA_LOCATION_ARGS) {
  if (NULL != mObjectPtr) {
    insulate (THERE) ;
    cPtr_applicationDefinition * p = (cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    p->mAttribute_version = inValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cPtr_applicationDefinition::modifier_setVersion (GALGAS_lstring inValue
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_version = inValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_applicationDefinition::modifier_setVersionDescription (GALGAS_lstring inValue
                                                                   COMMA_LOCATION_ARGS) {
  if (NULL != mObjectPtr) {
    insulate (THERE) ;
    cPtr_applicationDefinition * p = (cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    p->mAttribute_versionDescription = inValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cPtr_applicationDefinition::modifier_setVersionDescription (GALGAS_lstring inValue
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_versionDescription = inValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_applicationDefinition::modifier_setObjects (GALGAS_objectsMap inValue
                                                        COMMA_LOCATION_ARGS) {
  if (NULL != mObjectPtr) {
    insulate (THERE) ;
    cPtr_applicationDefinition * p = (cPtr_applicationDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_applicationDefinition) ;
    p->mAttribute_objects = inValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cPtr_applicationDefinition::modifier_setObjects (GALGAS_objectsMap inValue
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  mAttribute_objects = inValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                   Pointer class for @applicationDefinition class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_applicationDefinition::cPtr_applicationDefinition (const GALGAS_lstring & in_name,
                                                        const GALGAS_lstring & in_cpuDescription,
                                                        const GALGAS_lstring & in_version,
                                                        const GALGAS_lstring & in_versionDescription,
                                                        const GALGAS_objectsMap & in_objects
                                                        COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_name (in_name),
mAttribute_cpuDescription (in_cpuDescription),
mAttribute_version (in_version),
mAttribute_versionDescription (in_versionDescription),
mAttribute_objects (in_objects) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_applicationDefinition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_applicationDefinition ;
}

void cPtr_applicationDefinition::description (C_String & ioString,
                                              const int32_t inIndentation) const {
  ioString << "[@applicationDefinition:" ;
  mAttribute_name.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_cpuDescription.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_version.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_versionDescription.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_objects.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_applicationDefinition::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_applicationDefinition (mAttribute_name, mAttribute_cpuDescription, mAttribute_version, mAttribute_versionDescription, mAttribute_objects COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @applicationDefinition type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_applicationDefinition ("applicationDefinition",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_applicationDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_applicationDefinition ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_applicationDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_applicationDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_applicationDefinition GALGAS_applicationDefinition::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_applicationDefinition result ;
  const GALGAS_applicationDefinition * p = (const GALGAS_applicationDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_applicationDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("applicationDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_attributeRange::objectCompare (const GALGAS_attributeRange & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeRange::GALGAS_attributeRange (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeRange::GALGAS_attributeRange (const cPtr_attributeRange * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_attributeRange) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_attributeRange::reader_location (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_attributeRange * p = (const cPtr_attributeRange *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_attributeRange) ;
    result = p->mAttribute_location ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cPtr_attributeRange::reader_location (UNUSED_LOCATION_ARGS) const {
  return mAttribute_location ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                       Pointer class for @attributeRange class                                       *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_attributeRange::cPtr_attributeRange (const GALGAS_location & in_location
                                          COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_location (in_location) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @attributeRange type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeRange ("attributeRange",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeRange::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeRange ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeRange::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeRange (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeRange GALGAS_attributeRange::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_attributeRange result ;
  const GALGAS_attributeRange * p = (const GALGAS_attributeRange *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeRange *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeRange", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_floatAttributeMinMax::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_floatAttributeMinMax * p = (const cPtr_floatAttributeMinMax *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_floatAttributeMinMax) ;
  if (kOperandEqual == result) {
    result = mAttribute_location.objectCompare (p->mAttribute_location) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_min.objectCompare (p->mAttribute_min) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_max.objectCompare (p->mAttribute_max) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_floatAttributeMinMax::objectCompare (const GALGAS_floatAttributeMinMax & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeMinMax::GALGAS_floatAttributeMinMax (void) :
GALGAS_attributeRange () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeMinMax GALGAS_floatAttributeMinMax::constructor_default (LOCATION_ARGS) {
  return GALGAS_floatAttributeMinMax::constructor_new (GALGAS_location::constructor_nowhere (HERE),
                                                       GALGAS_double::constructor_default (HERE),
                                                       GALGAS_double::constructor_default (HERE)
                                                       COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeMinMax::GALGAS_floatAttributeMinMax (const cPtr_floatAttributeMinMax * inSourcePtr) :
GALGAS_attributeRange (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_floatAttributeMinMax) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeMinMax GALGAS_floatAttributeMinMax::constructor_new (const GALGAS_location & inAttribute_location,
                                                                          const GALGAS_double & inAttribute_min,
                                                                          const GALGAS_double & inAttribute_max
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_floatAttributeMinMax result ;
  if (inAttribute_location.isValid () && inAttribute_min.isValid () && inAttribute_max.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_floatAttributeMinMax (inAttribute_location, inAttribute_min, inAttribute_max COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_double GALGAS_floatAttributeMinMax::reader_min (UNUSED_LOCATION_ARGS) const {
  GALGAS_double result ;
  if (NULL != mObjectPtr) {
    const cPtr_floatAttributeMinMax * p = (const cPtr_floatAttributeMinMax *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_floatAttributeMinMax) ;
    result = p->mAttribute_min ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_double cPtr_floatAttributeMinMax::reader_min (UNUSED_LOCATION_ARGS) const {
  return mAttribute_min ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_double GALGAS_floatAttributeMinMax::reader_max (UNUSED_LOCATION_ARGS) const {
  GALGAS_double result ;
  if (NULL != mObjectPtr) {
    const cPtr_floatAttributeMinMax * p = (const cPtr_floatAttributeMinMax *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_floatAttributeMinMax) ;
    result = p->mAttribute_max ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_double cPtr_floatAttributeMinMax::reader_max (UNUSED_LOCATION_ARGS) const {
  return mAttribute_max ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                    Pointer class for @floatAttributeMinMax class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_floatAttributeMinMax::cPtr_floatAttributeMinMax (const GALGAS_location & in_location,
                                                      const GALGAS_double & in_min,
                                                      const GALGAS_double & in_max
                                                      COMMA_LOCATION_ARGS) :
cPtr_attributeRange (in_location COMMA_THERE),
mAttribute_min (in_min),
mAttribute_max (in_max) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_floatAttributeMinMax::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_floatAttributeMinMax ;
}

void cPtr_floatAttributeMinMax::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "[@floatAttributeMinMax:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_min.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_max.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_floatAttributeMinMax::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_floatAttributeMinMax (mAttribute_location, mAttribute_min, mAttribute_max COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @floatAttributeMinMax type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_floatAttributeMinMax ("floatAttributeMinMax",
                                             & kTypeDescriptor_GALGAS_attributeRange) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_floatAttributeMinMax::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_floatAttributeMinMax ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_floatAttributeMinMax::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_floatAttributeMinMax (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeMinMax GALGAS_floatAttributeMinMax::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_floatAttributeMinMax result ;
  const GALGAS_floatAttributeMinMax * p = (const GALGAS_floatAttributeMinMax *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_floatAttributeMinMax *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("floatAttributeMinMax", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_floatAttributeSet::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_floatAttributeSet * p = (const cPtr_floatAttributeSet *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_floatAttributeSet) ;
  if (kOperandEqual == result) {
    result = mAttribute_location.objectCompare (p->mAttribute_location) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_valueList.objectCompare (p->mAttribute_valueList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_floatAttributeSet::objectCompare (const GALGAS_floatAttributeSet & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeSet::GALGAS_floatAttributeSet (void) :
GALGAS_attributeRange () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeSet GALGAS_floatAttributeSet::constructor_default (LOCATION_ARGS) {
  return GALGAS_floatAttributeSet::constructor_new (GALGAS_location::constructor_nowhere (HERE),
                                                    GALGAS_floatList::constructor_emptyList (HERE)
                                                    COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeSet::GALGAS_floatAttributeSet (const cPtr_floatAttributeSet * inSourcePtr) :
GALGAS_attributeRange (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_floatAttributeSet) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeSet GALGAS_floatAttributeSet::constructor_new (const GALGAS_location & inAttribute_location,
                                                                    const GALGAS_floatList & inAttribute_valueList
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_floatAttributeSet result ;
  if (inAttribute_location.isValid () && inAttribute_valueList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_floatAttributeSet (inAttribute_location, inAttribute_valueList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatList GALGAS_floatAttributeSet::reader_valueList (UNUSED_LOCATION_ARGS) const {
  GALGAS_floatList result ;
  if (NULL != mObjectPtr) {
    const cPtr_floatAttributeSet * p = (const cPtr_floatAttributeSet *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_floatAttributeSet) ;
    result = p->mAttribute_valueList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatList cPtr_floatAttributeSet::reader_valueList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_valueList ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                     Pointer class for @floatAttributeSet class                                      *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_floatAttributeSet::cPtr_floatAttributeSet (const GALGAS_location & in_location,
                                                const GALGAS_floatList & in_valueList
                                                COMMA_LOCATION_ARGS) :
cPtr_attributeRange (in_location COMMA_THERE),
mAttribute_valueList (in_valueList) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_floatAttributeSet::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_floatAttributeSet ;
}

void cPtr_floatAttributeSet::description (C_String & ioString,
                                          const int32_t inIndentation) const {
  ioString << "[@floatAttributeSet:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_valueList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_floatAttributeSet::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_floatAttributeSet (mAttribute_location, mAttribute_valueList COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @floatAttributeSet type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_floatAttributeSet ("floatAttributeSet",
                                          & kTypeDescriptor_GALGAS_attributeRange) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_floatAttributeSet::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_floatAttributeSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_floatAttributeSet::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_floatAttributeSet (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_floatAttributeSet GALGAS_floatAttributeSet::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_floatAttributeSet result ;
  const GALGAS_floatAttributeSet * p = (const GALGAS_floatAttributeSet *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_floatAttributeSet *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("floatAttributeSet", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_noRange::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_noRange * p = (const cPtr_noRange *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_noRange) ;
  if (kOperandEqual == result) {
    result = mAttribute_location.objectCompare (p->mAttribute_location) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_noRange::objectCompare (const GALGAS_noRange & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_noRange::GALGAS_noRange (void) :
GALGAS_attributeRange () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_noRange GALGAS_noRange::constructor_default (LOCATION_ARGS) {
  return GALGAS_noRange::constructor_new (GALGAS_location::constructor_nowhere (HERE)
                                          COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_noRange::GALGAS_noRange (const cPtr_noRange * inSourcePtr) :
GALGAS_attributeRange (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_noRange) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_noRange GALGAS_noRange::constructor_new (const GALGAS_location & inAttribute_location
                                                COMMA_LOCATION_ARGS) {
  GALGAS_noRange result ;
  if (inAttribute_location.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_noRange (inAttribute_location COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                          Pointer class for @noRange class                                           *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_noRange::cPtr_noRange (const GALGAS_location & in_location
                            COMMA_LOCATION_ARGS) :
cPtr_attributeRange (in_location COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_noRange::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_noRange ;
}

void cPtr_noRange::description (C_String & ioString,
                                const int32_t inIndentation) const {
  ioString << "[@noRange:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_noRange::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_noRange (mAttribute_location COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                    @noRange type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_noRange ("noRange",
                                & kTypeDescriptor_GALGAS_attributeRange) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_noRange::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_noRange ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_noRange::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_noRange (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_noRange GALGAS_noRange::extractObject (const GALGAS_object & inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_noRange result ;
  const GALGAS_noRange * p = (const GALGAS_noRange *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_noRange *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("noRange", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                         *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_sint_33__32_AttributeMinMax::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_sint_33__32_AttributeMinMax * p = (const cPtr_sint_33__32_AttributeMinMax *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_sint_33__32_AttributeMinMax) ;
  if (kOperandEqual == result) {
    result = mAttribute_location.objectCompare (p->mAttribute_location) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_min.objectCompare (p->mAttribute_min) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_max.objectCompare (p->mAttribute_max) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_sint_33__32_AttributeMinMax::objectCompare (const GALGAS_sint_33__32_AttributeMinMax & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_AttributeMinMax::GALGAS_sint_33__32_AttributeMinMax (void) :
GALGAS_attributeRange () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_AttributeMinMax GALGAS_sint_33__32_AttributeMinMax::constructor_default (LOCATION_ARGS) {
  return GALGAS_sint_33__32_AttributeMinMax::constructor_new (GALGAS_location::constructor_nowhere (HERE),
                                                              GALGAS_sint::constructor_default (HERE),
                                                              GALGAS_sint::constructor_default (HERE)
                                                              COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_AttributeMinMax::GALGAS_sint_33__32_AttributeMinMax (const cPtr_sint_33__32_AttributeMinMax * inSourcePtr) :
GALGAS_attributeRange (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_sint_33__32_AttributeMinMax) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_AttributeMinMax GALGAS_sint_33__32_AttributeMinMax::constructor_new (const GALGAS_location & inAttribute_location,
                                                                                        const GALGAS_sint & inAttribute_min,
                                                                                        const GALGAS_sint & inAttribute_max
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_sint_33__32_AttributeMinMax result ;
  if (inAttribute_location.isValid () && inAttribute_min.isValid () && inAttribute_max.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_sint_33__32_AttributeMinMax (inAttribute_location, inAttribute_min, inAttribute_max COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint GALGAS_sint_33__32_AttributeMinMax::reader_min (UNUSED_LOCATION_ARGS) const {
  GALGAS_sint result ;
  if (NULL != mObjectPtr) {
    const cPtr_sint_33__32_AttributeMinMax * p = (const cPtr_sint_33__32_AttributeMinMax *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_sint_33__32_AttributeMinMax) ;
    result = p->mAttribute_min ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint cPtr_sint_33__32_AttributeMinMax::reader_min (UNUSED_LOCATION_ARGS) const {
  return mAttribute_min ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint GALGAS_sint_33__32_AttributeMinMax::reader_max (UNUSED_LOCATION_ARGS) const {
  GALGAS_sint result ;
  if (NULL != mObjectPtr) {
    const cPtr_sint_33__32_AttributeMinMax * p = (const cPtr_sint_33__32_AttributeMinMax *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_sint_33__32_AttributeMinMax) ;
    result = p->mAttribute_max ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint cPtr_sint_33__32_AttributeMinMax::reader_max (UNUSED_LOCATION_ARGS) const {
  return mAttribute_max ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                   Pointer class for @sint32AttributeMinMax class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_sint_33__32_AttributeMinMax::cPtr_sint_33__32_AttributeMinMax (const GALGAS_location & in_location,
                                                                    const GALGAS_sint & in_min,
                                                                    const GALGAS_sint & in_max
                                                                    COMMA_LOCATION_ARGS) :
cPtr_attributeRange (in_location COMMA_THERE),
mAttribute_min (in_min),
mAttribute_max (in_max) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_sint_33__32_AttributeMinMax::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sint_33__32_AttributeMinMax ;
}

void cPtr_sint_33__32_AttributeMinMax::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "[@sint32AttributeMinMax:" ;
  mAttribute_location.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_min.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_max.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_sint_33__32_AttributeMinMax::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_sint_33__32_AttributeMinMax (mAttribute_location, mAttribute_min, mAttribute_max COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @sint32AttributeMinMax type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_sint_33__32_AttributeMinMax ("sint32AttributeMinMax",
                                                    & kTypeDescriptor_GALGAS_attributeRange) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_sint_33__32_AttributeMinMax::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sint_33__32_AttributeMinMax ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_sint_33__32_AttributeMinMax::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_sint_33__32_AttributeMinMax (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_33__32_AttributeMinMax GALGAS_sint_33__32_AttributeMinMax::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_sint_33__32_AttributeMinMax result ;
  const GALGAS_sint_33__32_AttributeMinMax * p = (const GALGAS_sint_33__32_AttributeMinMax *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_sint_33__32_AttributeMinMax *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("sint32AttributeMinMax", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

