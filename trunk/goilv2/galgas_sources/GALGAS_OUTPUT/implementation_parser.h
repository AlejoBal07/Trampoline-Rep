//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           File 'implementation_parser.h'                                            *
//                                             Generated by version 3.0.0                                              *
//                                          october 8th, 2014, at 15h59'46"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef implementation_parser_ENTITIES_DEFINED
#define implementation_parser_ENTITIES_DEFINED

//---------------------------------------------------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "goil_lexique.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "implementation_types.h"
#include "goil_basic_types.h"
#include "goil_routines.h"

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'checkEnums'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class GALGAS_bool function_checkEnums (const class GALGAS_impEnumType & constinArgument0,
                                       const class GALGAS_impEnumType & constinArgument1,
                                       class C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'checkRanged'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class GALGAS_bool function_checkRanged (const class GALGAS_impRangedType & constinArgument0,
                                        const class GALGAS_impRangedType & constinArgument1,
                                        class C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Function 'checkNewTypeWithinPreviousType'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class GALGAS_bool function_checkNewTypeWithinPreviousType (const class GALGAS_lstring & constinArgument0,
                                                           const class GALGAS_impType & constinArgument1,
                                                           const class GALGAS_impType & constinArgument2,
                                                           class C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Function 'buildRange'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class GALGAS_attributeRange function_buildRange (const class GALGAS_dataType & constinArgument0,
                                                 const class GALGAS_object_5F_t & constinArgument1,
                                                 const class GALGAS_object_5F_t & constinArgument2,
                                                 class C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Parser class 'implementation_parser' declaration                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cParser_implementation_5F_parser {
//--- Virtual destructor
  public : virtual ~ cParser_implementation_5F_parser (void) {}

//--- Non terminal declarations
  protected : virtual void nt_boolean_ (class GALGAS_lbool & outArgument0,
                                        class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_boolean_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_boolean_5F_options_ (class GALGAS_lstring & outArgument0,
                                                   class GALGAS_impType & outArgument1,
                                                   class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_boolean_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_description_ (class GALGAS_lstring & outArgument0,
                                            class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_description_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_enum_5F_item_ (class GALGAS_enumValues & ioArgument0,
                                             class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_enum_5F_item_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_enum_5F_options_ (class GALGAS_lstring & outArgument0,
                                                class GALGAS_impType & outArgument1,
                                                class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_enum_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_identifier_5F_or_5F_attribute_ (class GALGAS_lstring & outArgument0,
                                                              class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_identifier_5F_or_5F_attribute_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_identifier_5F_or_5F_enum_5F_value_ (class GALGAS_lstring & outArgument0,
                                                                  class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_identifier_5F_or_5F_enum_5F_value_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_definition_ (class GALGAS_implementation & ioArgument0,
                                                             class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_definition_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_list_ (class GALGAS_implementationObjectMap & ioArgument0,
                                                       class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_list_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_objects_ (class GALGAS_implementation & ioArgument0,
                                                          class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_objects_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_type_ (class GALGAS_lstring & outArgument0,
                                                       class GALGAS_impType & outArgument1,
                                                       class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_implementation_5F_type_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_int_5F_or_5F_float_ (class GALGAS_object_5F_t & outArgument0,
                                                   const class GALGAS_dataType constinArgument1,
                                                   class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_int_5F_or_5F_float_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_multiple_ (class GALGAS_bool & outArgument0,
                                         class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_multiple_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_number_5F_options_ (class GALGAS_lstring & outArgument0,
                                                  class GALGAS_impType & outArgument1,
                                                  const class GALGAS_dataType constinArgument2,
                                                  class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_number_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_objref_5F_option_ (class GALGAS_lstring & outArgument0,
                                                 class GALGAS_impType & outArgument1,
                                                 class GALGAS_lstring inArgument2,
                                                 class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_objref_5F_option_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_range_ (class GALGAS_attributeRange & outArgument0,
                                      const class GALGAS_dataType constinArgument1,
                                      class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_range_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_range_5F_content_ (class GALGAS_attributeRange & outArgument0,
                                                 const class GALGAS_dataType constinArgument1,
                                                 class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_range_5F_content_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_set_5F_followup_ (class GALGAS_numberList & ioArgument0,
                                                const class GALGAS_dataType constinArgument1,
                                                class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_set_5F_followup_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_sign_ (class GALGAS_bool & outArgument0,
                                     class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_sign_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_string_5F_options_ (class GALGAS_lstring & outArgument0,
                                                  class GALGAS_impType & outArgument1,
                                                  class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_string_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_struct_5F_options_ (class GALGAS_lstring & outArgument0,
                                                  class GALGAS_impType & outArgument1,
                                                  class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_struct_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_type_5F_options_ (class GALGAS_lstring & outArgument0,
                                                class GALGAS_impType & outArgument1,
                                                const class GALGAS_dataType constinArgument2,
                                                class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_type_5F_options_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_with_5F_auto_ (class GALGAS_bool & outArgument0,
                                             class C_Lexique_goil_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_with_5F_auto_parse (class C_Lexique_goil_5F_lexique * inLexique) = 0 ;


//--- Rule declarations
  protected : void rule_implementation_5F_parser_implementation_5F_definition_i0_ (GALGAS_implementation & ioArgument0,
                                                                                   C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_definition_i0_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_objects_i1_ (GALGAS_implementation & ioArgument0,
                                                                                C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_objects_i1_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_list_i2_ (GALGAS_implementationObjectMap & ioArgument0,
                                                                             C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_list_i2_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_type_i3_ (GALGAS_lstring & outArgument0,
                                                                             GALGAS_impType & outArgument1,
                                                                             C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_implementation_5F_type_i3_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_struct_5F_options_i4_ (GALGAS_lstring & outArgument0,
                                                                        GALGAS_impType & outArgument1,
                                                                        C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_struct_5F_options_i4_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_objref_5F_option_i5_ (GALGAS_lstring & outArgument0,
                                                                       GALGAS_impType & outArgument1,
                                                                       GALGAS_lstring inArgument2,
                                                                       C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_objref_5F_option_i5_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_string_5F_options_i6_ (GALGAS_lstring & outArgument0,
                                                                        GALGAS_impType & outArgument1,
                                                                        C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_string_5F_options_i6_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_boolean_5F_options_i7_ (GALGAS_lstring & outArgument0,
                                                                         GALGAS_impType & outArgument1,
                                                                         C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_boolean_5F_options_i7_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_enum_5F_item_i8_ (GALGAS_enumValues & ioArgument0,
                                                                   C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_enum_5F_item_i8_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_enum_5F_options_i9_ (GALGAS_lstring & outArgument0,
                                                                      GALGAS_impType & outArgument1,
                                                                      C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_enum_5F_options_i9_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_number_5F_options_i10_ (GALGAS_lstring & outArgument0,
                                                                         GALGAS_impType & outArgument1,
                                                                         const GALGAS_dataType constinArgument2,
                                                                         C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_number_5F_options_i10_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_type_5F_options_i11_ (GALGAS_lstring & outArgument0,
                                                                       GALGAS_impType & outArgument1,
                                                                       const GALGAS_dataType constinArgument2,
                                                                       C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_type_5F_options_i11_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_with_5F_auto_i12_ (GALGAS_bool & outArgument0,
                                                                    C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_with_5F_auto_i12_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_int_5F_or_5F_float_i13_ (GALGAS_object_5F_t & outArgument0,
                                                                          const GALGAS_dataType constinArgument1,
                                                                          C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_int_5F_or_5F_float_i13_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_set_5F_followup_i14_ (GALGAS_numberList & ioArgument0,
                                                                       const GALGAS_dataType constinArgument1,
                                                                       C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_set_5F_followup_i14_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_range_5F_content_i15_ (GALGAS_attributeRange & outArgument0,
                                                                        const GALGAS_dataType constinArgument1,
                                                                        C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_range_5F_content_i15_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_range_i16_ (GALGAS_attributeRange & outArgument0,
                                                             const GALGAS_dataType constinArgument1,
                                                             C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_range_i16_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_multiple_i17_ (GALGAS_bool & outArgument0,
                                                                C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_multiple_i17_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_ (GALGAS_lstring & outArgument0,
                                                                                     C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_identifier_5F_or_5F_attribute_i18_parse (C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_ (GALGAS_lstring & outArgument0,
                                                                                         C_Lexique_goil_5F_lexique * inLexique) ;

  protected : void rule_implementation_5F_parser_identifier_5F_or_5F_enum_5F_value_i19_parse (C_Lexique_goil_5F_lexique * inLexique) ;



//--- Select methods
  protected : virtual int32_t select_implementation_5F_parser_0 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_1 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_2 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_3 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_4 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_5 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_6 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_7 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_8 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_9 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_10 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_11 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_12 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_13 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_14 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_15 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_16 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_17 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_18 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_19 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_20 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_21 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_22 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_23 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_24 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_25 (C_Lexique_goil_5F_lexique *) = 0 ;

  protected : virtual int32_t select_implementation_5F_parser_26 (C_Lexique_goil_5F_lexique *) = 0 ;


} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
