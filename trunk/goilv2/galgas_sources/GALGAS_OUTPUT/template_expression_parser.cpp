//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'template_expression_parser.cpp'                    *
//                    Generated by version version 2.4.2                     *
//                     february 15th, 2013, at 15h8'51"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "template_expression_parser.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_expression_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchAndOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchAndOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (111)) COMMA_SOURCE_FILE_AT_LINE (111)).operator_concat (GALGAS_string (" & ") COMMA_SOURCE_FILE_AT_LINE (111)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (112)) COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (112)) COMMA_SOURCE_FILE_AT_LINE (111)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchOrOperatorForTemplate'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchOrOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                         GALGAS_Ttype & outArgument_outResultType,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (134)) COMMA_SOURCE_FILE_AT_LINE (134)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (134)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (135)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (134)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchXorOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchXorOperatorForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("operand type error : (").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (157)) COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string (" | ") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (158)) COMMA_SOURCE_FILE_AT_LINE (158)).operator_concat (GALGAS_string (") is not valid") COMMA_SOURCE_FILE_AT_LINE (158)) COMMA_SOURCE_FILE_AT_LINE (157)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkNotOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkNotOperatorForTemplate (const GALGAS_Ttype constinArgument_inOperandType,
                                          GALGAS_Ttype & outArgument_outResultType,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (173)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the 'not' operator is not defined for an ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE_AT_LINE (175)) COMMA_SOURCE_FILE_AT_LINE (175)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (175)) COMMA_SOURCE_FILE_AT_LINE (174)) ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'checkBitComplementOperatorForTemplate'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBitComplementOperatorForTemplate (const GALGAS_Ttype constinArgument_inOperandType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = constinArgument_inOperandType ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inOperandType.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (191)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the ~ operator is not defined for an ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inOperandType, inCompiler COMMA_SOURCE_FILE_AT_LINE (193)) COMMA_SOURCE_FILE_AT_LINE (193)).operator_concat (GALGAS_string (" type") COMMA_SOURCE_FILE_AT_LINE (193)) COMMA_SOURCE_FILE_AT_LINE (192)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'comparison_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                      const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_enumType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_enumType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (213)) COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//           Routine 'magnitude_comparison_types_checkForTemplate'           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                                   const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_boolType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("comparison between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (233)) COMMA_SOURCE_FILE_AT_LINE (233)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (233)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (234)) COMMA_SOURCE_FILE_AT_LINE (234)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (234)) COMMA_SOURCE_FILE_AT_LINE (233)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'left_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_left_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                         GALGAS_Ttype & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (253)) COMMA_SOURCE_FILE_AT_LINE (253)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (254)) COMMA_SOURCE_FILE_AT_LINE (253)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'right_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_right_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                          const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                          GALGAS_Ttype & outArgument_outResultType,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("shift between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (272)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) COMMA_SOURCE_FILE_AT_LINE (272)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (272)) COMMA_SOURCE_FILE_AT_LINE (271)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'addition_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addition_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                    const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (293)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (294)) COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (294)) COMMA_SOURCE_FILE_AT_LINE (293)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'concatenation_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_concatenation_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                         const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                         GALGAS_Ttype & outArgument_outResultType,
                                                         C_Compiler * inCompiler
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_stringType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_listType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_listType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("addition between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (317)) COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (317)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'substraction_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_substraction_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                        const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                        GALGAS_Ttype & outArgument_outResultType,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("substraction between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (339)) COMMA_SOURCE_FILE_AT_LINE (339)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (340)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (340)) COMMA_SOURCE_FILE_AT_LINE (340)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (340)) COMMA_SOURCE_FILE_AT_LINE (339)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'multiply_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_multiply_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                    const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                    GALGAS_Ttype & outArgument_outResultType,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("multiplication between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (361)) COMMA_SOURCE_FILE_AT_LINE (361)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (362)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (362)) COMMA_SOURCE_FILE_AT_LINE (362)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (362)) COMMA_SOURCE_FILE_AT_LINE (361)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'divide_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_divide_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                  const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                  GALGAS_Ttype & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("division between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (383)) COMMA_SOURCE_FILE_AT_LINE (383)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (384)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (384)) COMMA_SOURCE_FILE_AT_LINE (384)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (384)) COMMA_SOURCE_FILE_AT_LINE (383)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'modulo_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modulo_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument_inLeftExpressionType,
                                                  const GALGAS_Ttype constinArgument_inRightExpressionType,
                                                  GALGAS_Ttype & outArgument_outResultType,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  //------- @matchInstructionForGeneration
  if (constinArgument_inLeftExpressionType.isValid () && constinArgument_inRightExpressionType.isValid ()) {
    if ((constinArgument_inLeftExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType) && (constinArgument_inRightExpressionType.enumValue () == GALGAS_Ttype::kEnum_intType)) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = constinArgument_inLeftExpressionType ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("modulo between ").operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inLeftExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (405)) COMMA_SOURCE_FILE_AT_LINE (405)).operator_concat (GALGAS_string (" and ") COMMA_SOURCE_FILE_AT_LINE (406)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inRightExpressionType, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)) COMMA_SOURCE_FILE_AT_LINE (406)).operator_concat (GALGAS_string (" is not valid") COMMA_SOURCE_FILE_AT_LINE (406)) COMMA_SOURCE_FILE_AT_LINE (405)) ;
      outArgument_outResultType.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'argumentListSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_argumentListSignature (const GALGAS_TexpressionList & constinArgument_inParameterTypeList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string (" this method call has ") ;
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (423)).reader_string (SOURCE_FILE_AT_LINE (423)).operator_concat (GALGAS_string (" argument") COMMA_SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)) ;
  //-------- @concatInstructionForGeneration
  //--- @ifExpressionForGeneration
  GALGAS_string temp_0 ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (424)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    temp_0 = GALGAS_string ("s") ;
  }else if (kBoolFalse == test_1) {
    temp_0 = GALGAS_string::makeEmptyString () ;
  }
  result_outResult.dotAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (424)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_TexpressionList enumerator_16825 (constinArgument_inParameterTypeList, kEnumeration_up) ;
  //--- complex foreach instruction
  const bool bool_2 = true ;
  if (enumerator_16825.hasCurrentObject () && bool_2) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (426)) ;
    while (enumerator_16825.hasCurrentObject () && bool_2) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (categoryReader_messageGoilTemplateType (enumerator_16825.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (427)) COMMA_SOURCE_FILE_AT_LINE (427)) ;
      enumerator_16825.gotoNextObject () ;
      if (enumerator_16825.hasCurrentObject () && bool_2) {
        //-------- @concatInstructionForGeneration
        result_outResult.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (428)) ;
      }
    }
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_argumentListSignature [2] = {
  & kTypeDescriptor_GALGAS_TexpressionList,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_argumentListSignature (C_Compiler * inCompiler,
                                                                      const cObjectArray & inEffectiveParameterArray,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  const GALGAS_TexpressionList operand0 = GALGAS_TexpressionList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_argumentListSignature (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_argumentListSignature ("argumentListSignature",
                                                                       functionWithGenericHeader_argumentListSignature,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       1,
                                                                       functionArgs_argumentListSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'checkInvocationHasNoArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasNoArgument (const GALGAS_Ttype constinArgument_inType,
                                           const GALGAS_lstring constinArgument_inMethodName,
                                           const GALGAS_TexpressionList constinArgument_inParameterTypeList,
                                           C_Compiler * inCompiler
                                           COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (443)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling '").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (444)) COMMA_SOURCE_FILE_AT_LINE (444)).operator_concat (GALGAS_string ("' on a ") COMMA_SOURCE_FILE_AT_LINE (444)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (445)) COMMA_SOURCE_FILE_AT_LINE (445)).operator_concat (GALGAS_string (" type requires no argument; ") COMMA_SOURCE_FILE_AT_LINE (445)).operator_concat (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (446)) COMMA_SOURCE_FILE_AT_LINE (446)) COMMA_SOURCE_FILE_AT_LINE (444)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkInvocationHasArguments'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasArguments (const GALGAS_Ttype constinArgument_inType,
                                          const GALGAS_lstring constinArgument_inMethodName,
                                          const GALGAS_TexpressionList constinArgument_inParameterTypeList,
                                          const GALGAS_Ttype constinArgument_inExpectedType,
                                          const GALGAS_uint constinArgument_argsNumber,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_parameterType ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_Tvalue joker_17963_0 ; // Joker input parameter
  constinArgument_inParameterTypeList.method_first (joker_17963_0, var_parameterType, inCompiler COMMA_SOURCE_FILE_AT_LINE (458)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inParameterTypeList.reader_length (SOURCE_FILE_AT_LINE (459)).objectCompare (constinArgument_argsNumber)).operator_or (GALGAS_bool (kIsNotEqual, var_parameterType.objectCompare (constinArgument_inExpectedType)) COMMA_SOURCE_FILE_AT_LINE (459)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("calling '").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (460)) COMMA_SOURCE_FILE_AT_LINE (460)).operator_concat (GALGAS_string ("' on a ") COMMA_SOURCE_FILE_AT_LINE (460)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (461)) COMMA_SOURCE_FILE_AT_LINE (461)).operator_concat (GALGAS_string (" type requires ") COMMA_SOURCE_FILE_AT_LINE (461)).operator_concat (constinArgument_argsNumber.reader_string (SOURCE_FILE_AT_LINE (461)) COMMA_SOURCE_FILE_AT_LINE (461)).operator_concat (GALGAS_string (" unsigned argument(s); ") COMMA_SOURCE_FILE_AT_LINE (461)).operator_concat (function_argumentListSignature (constinArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (462)) COMMA_SOURCE_FILE_AT_LINE (462)) COMMA_SOURCE_FILE_AT_LINE (460)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'templateMethodInvocation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateMethodInvocation (const GALGAS_Ttype constinArgument_inType,
                                       const GALGAS_Tvalue constinArgument_inValue,
                                       const GALGAS_lstring constinArgument_inMethodName,
                                       GALGAS_TexpressionList inArgument_inParameterTypeList,
                                       GALGAS_Ttype & outArgument_outResultType,
                                       GALGAS_Tvalue & outArgument_outResultValue,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultType.drop () ; // Release 'out' argument
  outArgument_outResultValue.drop () ; // Release 'out' argument
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (480)).objectCompare (GALGAS_string ("description"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    { //-------- @routineCallInstructionForGeneration
    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (481)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (482)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mDescription (SOURCE_FILE_AT_LINE (483)).reader_string (SOURCE_FILE_AT_LINE (483)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (483)), inCompiler COMMA_SOURCE_FILE_AT_LINE (483)) ;
  }else if (kBoolFalse == test_0) {
    //------- @switchInstructionForGeneration
    if (constinArgument_inType.isValid ()) {
      switch (constinArgument_inType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (487)).objectCompare (GALGAS_string ("trueOrFalse"))).boolEnum () ;
        if (kBoolTrue == test_1) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (488)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (489)) ;
          //-------- @assignmentInstructionForGeneration
          //--- @ifExpressionForGeneration
          GALGAS_string temp_2 ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (491)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolEnum () ;
          if (kBoolTrue == test_3) {
            temp_2 = GALGAS_string ("true") ;
          }else if (kBoolFalse == test_3) {
            temp_2 = GALGAS_string ("false") ;
          }
          outArgument_outResultValue = function_valueWithString (temp_2, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (492)), inCompiler COMMA_SOURCE_FILE_AT_LINE (490)) ;
        }else if (kBoolFalse == test_1) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (494)).objectCompare (GALGAS_string ("yesOrNo"))).boolEnum () ;
          if (kBoolTrue == test_4) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (495)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (496)) ;
            //-------- @assignmentInstructionForGeneration
            //--- @ifExpressionForGeneration
            GALGAS_string temp_5 ;
            const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (498)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolEnum () ;
            if (kBoolTrue == test_6) {
              temp_5 = GALGAS_string ("yes") ;
            }else if (kBoolFalse == test_6) {
              temp_5 = GALGAS_string ("no") ;
            }
            outArgument_outResultValue = function_valueWithString (temp_5, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (499)), inCompiler COMMA_SOURCE_FILE_AT_LINE (497)) ;
          }else if (kBoolFalse == test_4) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (501)).objectCompare (GALGAS_string ("unsigned"))).boolEnum () ;
            if (kBoolTrue == test_7) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (502)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (503)) ;
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = constinArgument_inValue ;
            }else if (kBoolFalse == test_7) {
              //-------- @errorInstructionForGeneration
              GALGAS_location location_8 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_8, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (506)) COMMA_SOURCE_FILE_AT_LINE (506)).operator_concat (GALGAS_string (" template method is not defined") COMMA_SOURCE_FILE_AT_LINE (506)) COMMA_SOURCE_FILE_AT_LINE (506)) ;
              outArgument_outResultValue.drop () ; // Release error dropped variable
              outArgument_outResultType.drop () ; // Release error dropped variable
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (509)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (511)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (512)).reader_string (SOURCE_FILE_AT_LINE (512)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (512)), inCompiler COMMA_SOURCE_FILE_AT_LINE (512)) ;
        }else if (kBoolFalse == test_9) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (513)).objectCompare (GALGAS_string ("hexString"))).boolEnum () ;
          if (kBoolTrue == test_10) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (514)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (515)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (516)).reader_uint_36__34_ (inCompiler COMMA_SOURCE_FILE_AT_LINE (516)).reader_hexString (SOURCE_FILE_AT_LINE (516)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (516)), inCompiler COMMA_SOURCE_FILE_AT_LINE (516)) ;
          }else if (kBoolFalse == test_10) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (517)).objectCompare (GALGAS_string ("numberOfBytes"))).operator_or (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (517)).objectCompare (GALGAS_string ("signedNumberOfBytes"))) COMMA_SOURCE_FILE_AT_LINE (517)).boolEnum () ;
            if (kBoolTrue == test_11) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (518)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (519)) ;
              //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
              GALGAS_sint_36__34_ var_value = constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (520)) ;
              //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
              GALGAS_uint var_numberOfBytes = GALGAS_uint ((PMUInt32) 1U) ;
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (523)).objectCompare (GALGAS_string ("signedNumberOfBytes"))).boolEnum () ;
              if (kBoolTrue == test_12) {
                //-------- @assignmentInstructionForGeneration
                var_value = var_value.multiply_operation (GALGAS_uint ((PMUInt32) 2U).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (524)), inCompiler COMMA_SOURCE_FILE_AT_LINE (524)) ;
              }
              //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
              GALGAS_uint var_count = GALGAS_uint ((PMUInt32) 0U) ;
              //-------- @loopInstructionForGeneration
              if (GALGAS_uint ((PMUInt32) 4U).isValid ()) {
                PMUInt32 variant_21294 = GALGAS_uint ((PMUInt32) 4U).uintValue () ;
                bool loop_21294 = true ;
                while (loop_21294) {
                  loop_21294 = GALGAS_bool (kIsStrictInf, var_count.objectCompare (GALGAS_uint ((PMUInt32) 4U))).isValid () ;
                  if (loop_21294) {
                    loop_21294 = GALGAS_bool (kIsStrictInf, var_count.objectCompare (GALGAS_uint ((PMUInt32) 4U))).boolValue () ;
                  }
                  if (loop_21294 && (0 == variant_21294)) {
                    loop_21294 = false ;
                    inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (527)) ;
                  }
                  if (loop_21294) {
                    variant_21294 -- ;
                    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                    GALGAS_sint_36__34_ var_maxValue = GALGAS_sint_36__34_ ((PMSInt64) 1LL).left_shift_operation (var_numberOfBytes.multiply_operation (GALGAS_uint ((PMUInt32) 8U), inCompiler COMMA_SOURCE_FILE_AT_LINE (529)) COMMA_SOURCE_FILE_AT_LINE (529)).substract_operation (GALGAS_sint_36__34_ ((PMSInt64) 1LL), inCompiler COMMA_SOURCE_FILE_AT_LINE (529)) ;
                    //-------- @ifInstructionForGeneration
                    const enumGalgasBool test_13 = GALGAS_bool (kIsStrictInf, var_maxValue.objectCompare (var_value)).boolEnum () ;
                    if (kBoolTrue == test_13) {
                      //-------- @assignmentInstructionForGeneration
                      var_numberOfBytes = var_numberOfBytes.multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (531)) ;
                    }
                    //-------- @incrementInstructionForGeneration
                    var_count.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (533)) ;
                  }
                }
              }
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = function_valueWithUnsigned (var_numberOfBytes.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (535)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (535)), inCompiler COMMA_SOURCE_FILE_AT_LINE (535)) ;
            }else if (kBoolFalse == test_11) {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (536)).objectCompare (GALGAS_string ("numberOfBits"))).operator_or (GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (536)).objectCompare (GALGAS_string ("signedNumberOfBits"))) COMMA_SOURCE_FILE_AT_LINE (536)).boolEnum () ;
              if (kBoolTrue == test_14) {
                { //-------- @routineCallInstructionForGeneration
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (537)) ;
                } //-------- @routineCallInstructionForGeneration
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (538)) ;
                //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                GALGAS_sint_36__34_ var_value = constinArgument_inValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (539)) ;
                //-------- @ifInstructionForGeneration
                const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (540)).objectCompare (GALGAS_string ("signedNumberOfBits"))).boolEnum () ;
                if (kBoolTrue == test_15) {
                  //-------- @assignmentInstructionForGeneration
                  var_value = var_value.multiply_operation (GALGAS_uint ((PMUInt32) 2U).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (541)), inCompiler COMMA_SOURCE_FILE_AT_LINE (541)) ;
                }
                //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                GALGAS_sint_36__34_ var_numberOfBits = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
                //-------- @loopInstructionForGeneration
                if (GALGAS_uint ((PMUInt32) 64U).isValid ()) {
                  PMUInt32 variant_22095 = GALGAS_uint ((PMUInt32) 64U).uintValue () ;
                  bool loop_22095 = true ;
                  while (loop_22095) {
                    loop_22095 = GALGAS_bool (kIsNotEqual, var_value.objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).isValid () ;
                    if (loop_22095) {
                      loop_22095 = GALGAS_bool (kIsNotEqual, var_value.objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolValue () ;
                    }
                    if (loop_22095 && (0 == variant_22095)) {
                      loop_22095 = false ;
                      inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (545)) ;
                    }
                    if (loop_22095) {
                      variant_22095 -- ;
                      //-------- @incrementInstructionForGeneration
                      var_numberOfBits.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (547)) ;
                      //-------- @assignmentInstructionForGeneration
                      var_value = var_value.right_shift_operation (GALGAS_uint ((PMUInt32) 1U) COMMA_SOURCE_FILE_AT_LINE (548)) ;
                    }
                  }
                }
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultValue = function_valueWithSigned (var_numberOfBits, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (550)), inCompiler COMMA_SOURCE_FILE_AT_LINE (550)) ;
              }else if (kBoolFalse == test_14) {
                //-------- @errorInstructionForGeneration
                GALGAS_location location_16 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_16, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (552)) COMMA_SOURCE_FILE_AT_LINE (552)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (552)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (552)) COMMA_SOURCE_FILE_AT_LINE (552)) COMMA_SOURCE_FILE_AT_LINE (552)) ;
                outArgument_outResultValue.drop () ; // Release error dropped variable
                outArgument_outResultType.drop () ; // Release error dropped variable
              }
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_stringType: {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (555)).objectCompare (GALGAS_string ("HTMLRepresentation"))).boolEnum () ;
        if (kBoolTrue == test_17) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (556)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (557)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (558)).reader_HTMLRepresentation (SOURCE_FILE_AT_LINE (558)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (558)), inCompiler COMMA_SOURCE_FILE_AT_LINE (558)) ;
        }else if (kBoolFalse == test_17) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (559)).objectCompare (GALGAS_string ("identifierRepresentation"))).boolEnum () ;
          if (kBoolTrue == test_18) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (560)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (561)) ;
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (562)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (562)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (562)), inCompiler COMMA_SOURCE_FILE_AT_LINE (562)) ;
          }else if (kBoolFalse == test_18) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (563)).objectCompare (GALGAS_string ("fileExists"))).boolEnum () ;
            if (kBoolTrue == test_19) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (564)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (565)) ;
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = function_valueWithBool (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (566)).reader_fileExists (SOURCE_FILE_AT_LINE (566)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (566)), inCompiler COMMA_SOURCE_FILE_AT_LINE (566)) ;
            }else if (kBoolFalse == test_19) {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (567)).objectCompare (GALGAS_string ("lowercaseString"))).boolEnum () ;
              if (kBoolTrue == test_20) {
                { //-------- @routineCallInstructionForGeneration
                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (568)) ;
                } //-------- @routineCallInstructionForGeneration
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (569)) ;
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (570)).reader_lowercaseString (SOURCE_FILE_AT_LINE (570)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (570)), inCompiler COMMA_SOURCE_FILE_AT_LINE (570)) ;
              }else if (kBoolFalse == test_20) {
                //-------- @ifInstructionForGeneration
                const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (571)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
                if (kBoolTrue == test_21) {
                  { //-------- @routineCallInstructionForGeneration
                  routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (572)) ;
                  } //-------- @routineCallInstructionForGeneration
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (573)) ;
                  //-------- @assignmentInstructionForGeneration
                  outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (574)).reader_length (SOURCE_FILE_AT_LINE (574)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (574)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (574)), inCompiler COMMA_SOURCE_FILE_AT_LINE (574)) ;
                }else if (kBoolFalse == test_21) {
                  //-------- @ifInstructionForGeneration
                  const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (575)).objectCompare (GALGAS_string ("stringByCapitalizingFirstCharacter"))).boolEnum () ;
                  if (kBoolTrue == test_22) {
                    { //-------- @routineCallInstructionForGeneration
                    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (576)) ;
                    } //-------- @routineCallInstructionForGeneration
                    //-------- @assignmentInstructionForGeneration
                    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (577)) ;
                    //-------- @assignmentInstructionForGeneration
                    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (578)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (578)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (578)), inCompiler COMMA_SOURCE_FILE_AT_LINE (578)) ;
                  }else if (kBoolFalse == test_22) {
                    //-------- @ifInstructionForGeneration
                    const enumGalgasBool test_23 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (579)).objectCompare (GALGAS_string ("uppercaseString"))).boolEnum () ;
                    if (kBoolTrue == test_23) {
                      { //-------- @routineCallInstructionForGeneration
                      routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (580)) ;
                      } //-------- @routineCallInstructionForGeneration
                      //-------- @assignmentInstructionForGeneration
                      outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (581)) ;
                      //-------- @assignmentInstructionForGeneration
                      outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (582)).reader_uppercaseString (SOURCE_FILE_AT_LINE (582)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (582)), inCompiler COMMA_SOURCE_FILE_AT_LINE (582)) ;
                    }else if (kBoolFalse == test_23) {
                      //-------- @ifInstructionForGeneration
                      const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (583)).objectCompare (GALGAS_string ("unsigned"))).boolEnum () ;
                      if (kBoolTrue == test_24) {
                        { //-------- @routineCallInstructionForGeneration
                        routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (584)) ;
                        } //-------- @routineCallInstructionForGeneration
                        //-------- @assignmentInstructionForGeneration
                        outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (585)) ;
                        //-------- @assignmentInstructionForGeneration
                        outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (586)).reader_decimalUnsignedNumber (inCompiler COMMA_SOURCE_FILE_AT_LINE (586)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (586)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (586)), inCompiler COMMA_SOURCE_FILE_AT_LINE (586)) ;
                      }else if (kBoolFalse == test_24) {
                        //-------- @ifInstructionForGeneration
                        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (587)).objectCompare (GALGAS_string ("leftSubString"))).boolEnum () ;
                        if (kBoolTrue == test_25) {
                          { //-------- @routineCallInstructionForGeneration
                          routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (588)), GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (588)) ;
                          } //-------- @routineCallInstructionForGeneration
                          //-------- @localVariableDeclarationForGeneration
                          GALGAS_Tvalue var_parameter ;
                          //-------- @methodCallInstructionForGeneration
                          GALGAS_Ttype joker_25072_0 ; // Joker input parameter
                          inArgument_inParameterTypeList.method_first (var_parameter, joker_25072_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (590)) ;
                          //-------- END @methodCallInstructionForGeneration
                          //-------- @assignmentInstructionForGeneration
                          outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (591)) ;
                          //-------- @assignmentInstructionForGeneration
                          outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (592)).reader_leftSubString (var_parameter.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (592)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (592)) COMMA_SOURCE_FILE_AT_LINE (592)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (592)), inCompiler COMMA_SOURCE_FILE_AT_LINE (592)) ;
                        }else if (kBoolFalse == test_25) {
                          //-------- @ifInstructionForGeneration
                          const enumGalgasBool test_26 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (593)).objectCompare (GALGAS_string ("rightSubString"))).boolEnum () ;
                          if (kBoolTrue == test_26) {
                            { //-------- @routineCallInstructionForGeneration
                            routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (594)), GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (594)) ;
                            } //-------- @routineCallInstructionForGeneration
                            //-------- @localVariableDeclarationForGeneration
                            GALGAS_Tvalue var_parameter ;
                            //-------- @methodCallInstructionForGeneration
                            GALGAS_Ttype joker_25489_0 ; // Joker input parameter
                            inArgument_inParameterTypeList.method_first (var_parameter, joker_25489_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (596)) ;
                            //-------- END @methodCallInstructionForGeneration
                            //-------- @assignmentInstructionForGeneration
                            outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (597)) ;
                            //-------- @assignmentInstructionForGeneration
                            outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (598)).reader_rightSubString (var_parameter.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (598)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (598)) COMMA_SOURCE_FILE_AT_LINE (598)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (598)), inCompiler COMMA_SOURCE_FILE_AT_LINE (598)) ;
                          }else if (kBoolFalse == test_26) {
                            //-------- @ifInstructionForGeneration
                            const enumGalgasBool test_27 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (599)).objectCompare (GALGAS_string ("subString"))).boolEnum () ;
                            if (kBoolTrue == test_27) {
                              { //-------- @routineCallInstructionForGeneration
                              routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (600)), GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (600)) ;
                              } //-------- @routineCallInstructionForGeneration
                              //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                              GALGAS_Tvalue var_start = inArgument_inParameterTypeList.reader_mValueAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (601)) ;
                              //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                              GALGAS_Tvalue var_length = inArgument_inParameterTypeList.reader_mValueAtIndex (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (602)) ;
                              //-------- @assignmentInstructionForGeneration
                              outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (605)) ;
                              //-------- @assignmentInstructionForGeneration
                              outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (606)).reader_subString (var_start.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (606)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (606)), var_length.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (606)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (606)) COMMA_SOURCE_FILE_AT_LINE (606)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (606)), inCompiler COMMA_SOURCE_FILE_AT_LINE (606)) ;
                            }else if (kBoolFalse == test_27) {
                              //-------- @ifInstructionForGeneration
                              const enumGalgasBool test_28 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (607)).objectCompare (GALGAS_string ("reversedString"))).boolEnum () ;
                              if (kBoolTrue == test_28) {
                                { //-------- @routineCallInstructionForGeneration
                                routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (608)) ;
                                } //-------- @routineCallInstructionForGeneration
                                //-------- @assignmentInstructionForGeneration
                                outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (609)) ;
                                //-------- @assignmentInstructionForGeneration
                                outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (610)).reader_reversedString (SOURCE_FILE_AT_LINE (610)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (610)), inCompiler COMMA_SOURCE_FILE_AT_LINE (610)) ;
                              }else if (kBoolFalse == test_28) {
                                //-------- @ifInstructionForGeneration
                                const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (611)).objectCompare (GALGAS_string ("componentsSeparatedByString"))).boolEnum () ;
                                if (kBoolTrue == test_29) {
                                  { //-------- @routineCallInstructionForGeneration
                                  routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (612)), GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (612)) ;
                                  } //-------- @routineCallInstructionForGeneration
                                  //-------- @localVariableDeclarationForGeneration
                                  GALGAS_Tvalue var_separator ;
                                  //-------- @methodCallInstructionForGeneration
                                  GALGAS_Ttype joker_26738_0 ; // Joker input parameter
                                  inArgument_inParameterTypeList.method_first (var_separator, joker_26738_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (614)) ;
                                  //-------- END @methodCallInstructionForGeneration
                                  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                  GALGAS_stringlist var_stringlist = constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (615)).reader_componentsSeparatedByString (var_separator.reader_mStringValue (SOURCE_FILE_AT_LINE (615)) COMMA_SOURCE_FILE_AT_LINE (615)) ;
                                  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
                                  GALGAS_TfieldMapList var_result = GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (616)) ;
                                  //-------- @foreachInstructionForGeneration
                                  cEnumerator_stringlist enumerator_26927 (var_stringlist, kEnumeration_up) ;
                                  //--- simple foreach instruction
                                  while (enumerator_26927.hasCurrentObject ()) {
                                    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
                                    GALGAS_TfieldMap var_item = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (618)) ;
                                    { //-------- @routineCallInstructionForGeneration
                                    routine_addStringValue (var_item, function_lstringWith (GALGAS_string ("VALUE"), inCompiler COMMA_SOURCE_FILE_AT_LINE (619)), enumerator_26927.current_mValue (HERE), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (619)), inCompiler COMMA_SOURCE_FILE_AT_LINE (619)) ;
                                    } //-------- @routineCallInstructionForGeneration
                                    //-------- @plusEqualnstructionForGeneration
                                    var_result.addAssign_operation (var_item COMMA_SOURCE_FILE_AT_LINE (620)) ;
                                    enumerator_26927.gotoNextObject () ;
                                  }
                                  //-------- @assignmentInstructionForGeneration
                                  outArgument_outResultType = GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (622)) ;
                                  //-------- @assignmentInstructionForGeneration
                                  outArgument_outResultValue = function_valueWithList (var_result, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (623)), inCompiler COMMA_SOURCE_FILE_AT_LINE (623)) ;
                                }else if (kBoolFalse == test_29) {
                                  //-------- @ifInstructionForGeneration
                                  const enumGalgasBool test_30 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (624)).objectCompare (GALGAS_string ("interpretEscape"))).boolEnum () ;
                                  if (kBoolTrue == test_30) {
                                    { //-------- @routineCallInstructionForGeneration
                                    routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (625)) ;
                                    } //-------- @routineCallInstructionForGeneration
                                    //-------- @assignmentInstructionForGeneration
                                    outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (626)) ;
                                    //-------- @assignmentInstructionForGeneration
                                    outArgument_outResultValue = function_valueWithString (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (627)).reader_stringByReplacingStringByString (GALGAS_string ("\\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (627)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (627)), inCompiler COMMA_SOURCE_FILE_AT_LINE (627)) ;
                                  }else if (kBoolFalse == test_30) {
                                    //-------- @ifInstructionForGeneration
                                    const enumGalgasBool test_31 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (628)).objectCompare (GALGAS_string ("columnPrefixedBy"))).boolEnum () ;
                                    if (kBoolTrue == test_31) {
                                      { //-------- @routineCallInstructionForGeneration
                                      routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (629)), GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (629)) ;
                                      } //-------- @routineCallInstructionForGeneration
                                      //-------- @localVariableDeclarationForGeneration
                                      GALGAS_Tvalue var_separator ;
                                      //-------- @methodCallInstructionForGeneration
                                      GALGAS_Ttype joker_27763_0 ; // Joker input parameter
                                      inArgument_inParameterTypeList.method_first (var_separator, joker_27763_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (631)) ;
                                      //-------- END @methodCallInstructionForGeneration
                                      //-------- @assignmentInstructionForGeneration
                                      outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (632)) ;
                                      //-------- @assignmentInstructionForGeneration
                                      outArgument_outResultValue = function_valueWithString (var_separator.reader_mStringValue (SOURCE_FILE_AT_LINE (633)).operator_concat (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (633)).reader_stringByReplacingStringByString (GALGAS_string ("\n"), GALGAS_string ("\n").operator_concat (var_separator.reader_mStringValue (SOURCE_FILE_AT_LINE (633)) COMMA_SOURCE_FILE_AT_LINE (633)), inCompiler COMMA_SOURCE_FILE_AT_LINE (633)) COMMA_SOURCE_FILE_AT_LINE (633)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (633)), inCompiler COMMA_SOURCE_FILE_AT_LINE (633)) ;
                                    }else if (kBoolFalse == test_31) {
                                      //-------- @ifInstructionForGeneration
                                      const enumGalgasBool test_32 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (634)).objectCompare (GALGAS_string ("wrap"))).boolEnum () ;
                                      if (kBoolTrue == test_32) {
                                        { //-------- @routineCallInstructionForGeneration
                                        routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (635)), GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (635)) ;
                                        } //-------- @routineCallInstructionForGeneration
                                        //-------- @localVariableDeclarationForGeneration
                                        GALGAS_Tvalue var_width ;
                                        { //-------- @modifierCallInstructionForGeneration
                                        GALGAS_Ttype joker_28320_0 ; // Joker input parameter
                                        inArgument_inParameterTypeList.modifier_popFirst (var_width, joker_28320_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (638)) ;
                                        } //-------- END @typeMethodInstructionForGeneration
                                        //-------- @localVariableDeclarationForGeneration
                                        GALGAS_Tvalue var_shift ;
                                        { //-------- @modifierCallInstructionForGeneration
                                        GALGAS_Ttype joker_28395_0 ; // Joker input parameter
                                        inArgument_inParameterTypeList.modifier_popFirst (var_shift, joker_28395_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (640)) ;
                                        } //-------- END @typeMethodInstructionForGeneration
                                        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                        GALGAS_string var_stringshift = GALGAS_string::constructor_stringWithSequenceOfCharacters (GALGAS_char (TO_UNICODE (32)), var_shift.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (641)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (641)) COMMA_SOURCE_FILE_AT_LINE (641)) ;
                                        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                        GALGAS_string var_result = constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (642)) ;
                                        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                        GALGAS_stringlist var_paragraph = var_result.reader_componentsSeparatedByString (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (651)) ;
                                        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
                                        GALGAS_stringlist var_resultParagraph = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (652)) ;
                                        //-------- @foreachInstructionForGeneration
                                        cEnumerator_stringlist enumerator_29062 (var_paragraph, kEnumeration_up) ;
                                        //--- simple foreach instruction
                                        while (enumerator_29062.hasCurrentObject ()) {
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_stringlist var_parts = enumerator_29062.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (654)) ;
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_sint_36__34_ var_linewidth = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_bool var_newline = GALGAS_bool (true) ;
                                          //-------- @assignmentInstructionForGeneration
                                          var_result = GALGAS_string::makeEmptyString () ;
                                          //-------- @foreachInstructionForGeneration
                                          cEnumerator_stringlist enumerator_29278 (var_parts, kEnumeration_up) ;
                                          //--- simple foreach instruction
                                          while (enumerator_29278.hasCurrentObject ()) {
                                            //-------- @ifInstructionForGeneration
                                            const enumGalgasBool test_33 = GALGAS_bool (kIsStrictSup, var_linewidth.add_operation (enumerator_29278.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (659)).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (659)), inCompiler COMMA_SOURCE_FILE_AT_LINE (659)).objectCompare (var_width.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (659)))).boolEnum () ;
                                            if (kBoolTrue == test_33) {
                                              //-------- @concatInstructionForGeneration
                                              var_result.dotAssign_operation (GALGAS_string ("\n").operator_concat (var_stringshift COMMA_SOURCE_FILE_AT_LINE (660)) COMMA_SOURCE_FILE_AT_LINE (660)) ;
                                              //-------- @assignmentInstructionForGeneration
                                              var_linewidth = var_shift.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (661)) ;
                                              //-------- @assignmentInstructionForGeneration
                                              var_newline = GALGAS_bool (true) ;
                                            }
                                            //-------- @ifInstructionForGeneration
                                            const enumGalgasBool test_34 = GALGAS_bool (kIsEqual, var_newline.objectCompare (GALGAS_bool (false))).boolEnum () ;
                                            if (kBoolTrue == test_34) {
                                              //-------- @assignmentInstructionForGeneration
                                              var_linewidth = var_linewidth.add_operation (GALGAS_sint_36__34_ ((PMSInt64) 1LL), inCompiler COMMA_SOURCE_FILE_AT_LINE (665)) ;
                                              //-------- @concatInstructionForGeneration
                                              var_result.dotAssign_operation (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (666)) ;
                                            }
                                            //-------- @assignmentInstructionForGeneration
                                            var_linewidth = var_linewidth.add_operation (enumerator_29278.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (668)).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (668)), inCompiler COMMA_SOURCE_FILE_AT_LINE (668)) ;
                                            //-------- @concatInstructionForGeneration
                                            var_result.dotAssign_operation (enumerator_29278.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (669)) ;
                                            //-------- @assignmentInstructionForGeneration
                                            var_newline = GALGAS_bool (false) ;
                                            enumerator_29278.gotoNextObject () ;
                                          }
                                          //-------- @plusEqualnstructionForGeneration
                                          var_resultParagraph.addAssign_operation (var_result COMMA_SOURCE_FILE_AT_LINE (672)) ;
                                          enumerator_29062.gotoNextObject () ;
                                        }
                                        //-------- @assignmentInstructionForGeneration
                                        outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (674)) ;
                                        //-------- @assignmentInstructionForGeneration
                                        outArgument_outResultValue = function_valueWithString (GALGAS_string::constructor_componentsJoinedByString (var_resultParagraph, GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (675)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (675)), inCompiler COMMA_SOURCE_FILE_AT_LINE (675)) ;
                                      }else if (kBoolFalse == test_32) {
                                        //-------- @ifInstructionForGeneration
                                        const enumGalgasBool test_35 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (676)).objectCompare (GALGAS_string ("substringExists"))).boolEnum () ;
                                        if (kBoolTrue == test_35) {
                                          { //-------- @routineCallInstructionForGeneration
                                          routine_checkInvocationHasArguments (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (677)), GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (677)) ;
                                          } //-------- @routineCallInstructionForGeneration
                                          //-------- @localVariableDeclarationForGeneration
                                          GALGAS_Tvalue var_subString ;
                                          { //-------- @modifierCallInstructionForGeneration
                                          GALGAS_Ttype joker_30232_0 ; // Joker input parameter
                                          inArgument_inParameterTypeList.modifier_popFirst (var_subString, joker_30232_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (678)) ;
                                          } //-------- END @typeMethodInstructionForGeneration
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_uint var_start = GALGAS_uint ((PMUInt32) 0U) ;
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_uint var_stop = constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (680)).reader_length (SOURCE_FILE_AT_LINE (680)).substract_operation (var_subString.reader_mStringValue (SOURCE_FILE_AT_LINE (680)).reader_length (SOURCE_FILE_AT_LINE (680)), inCompiler COMMA_SOURCE_FILE_AT_LINE (680)) ;
                                          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
                                          GALGAS_bool var_exists = GALGAS_bool (false) ;
                                          //-------- @loopInstructionForGeneration
                                          if (constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (682)).reader_length (SOURCE_FILE_AT_LINE (682)).isValid ()) {
                                            PMUInt32 variant_30398 = constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (682)).reader_length (SOURCE_FILE_AT_LINE (682)).uintValue () ;
                                            bool loop_30398 = true ;
                                            while (loop_30398) {
                                              loop_30398 = GALGAS_bool (kIsInfOrEqual, var_start.objectCompare (var_stop)).isValid () ;
                                              if (loop_30398) {
                                                loop_30398 = GALGAS_bool (kIsInfOrEqual, var_start.objectCompare (var_stop)).boolValue () ;
                                              }
                                              if (loop_30398 && (0 == variant_30398)) {
                                                loop_30398 = false ;
                                                inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (682)) ;
                                              }
                                              if (loop_30398) {
                                                variant_30398 -- ;
                                                //-------- @ifInstructionForGeneration
                                                const enumGalgasBool test_36 = GALGAS_bool (kIsEqual, constinArgument_inValue.reader_mStringValue (SOURCE_FILE_AT_LINE (684)).reader_subString (var_start, var_subString.reader_mStringValue (SOURCE_FILE_AT_LINE (684)).reader_length (SOURCE_FILE_AT_LINE (684)) COMMA_SOURCE_FILE_AT_LINE (684)).objectCompare (var_subString.reader_mStringValue (SOURCE_FILE_AT_LINE (684)))).boolEnum () ;
                                                if (kBoolTrue == test_36) {
                                                  //-------- @assignmentInstructionForGeneration
                                                  var_exists = GALGAS_bool (true) ;
                                                }
                                                //-------- @incrementInstructionForGeneration
                                                var_start.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (687)) ;
                                              }
                                            }
                                          }
                                          //-------- @assignmentInstructionForGeneration
                                          outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (689)) ;
                                          //-------- @assignmentInstructionForGeneration
                                          outArgument_outResultValue = function_valueWithBool (var_exists, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (690)), inCompiler COMMA_SOURCE_FILE_AT_LINE (690)) ;
                                        }else if (kBoolFalse == test_35) {
                                          //-------- @errorInstructionForGeneration
                                          GALGAS_location location_37 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
                                          inCompiler->emitSemanticError (location_37, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (692)) COMMA_SOURCE_FILE_AT_LINE (692)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (692)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (692)) COMMA_SOURCE_FILE_AT_LINE (692)) COMMA_SOURCE_FILE_AT_LINE (692)) ;
                                          outArgument_outResultValue.drop () ; // Release error dropped variable
                                          outArgument_outResultType.drop () ; // Release error dropped variable
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_38 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_38, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (695)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_listType: {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_39 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (697)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
        if (kBoolTrue == test_39) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (698)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (699)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (700)).reader_length (SOURCE_FILE_AT_LINE (700)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (700)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (700)), inCompiler COMMA_SOURCE_FILE_AT_LINE (700)) ;
        }else if (kBoolFalse == test_39) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_40 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (701)).objectCompare (GALGAS_string ("first"))).boolEnum () ;
          if (kBoolTrue == test_40) {
            { //-------- @routineCallInstructionForGeneration
            routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (702)) ;
            } //-------- @routineCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (703)) ;
            //-------- @localVariableDeclarationForGeneration
            GALGAS_TfieldMap var_firstElement ;
            //-------- @methodCallInstructionForGeneration
            constinArgument_inValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (705)).method_first (var_firstElement, inCompiler COMMA_SOURCE_FILE_AT_LINE (705)) ;
            //-------- END @methodCallInstructionForGeneration
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultValue = function_valueWithStruct (var_firstElement, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (706)), inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) ;
          }else if (kBoolFalse == test_40) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_41 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (707)).objectCompare (GALGAS_string ("last"))).boolEnum () ;
            if (kBoolTrue == test_41) {
              { //-------- @routineCallInstructionForGeneration
              routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (708)) ;
              } //-------- @routineCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (709)) ;
              //-------- @localVariableDeclarationForGeneration
              GALGAS_TfieldMap var_lastElement ;
              //-------- @methodCallInstructionForGeneration
              constinArgument_inValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (711)).method_last (var_lastElement, inCompiler COMMA_SOURCE_FILE_AT_LINE (711)) ;
              //-------- END @methodCallInstructionForGeneration
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultValue = function_valueWithStruct (var_lastElement, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (712)), inCompiler COMMA_SOURCE_FILE_AT_LINE (712)) ;
            }else if (kBoolFalse == test_41) {
              //-------- @errorInstructionForGeneration
              GALGAS_location location_42 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_42, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (714)) COMMA_SOURCE_FILE_AT_LINE (714)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (714)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (714)) COMMA_SOURCE_FILE_AT_LINE (714)) COMMA_SOURCE_FILE_AT_LINE (714)) ;
              outArgument_outResultValue.drop () ; // Release error dropped variable
              outArgument_outResultType.drop () ; // Release error dropped variable
            }
          }
        }
        } break ;
      case GALGAS_Ttype::kEnum_mapType: {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_43 = GALGAS_bool (kIsEqual, constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (717)).objectCompare (GALGAS_string ("length"))).boolEnum () ;
        if (kBoolTrue == test_43) {
          { //-------- @routineCallInstructionForGeneration
          routine_checkInvocationHasNoArgument (constinArgument_inType, constinArgument_inMethodName, inArgument_inParameterTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (718)) ;
          } //-------- @routineCallInstructionForGeneration
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (719)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_outResultValue = function_valueWithUnsigned (constinArgument_inValue.reader_mStructValue (SOURCE_FILE_AT_LINE (720)).reader_count (SOURCE_FILE_AT_LINE (720)).reader_uint_36__34_ (SOURCE_FILE_AT_LINE (720)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (720)), inCompiler COMMA_SOURCE_FILE_AT_LINE (720)) ;
        }else if (kBoolFalse == test_43) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_44 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_44, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (722)) COMMA_SOURCE_FILE_AT_LINE (722)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (722)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (722)) COMMA_SOURCE_FILE_AT_LINE (722)) COMMA_SOURCE_FILE_AT_LINE (722)) ;
          outArgument_outResultValue.drop () ; // Release error dropped variable
          outArgument_outResultType.drop () ; // Release error dropped variable
        }
        } break ;
      case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_structType: {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_45 (constinArgument_inMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_45, GALGAS_string ("the ").operator_concat (constinArgument_inMethodName.reader_string (SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)).operator_concat (GALGAS_string (" template method is not defined for ") COMMA_SOURCE_FILE_AT_LINE (725)).operator_concat (categoryReader_messageGoilTemplateType (constinArgument_inType, inCompiler COMMA_SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (727)) ;
        outArgument_outResultValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
        } break ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'typeError'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_typeError (const GALGAS_lstring constinArgument_inFunctionName,
                        const GALGAS_type constinArgument_inActualType,
                        const GALGAS_string constinArgument_inExpectedTypeName,
                        const GALGAS_uint constinArgument_inParameterIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_m = GALGAS_string ("the function requires the parameter ").operator_concat (constinArgument_inParameterIndex.reader_string (SOURCE_FILE_AT_LINE (1482)) COMMA_SOURCE_FILE_AT_LINE (1482)).operator_concat (GALGAS_string (" to be ") COMMA_SOURCE_FILE_AT_LINE (1483)).operator_concat (constinArgument_inExpectedTypeName COMMA_SOURCE_FILE_AT_LINE (1483)).operator_concat (GALGAS_string ("; its type is ") COMMA_SOURCE_FILE_AT_LINE (1483)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    var_m.dotAssign_operation (GALGAS_string ("boolean") COMMA_SOURCE_FILE_AT_LINE (1486)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_uint_36__34_))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @concatInstructionForGeneration
      var_m.dotAssign_operation (GALGAS_string ("unsigned") COMMA_SOURCE_FILE_AT_LINE (1488)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, constinArgument_inActualType.objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @concatInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("string") COMMA_SOURCE_FILE_AT_LINE (1490)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @concatInstructionForGeneration
        var_m.dotAssign_operation (GALGAS_string ("a not allowed type") COMMA_SOURCE_FILE_AT_LINE (1492)) ;
      }
    }
  }
  //-------- @errorInstructionForGeneration
  GALGAS_location location_3 (constinArgument_inFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_3, var_m COMMA_SOURCE_FILE_AT_LINE (1494)) ;
}


//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                     const GALGAS_string constinArgument_inPath,
                                                                                                     const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                     const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                     GALGAS_Tvalue & outArgument_outValue,
                                                                                                     GALGAS_Ttype & outArgument_outResultType,
                                                                                                     C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (756)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (769)).operator_or (var_rightOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (769)) COMMA_SOURCE_FILE_AT_LINE (769)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchOrOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (770)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (776)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (789)).operator_xor (var_rightOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (789)) COMMA_SOURCE_FILE_AT_LINE (789)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchXorOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (790)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_expression_i0_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (756)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (776)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                           const GALGAS_string constinArgument_inPath,
                                                                                                           const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                           const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                           GALGAS_Tvalue & outArgument_outValue,
                                                                                                           GALGAS_Ttype & outArgument_outResultType,
                                                                                                           C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (822)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftOperand = outArgument_outValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightOperand ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_firstOperandType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_secondOperandType ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightOperand, var_secondOperandType, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (835)).operator_and (var_rightOperand.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (835)) COMMA_SOURCE_FILE_AT_LINE (835)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_matchAndOperatorForTemplate (var_firstOperandType, var_secondOperandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (836)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_term_i1_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (822)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                             const GALGAS_string constinArgument_inPath,
                                                                                                             const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                             const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                             GALGAS_Tvalue & outArgument_outValue,
                                                                                                             GALGAS_Ttype & outArgument_outResultType,
                                                                                                             C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (868)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (880)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (884)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (884)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (886)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (886)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (888)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (888)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (890)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (890)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_enumType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (892)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (892)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists, structs and maps may not be compared") COMMA_SOURCE_FILE_AT_LINE (894)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (896)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (898)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_0 ;
    const enumGalgasBool test_1 = var_result.boolEnum () ;
    if (kBoolTrue == test_1) {
      temp_0 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_1) {
      temp_0 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_0 ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (901)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (914)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (918)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (918)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (920)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (920)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (922)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (922)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (924)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (924)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_enumType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsNotEqual, var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (926)).objectCompare (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (926)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("lists, structs and maps may not be compared") COMMA_SOURCE_FILE_AT_LINE (928)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (930)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (932)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_2 ;
    const enumGalgasBool test_3 = var_result.boolEnum () ;
    if (kBoolTrue == test_3) {
      temp_2 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_3) {
      temp_2 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_2 ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (935)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (948)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (952)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (952)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (954)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (954)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsInfOrEqual, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (956)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (956)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (960)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (962)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_4 ;
    const enumGalgasBool test_5 = var_result.boolEnum () ;
    if (kBoolTrue == test_5) {
      temp_4 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_5) {
      temp_4 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_4 ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (965)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (978)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (982)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (982)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (984)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (984)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsSupOrEqual, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (986)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (986)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (990)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (992)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_6 ;
    const enumGalgasBool test_7 = var_result.boolEnum () ;
    if (kBoolTrue == test_7) {
      temp_6 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_7) {
      temp_6 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_6 ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (995)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1008)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1012)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1012)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1014)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1014)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictSup, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (1016)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (1016)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (1020)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1022)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_8 ;
    const enumGalgasBool test_9 = var_result.boolEnum () ;
    if (kBoolTrue == test_9) {
      temp_8 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_9) {
      temp_8 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_8 ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1025)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_Ttype var_leftType = outArgument_outResultType ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_rightExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_rightType ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
    { //-------- @routineCallInstructionForGeneration
    routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (var_leftType, var_rightType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1038)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_result ;
    //------- @switchInstructionForGeneration
    if (var_leftType.isValid ()) {
      switch (var_leftType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_boolType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1042)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1042)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1044)).objectCompare (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1044)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_floatType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (kIsStrictInf, var_leftExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (1046)).objectCompare (var_rightExpression.reader_mFloatValue (SOURCE_FILE_AT_LINE (1046)))) ;
        } break ;
      case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
        //-------- @assignmentInstructionForGeneration
        var_result = GALGAS_bool (false) ;
        } break ;
      case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (1050)) ;
        var_result.drop () ; // Release error dropped variable
        } break ;
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1052)) ;
    //-------- @assignmentInstructionForGeneration
    //--- @ifExpressionForGeneration
    GALGAS_sint_36__34_ temp_10 ;
    const enumGalgasBool test_11 = var_result.boolEnum () ;
    if (kBoolTrue == test_11) {
      temp_10 = GALGAS_sint_36__34_ ((PMSInt64) 1LL) ;
    }else if (kBoolFalse == test_11) {
      temp_10 = GALGAS_sint_36__34_ ((PMSInt64) 0LL) ;
    }
    outArgument_outValue.mAttribute_mInt_36__34_Value = temp_10 ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_relation_5F_factor_i2_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (868)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (901)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (935)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (965)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (995)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1025)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                               const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                               GALGAS_Tvalue & outArgument_outValue,
                                                                                                               GALGAS_Ttype & outArgument_outResultType,
                                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (1081)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_left_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1094)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1095)).left_shift_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1095)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1095)) COMMA_SOURCE_FILE_AT_LINE (1095)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (1097)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_right_5F_shift_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1110)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1111)).right_shift_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1111)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1111)) COMMA_SOURCE_FILE_AT_LINE (1111)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (1113)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1126)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1127)).add_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1127)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1127)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (1129)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_concatenation_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1142)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, outArgument_outResultType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1143)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @assignmentInstructionForGeneration
        outArgument_outValue.mAttribute_mStringValue = var_leftExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (1144)).operator_concat (var_rightExpression.reader_mStringValue (SOURCE_FILE_AT_LINE (1144)) COMMA_SOURCE_FILE_AT_LINE (1144)) ;
      }else if (kBoolFalse == test_1) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, outArgument_outResultType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1145)))).boolEnum () ;
        if (kBoolTrue == test_2) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outValue.mAttribute_mMapListValue = var_leftExpression.reader_mMapListValue (SOURCE_FILE_AT_LINE (1146)).operator_concat (var_rightExpression.reader_mMapListValue (SOURCE_FILE_AT_LINE (1146)) COMMA_SOURCE_FILE_AT_LINE (1146)) ;
        }
      }
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1149)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_addition_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1162)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1163)).substract_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1163)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1163)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_simple_5F_expression_i3_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_3 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (1081)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (1097)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (1113)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (1129)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1149)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_ (const GALGAS_string constinArgument_inPrefix,
                                                                                               const GALGAS_string constinArgument_inPath,
                                                                                               const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                               const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                               GALGAS_Tvalue & outArgument_outValue,
                                                                                               GALGAS_Ttype & outArgument_outResultType,
                                                                                               C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1191)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_multiply_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1204)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1205)).multiply_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1205)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1205)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (1207)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_divide_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1220)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1221)).divide_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1221)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1221)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (1223)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Tvalue var_leftExpression = outArgument_outValue ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_Ttype var_leftType = outArgument_outResultType ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_rightExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_rightType ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_rightExpression, var_rightType, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_modulo_5F_types_5F_checkForTemplate (var_leftType, var_rightType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1236)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue.mAttribute_mInt_36__34_Value = var_leftExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1237)).modulo_operation (var_rightExpression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1237)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1237)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_term_i4_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_expression_5F_parser_4 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1191)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (1207)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (1223)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                 GALGAS_Tvalue & outArgument_outValue,
                                                                                                 GALGAS_Ttype & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1258)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, outArgument_outValue, outArgument_outResultType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1267)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i5_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1258)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1267)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                 GALGAS_Tvalue & outArgument_outValue,
                                                                                                 GALGAS_Ttype & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_expression ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL).substract_operation (var_expression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1295)).reader_uint_36__34_ (inCompiler COMMA_SOURCE_FILE_AT_LINE (1295)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1295)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1295)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1295)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkNotOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1296)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i6_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                 const GALGAS_string constinArgument_inPath,
                                                                                                 const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                 const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                 GALGAS_Tvalue & outArgument_outValue,
                                                                                                 GALGAS_Ttype & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_value ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_operandType ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_value, var_operandType, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithSigned (var_value.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1324)).operator_tilde (SOURCE_FILE_AT_LINE (1324)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1324)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1324)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBitComplementOperatorForTemplate (var_operandType, outArgument_outResultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1325)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i7_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_Tvalue & outArgument_outValue,
                                                                                                 GALGAS_Ttype & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1342)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1344)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i8_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_yes) COMMA_SOURCE_FILE_AT_LINE (1342)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                 const GALGAS_string /* constinArgument_inPath */,
                                                                                                 const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                 const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                 GALGAS_Tvalue & outArgument_outValue,
                                                                                                 GALGAS_Ttype & outArgument_outResultType,
                                                                                                 C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1362)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1362)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1363)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i9_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_no) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_sint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_signed_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithSigned (var_literalInt.reader_sint_36__34_ (SOURCE_FILE_AT_LINE (1382)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1382)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1382)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (1383)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i10_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_signed_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (1381)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_literalString = inCompiler->synthetizedAttribute_a_5F_string () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1400)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithString (var_literalString.reader_string (SOURCE_FILE_AT_LINE (1401)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1402)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i11_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_string) COMMA_SOURCE_FILE_AT_LINE (1400)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1420)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_expressionValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_expressionType ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expressionValue, var_expressionType, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_templateMethodName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_TexpressionList var_expressionList = GALGAS_TexpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1435)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1438)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      var_expressionList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1450)) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1452)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateMethodInvocation (var_expressionType, var_expressionValue, var_templateMethodName, var_expressionList, outArgument_outResultType, outArgument_outValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1458)) ;
  } //-------- @routineCallInstructionForGeneration
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i12_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1420)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1438)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1452)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1456)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_TvarPath var_path ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_path, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
    { //-------- @routineCallInstructionForGeneration
    GALGAS_location joker_57018_0 ; // Joker input parameter
    routine_searchField (var_path, constinArgument_inVariableMap, outArgument_outResultType, outArgument_outValue, joker_57018_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1510)) ;
    } //-------- @routineCallInstructionForGeneration
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_lstring var_functionOrVariableName ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_lstring joker_57104_0 ; // Joker input parameter
    GALGAS_lsint joker_57107_0 ; // Joker input parameter
    var_path.method_first (var_functionOrVariableName, joker_57104_0, joker_57107_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1513)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_TexpressionList var_actualArgumentList = GALGAS_TexpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1516)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1517)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_expression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_resultType ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      var_actualArgumentList.addAssign_operation (var_expression, var_resultType COMMA_SOURCE_FILE_AT_LINE (1529)) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1531)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1533)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_function::constructor_isFunctionDefined (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1536)) COMMA_SOURCE_FILE_AT_LINE (1536)).operator_not (SOURCE_FILE_AT_LINE (1536)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Tvalue var_fct ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_Ttype var_type ;
      //-------- @methodCallInstructionForGeneration
      constinArgument_inVariableMap.method_searchKey (var_functionOrVariableName, var_type, var_fct, inCompiler COMMA_SOURCE_FILE_AT_LINE (1541)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1542)).objectCompare (var_fct.reader_mFunctionValue (SOURCE_FILE_AT_LINE (1542)).reader_args (SOURCE_FILE_AT_LINE (1542)).reader_length (SOURCE_FILE_AT_LINE (1542)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("incorrect number of arguments") COMMA_SOURCE_FILE_AT_LINE (1543)) ;
        outArgument_outValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
      }else if (kBoolFalse == test_2) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_TfieldMap var_locals = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1546)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_TexpressionList enumerator_58338 (var_actualArgumentList, kEnumeration_up) ;
        cEnumerator_lstringlist enumerator_58387 (var_fct.reader_mFunctionValue (SOURCE_FILE_AT_LINE (1548)).reader_args (SOURCE_FILE_AT_LINE (1548)), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_58338.hasCurrentObject () && enumerator_58387.hasCurrentObject ()) {
          { //-------- @modifierCallInstructionForGeneration
          var_locals.modifier_insertKey (enumerator_58387.current_mValue (HERE), enumerator_58338.current_mType (HERE), enumerator_58338.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1549)) ;
          } //-------- END @typeMethodInstructionForGeneration
          enumerator_58338.gotoNextObject () ;
          enumerator_58387.gotoNextObject () ;
        }
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_result = GALGAS_string::makeEmptyString () ;
        { //---- @grammarInstructionWithSourceExpressionForGeneration
        cGrammar_template_5F_grammar::_performSourceStringParsing_ (inCompiler, var_fct.reader_mFunctionValue (SOURCE_FILE_AT_LINE (1553)).reader_content (SOURCE_FILE_AT_LINE (1553)), constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_locals, var_result, outArgument_outValue, outArgument_outResultType COMMA_SOURCE_FILE_AT_LINE (1553)) ;
        } //---- END @grammarInstructionWithSourceExpressionForGeneration
      }
    }else if (kBoolFalse == test_1) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_function var_f ;
      //-------- @assignmentInstructionForGeneration
      var_f = GALGAS_function::constructor_functionWithName (var_functionOrVariableName.reader_string (SOURCE_FILE_AT_LINE (1559)) COMMA_SOURCE_FILE_AT_LINE (1559)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_objectlist var_actualArgumentObjectList = GALGAS_objectlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1561)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_typelist var_formalParameterList = var_f.reader_formalParameterTypeList (SOURCE_FILE_AT_LINE (1562)) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1563)).objectCompare (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1563)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @errorInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_4 ;
        const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1566)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
        if (kBoolTrue == test_5) {
          temp_4 = GALGAS_string ("s") ;
        }else if (kBoolFalse == test_5) {
          temp_4 = GALGAS_string::makeEmptyString () ;
        }
        //--- @ifExpressionForGeneration
        GALGAS_string temp_6 ;
        const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1569)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
        if (kBoolTrue == test_7) {
          temp_6 = GALGAS_string ("s") ;
        }else if (kBoolFalse == test_7) {
          temp_6 = GALGAS_string::makeEmptyString () ;
        }
        GALGAS_location location_8 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("this function is invoked with ").operator_concat (var_actualArgumentList.reader_length (SOURCE_FILE_AT_LINE (1565)).reader_string (SOURCE_FILE_AT_LINE (1565)) COMMA_SOURCE_FILE_AT_LINE (1565)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1566)).operator_concat (temp_4 COMMA_SOURCE_FILE_AT_LINE (1566)).operator_concat (GALGAS_string (", but requires ") COMMA_SOURCE_FILE_AT_LINE (1567)).operator_concat (var_formalParameterList.reader_length (SOURCE_FILE_AT_LINE (1568)).reader_string (SOURCE_FILE_AT_LINE (1568)) COMMA_SOURCE_FILE_AT_LINE (1568)).operator_concat (GALGAS_string (" parameter") COMMA_SOURCE_FILE_AT_LINE (1569)).operator_concat (temp_6 COMMA_SOURCE_FILE_AT_LINE (1569)) COMMA_SOURCE_FILE_AT_LINE (1564)) ;
        outArgument_outValue.drop () ; // Release error dropped variable
        outArgument_outResultType.drop () ; // Release error dropped variable
      }else if (kBoolFalse == test_3) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 1U) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_typelist enumerator_59724 (var_formalParameterList, kEnumeration_up) ;
        cEnumerator_TexpressionList enumerator_59763 (var_actualArgumentList, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_59724.hasCurrentObject () && enumerator_59763.hasCurrentObject ()) {
          //------- @switchInstructionForGeneration
          if (enumerator_59763.current_mType (HERE).isValid ()) {
            switch (enumerator_59763.current_mType (HERE).enumValue ()) {
            case GALGAS_Ttype::kNotBuilt:
              break ;
            case GALGAS_Ttype::kEnum_boolType: {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, enumerator_59724.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
              if (kBoolTrue == test_9) {
                { //-------- @routineCallInstructionForGeneration
                routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("boolean"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1577)) ;
                } //-------- @routineCallInstructionForGeneration
              }
              //-------- @plusEqualnstructionForGeneration
              //--- @ifExpressionForGeneration
              GALGAS_bool temp_10 ;
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_59763.current_mValue (HERE).reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1579)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolEnum () ;
              if (kBoolTrue == test_11) {
                temp_10 = GALGAS_bool (false) ;
              }else if (kBoolFalse == test_11) {
                temp_10 = GALGAS_bool (true) ;
              }
              var_actualArgumentObjectList.addAssign_operation (temp_10.reader_object (SOURCE_FILE_AT_LINE (1579)) COMMA_SOURCE_FILE_AT_LINE (1579)) ;
              } break ;
            case GALGAS_Ttype::kEnum_intType: {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_12 = GALGAS_bool (kIsNotEqual, enumerator_59724.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_sint_36__34_))).boolEnum () ;
              if (kBoolTrue == test_12) {
                { //-------- @routineCallInstructionForGeneration
                routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("unsigned"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1582)) ;
                } //-------- @routineCallInstructionForGeneration
              }
              //-------- @plusEqualnstructionForGeneration
              var_actualArgumentObjectList.addAssign_operation (enumerator_59763.current_mValue (HERE).reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1584)).reader_object (SOURCE_FILE_AT_LINE (1584)) COMMA_SOURCE_FILE_AT_LINE (1584)) ;
              } break ;
            case GALGAS_Ttype::kEnum_floatType: {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, enumerator_59724.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_double))).boolEnum () ;
              if (kBoolTrue == test_13) {
                { //-------- @routineCallInstructionForGeneration
                routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("float"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1587)) ;
                } //-------- @routineCallInstructionForGeneration
              }
              //-------- @plusEqualnstructionForGeneration
              var_actualArgumentObjectList.addAssign_operation (enumerator_59763.current_mValue (HERE).reader_mFloatValue (SOURCE_FILE_AT_LINE (1589)).reader_object (SOURCE_FILE_AT_LINE (1589)) COMMA_SOURCE_FILE_AT_LINE (1589)) ;
              } break ;
            case GALGAS_Ttype::kEnum_stringType: {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, enumerator_59724.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
              if (kBoolTrue == test_14) {
                { //-------- @routineCallInstructionForGeneration
                routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1592)) ;
                } //-------- @routineCallInstructionForGeneration
              }
              } break ;
            case GALGAS_Ttype::kEnum_enumType: {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_15 = GALGAS_bool (kIsNotEqual, enumerator_59724.current_mValue (HERE).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
              if (kBoolTrue == test_15) {
                { //-------- @routineCallInstructionForGeneration
                routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("enum"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1596)) ;
                } //-------- @routineCallInstructionForGeneration
              }
              //-------- @plusEqualnstructionForGeneration
              var_actualArgumentObjectList.addAssign_operation (enumerator_59763.current_mValue (HERE).reader_mStringValue (SOURCE_FILE_AT_LINE (1598)).reader_object (SOURCE_FILE_AT_LINE (1598)) COMMA_SOURCE_FILE_AT_LINE (1598)) ;
              } break ;
            case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_mapType: {
              { //-------- @routineCallInstructionForGeneration
              routine_typeError (var_functionOrVariableName, enumerator_59724.current_mValue (HERE), GALGAS_string ("string"), var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1600)) ;
              } //-------- @routineCallInstructionForGeneration
              } break ;
            case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
              //-------- @errorInstructionForGeneration
              inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (1602)) ;
              } break ;
            }
          }
          //-------- @incrementInstructionForGeneration
          var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1604)) ;
          enumerator_59724.gotoNextObject () ;
          enumerator_59763.gotoNextObject () ;
        }
        //-------- @assignmentInstructionForGeneration
        outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (1606)) ;
        //-------- @assignmentInstructionForGeneration
        outArgument_outValue = function_valueWithSigned (GALGAS_sint_36__34_ ((PMSInt64) 0LL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1607)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1607)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (1608)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_16) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_object var_result = var_f.reader_invoke (var_actualArgumentObjectList, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1609)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1609)) ;
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1610)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_sint_36__34_))).boolEnum () ;
          if (kBoolTrue == test_17) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outResultType = GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (1611)) ;
            //-------- @assignmentInstructionForGeneration
            //--- @extractObjectInExpressionForGeneration
            outArgument_outValue.mAttribute_mInt_36__34_Value = GALGAS_sint_36__34_::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1612)) COMMA_SOURCE_FILE_AT_LINE (1612)) ;
          }else if (kBoolFalse == test_17) {
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1613)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_bool))).boolEnum () ;
            if (kBoolTrue == test_19) {
              //-------- @assignmentInstructionForGeneration
              outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1614)) ;
              //-------- @assignmentInstructionForGeneration
              //--- @extractObjectInExpressionForGeneration
              outArgument_outValue.mAttribute_mInt_36__34_Value = GALGAS_bool::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1615)) COMMA_SOURCE_FILE_AT_LINE (1615)).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (1615)) ;
            }else if (kBoolFalse == test_19) {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_result.reader_objectDynamicType (SOURCE_FILE_AT_LINE (1616)).objectCompare (GALGAS_type (& kTypeDescriptor_GALGAS_string))).boolEnum () ;
              if (kBoolTrue == test_21) {
                //-------- @assignmentInstructionForGeneration
                outArgument_outResultType = GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1617)) ;
                //-------- @assignmentInstructionForGeneration
                //--- @extractObjectInExpressionForGeneration
                outArgument_outValue.mAttribute_mStringValue = GALGAS_string::extractObject (var_result, inCompiler, var_functionOrVariableName.reader_location (SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1618)) ;
              }else if (kBoolFalse == test_21) {
                //-------- @errorInstructionForGeneration
                GALGAS_location location_23 (var_functionOrVariableName.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_23, GALGAS_string ("this function does not return an unsigned, boolean or string value") COMMA_SOURCE_FILE_AT_LINE (1620)) ;
              }
            }
          }
        }
      }
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i13_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_variable_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_7 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1517)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @nonterminalInstructionForGeneration
      nt_expression_parse (inCompiler) ;
      switch (select_template_5F_expression_5F_parser_8 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1531)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1533)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_TvarPath var_path ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1640)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_path, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_variableType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_variableValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_varExists ;
  { //-------- @routineCallInstructionForGeneration
  routine_searchFieldIfExists (var_path, constinArgument_inVariableMap, var_variableType, var_variableValue, var_varExists, inCompiler COMMA_SOURCE_FILE_AT_LINE (1646)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1649)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Tvalue var_expression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_Ttype var_resultType ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1652)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expression, var_resultType, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1661)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = var_varExists.boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = var_variableType ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = var_variableValue ;
    }else if (kBoolFalse == test_0) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outResultType = var_resultType ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = var_expression ;
    }
  } break ;
  case 2: {
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1670)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = var_varExists.boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1672)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1672)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1674)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1674)) ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i14_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (1640)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_9 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_default) COMMA_SOURCE_FILE_AT_LINE (1649)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1652)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1661)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_TvarPath var_variableName ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_typeof) COMMA_SOURCE_FILE_AT_LINE (1690)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_variableName, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_variableType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_variableValue ;
  { //-------- @routineCallInstructionForGeneration
  GALGAS_location joker_64059_0 ; // Joker input parameter
  routine_searchField (var_variableName, constinArgument_inVariableMap, var_variableType, var_variableValue, joker_64059_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1693)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_enumType (SOURCE_FILE_AT_LINE (1694)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithString (categoryReader_messageGoilTemplateType (var_variableType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1695)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1695)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1695)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i15_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_typeof) COMMA_SOURCE_FILE_AT_LINE (1690)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1709)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 1ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1710)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1710)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1712)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithUnsigned (GALGAS_uint_36__34_ ((PMUInt64) 0ULL), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1713)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1713)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (1715)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i16_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_template_5F_expression_5F_parser_10 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (1709)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (1712)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i17_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_enumValue = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = function_valueWithString (var_enumValue.reader_string (SOURCE_FILE_AT_LINE (1729)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1729)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1729)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_enumType (SOURCE_FILE_AT_LINE (1730)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i17_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i18_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1743)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1744)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1744)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (1744)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1744)) COMMA_SOURCE_FILE_AT_LINE (1744)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1745)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i18_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptylist) COMMA_SOURCE_FILE_AT_LINE (1743)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i19_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                                  const GALGAS_string /* constinArgument_inPath */,
                                                                                                  const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                                  const GALGAS_TfieldMap /* constinArgument_inVariableMap */,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptymap) COMMA_SOURCE_FILE_AT_LINE (1758)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1759)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1759)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (1759)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1759)) COMMA_SOURCE_FILE_AT_LINE (1759)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultType = GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1760)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i19_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_emptymap) COMMA_SOURCE_FILE_AT_LINE (1758)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i20_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mapof) COMMA_SOURCE_FILE_AT_LINE (1773)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_expValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_expType ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expValue, var_expType, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_where = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_by) COMMA_SOURCE_FILE_AT_LINE (1778)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_key = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1779)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1781)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (var_where, GALGAS_string ("list expected") COMMA_SOURCE_FILE_AT_LINE (1782)) ;
    outArgument_outValue.drop () ; // Release error dropped variable
    outArgument_outResultType.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_TfieldMap var_resultMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1786)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_TfieldMapList enumerator_66781 (var_expValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (1787)), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_66781.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = enumerator_66781.current_mMap (HERE).reader_hasKey (var_key.reader_string (SOURCE_FILE_AT_LINE (1788)) COMMA_SOURCE_FILE_AT_LINE (1788)).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_Ttype var_keyType ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_Tvalue var_keyValue ;
        //-------- @methodCallInstructionForGeneration
        enumerator_66781.current_mMap (HERE).method_searchKey (var_key, var_keyType, var_keyValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1792)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_keyType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1793)))).boolEnum () ;
        if (kBoolTrue == test_2) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_lstring var_keyVal = GALGAS_lstring::constructor_new (var_keyValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1794)), enumerator_66781.current_mMap (HERE).reader_locationForKey (var_key.reader_string (SOURCE_FILE_AT_LINE (1794)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1794)) COMMA_SOURCE_FILE_AT_LINE (1794)) ;
          { //-------- @modifierCallInstructionForGeneration
          var_resultMap.modifier_insertKey (var_keyVal, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1795)), function_valueWithMap (enumerator_66781.current_mMap (HERE), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1795)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1795)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1795)) ;
          } //-------- END @typeMethodInstructionForGeneration
        }else if (kBoolFalse == test_2) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (enumerator_66781.current_mMap (HERE).reader_locationForKey (var_key.reader_string (SOURCE_FILE_AT_LINE (1797)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1797)), GALGAS_string ("the list element specified key is not a string") COMMA_SOURCE_FILE_AT_LINE (1797)) ;
        }
      }else if (kBoolFalse == test_1) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the list element has not the specified key") COMMA_SOURCE_FILE_AT_LINE (1800)) ;
      }
      enumerator_66781.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1803)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithMap (var_resultMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1804)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1804)) ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i20_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_mapof) COMMA_SOURCE_FILE_AT_LINE (1773)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_by) COMMA_SOURCE_FILE_AT_LINE (1778)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1779)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i21_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                  const GALGAS_string constinArgument_inPath,
                                                                                                  const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                  const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                                  GALGAS_Tvalue & outArgument_outValue,
                                                                                                  GALGAS_Ttype & outArgument_outResultType,
                                                                                                  C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outValue.drop () ; // Release 'out' argument
  outArgument_outResultType.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_listof) COMMA_SOURCE_FILE_AT_LINE (1818)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_TvarPath var_path ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_path, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Ttype var_variableType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_Tvalue var_variableValue ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_location var_where ;
  { //-------- @routineCallInstructionForGeneration
  routine_searchField (var_path, constinArgument_inVariableMap, var_variableType, var_variableValue, var_where, inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_variableType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1828)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (var_where, GALGAS_string ("map expected") COMMA_SOURCE_FILE_AT_LINE (1829)) ;
    outArgument_outValue.drop () ; // Release error dropped variable
    outArgument_outResultType.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_TfieldMapList var_resultList = GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1831)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_TfieldMap enumerator_68330 (var_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1832)), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_68330.hasCurrentObject ()) {
      //-------- @plusEqualnstructionForGeneration
      var_resultList.addAssign_operation (enumerator_68330.current_mValue (HERE).reader_mStructValue (SOURCE_FILE_AT_LINE (1834)) COMMA_SOURCE_FILE_AT_LINE (1834)) ;
      enumerator_68330.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outResultType = GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1836)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outValue = function_valueWithList (var_resultList, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1837)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1837)) ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_expression_5F_parser::rule_template_5F_expression_5F_parser_factor_i21_parse (C_Lexique_template_5F_scanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_listof) COMMA_SOURCE_FILE_AT_LINE (1818)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_variable_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


