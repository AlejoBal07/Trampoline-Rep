//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'template_grammar.h'                          *
//                        Generated by version 2.5.6                         *
//                      march 17th, 2014, at 14h24'25"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GRAMMAR_template_5F_grammar_HAS_BEEN_DEFINED
#define GRAMMAR_template_5F_grammar_HAS_BEEN_DEFINED

//-----------------------------------------------------------------------------*

#include "template_parser.h"
#include "template_expression_parser.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//-----------------------------------------------------------------------------*

class cGrammar_template_5F_grammar : public cParser_template_5F_parser,
                                     public cParser_template_5F_expression_5F_parser {
//------------------------------------- 'expression' non terminal
//--- 'parse' label
  public : virtual void nt_expression_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_expression_ (const GALGAS_string inArgument0,
                                        const GALGAS_string inArgument1,
                                        const GALGAS_string inArgument2,
                                        const GALGAS_TfieldMap inArgument3,
                                        GALGAS_Tvalue & outArgument4,
                                        GALGAS_Ttype & outArgument5,
                                        C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'factor' non terminal
//--- 'parse' label
  public : virtual void nt_factor_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_factor_ (const GALGAS_string inArgument0,
                                    const GALGAS_string inArgument1,
                                    const GALGAS_string inArgument2,
                                    const GALGAS_TfieldMap inArgument3,
                                    GALGAS_Tvalue & outArgument4,
                                    GALGAS_Ttype & outArgument5,
                                    C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'goil_template_start_symbol' non terminal
//--- 'parse' label
  public : virtual void nt_goil_5F_template_5F_start_5F_symbol_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_goil_5F_template_5F_start_5F_symbol_ (const GALGAS_string inArgument0,
                                                                 const GALGAS_string inArgument1,
                                                                 const GALGAS_string inArgument2,
                                                                 GALGAS_TfieldMap inArgument3,
                                                                 GALGAS_string & ioArgument4,
                                                                 GALGAS_Tvalue & outArgument5,
                                                                 GALGAS_Ttype & outArgument6,
                                                                 C_Lexique_template_5F_scanner * inCompiler) ;

//--- Start symbol
  public : static void _performSourceFileParsing_ (C_Compiler * inCompiler,
                                                   GALGAS_lstring inFileName,
                                                   const GALGAS_string inArgument0,
                                                   const GALGAS_string inArgument1,
                                                   const GALGAS_string inArgument2,
                                                   GALGAS_TfieldMap inArgument3,
                                                   GALGAS_string & ioArgument4,
                                                   GALGAS_Tvalue & outArgument5,
                                                   GALGAS_Ttype & outArgument6
                                                   COMMA_LOCATION_ARGS) ;

  public : static void _performSourceStringParsing_ (C_Compiler * inCompiler,
                                                     GALGAS_string inSourceString,
                                                     const GALGAS_string inArgument0,
                                                     const GALGAS_string inArgument1,
                                                     const GALGAS_string inArgument2,
                                                     GALGAS_TfieldMap inArgument3,
                                                     GALGAS_string & ioArgument4,
                                                     GALGAS_Tvalue & outArgument5,
                                                     GALGAS_Ttype & outArgument6
                                                     COMMA_LOCATION_ARGS) ;

//------------------------------------- 'relation_factor' non terminal
//--- 'parse' label
  public : virtual void nt_relation_5F_factor_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_relation_5F_factor_ (const GALGAS_string inArgument0,
                                                const GALGAS_string inArgument1,
                                                const GALGAS_string inArgument2,
                                                const GALGAS_TfieldMap inArgument3,
                                                GALGAS_Tvalue & outArgument4,
                                                GALGAS_Ttype & outArgument5,
                                                C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'relation_term' non terminal
//--- 'parse' label
  public : virtual void nt_relation_5F_term_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_relation_5F_term_ (const GALGAS_string inArgument0,
                                              const GALGAS_string inArgument1,
                                              const GALGAS_string inArgument2,
                                              const GALGAS_TfieldMap inArgument3,
                                              GALGAS_Tvalue & outArgument4,
                                              GALGAS_Ttype & outArgument5,
                                              C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'simple_expression' non terminal
//--- 'parse' label
  public : virtual void nt_simple_5F_expression_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_simple_5F_expression_ (const GALGAS_string inArgument0,
                                                  const GALGAS_string inArgument1,
                                                  const GALGAS_string inArgument2,
                                                  const GALGAS_TfieldMap inArgument3,
                                                  GALGAS_Tvalue & outArgument4,
                                                  GALGAS_Ttype & outArgument5,
                                                  C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'sorting_order' non terminal
//--- 'parse' label
  public : virtual void nt_sorting_5F_order_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_sorting_5F_order_ (GALGAS_lsint & outArgument0,
                                              C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'template_file_name' non terminal
//--- 'parse' label
  public : virtual void nt_template_5F_file_5F_name_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_template_5F_file_5F_name_ (const GALGAS_string inArgument0,
                                                      const GALGAS_string inArgument1,
                                                      const GALGAS_string inArgument2,
                                                      const GALGAS_TfieldMap inArgument3,
                                                      GALGAS_lstring & outArgument4,
                                                      C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'template_instruction' non terminal
//--- 'parse' label
  public : virtual void nt_template_5F_instruction_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_template_5F_instruction_ (const GALGAS_string inArgument0,
                                                     const GALGAS_string inArgument1,
                                                     const GALGAS_string inArgument2,
                                                     GALGAS_TfieldMap & ioArgument3,
                                                     GALGAS_string & ioArgument4,
                                                     GALGAS_Tvalue & outArgument5,
                                                     GALGAS_Ttype & outArgument6,
                                                     C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'template_instruction_list' non terminal
//--- 'parse' label
  public : virtual void nt_template_5F_instruction_5F_list_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_template_5F_instruction_5F_list_ (const GALGAS_string inArgument0,
                                                             const GALGAS_string inArgument1,
                                                             const GALGAS_string inArgument2,
                                                             GALGAS_TfieldMap & ioArgument3,
                                                             GALGAS_string & ioArgument4,
                                                             GALGAS_Tvalue & outArgument5,
                                                             GALGAS_Ttype & outArgument6,
                                                             C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'term' non terminal
//--- 'parse' label
  public : virtual void nt_term_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_term_ (const GALGAS_string inArgument0,
                                  const GALGAS_string inArgument1,
                                  const GALGAS_string inArgument2,
                                  const GALGAS_TfieldMap inArgument3,
                                  GALGAS_Tvalue & outArgument4,
                                  GALGAS_Ttype & outArgument5,
                                  C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'variable' non terminal
//--- 'parse' label
  public : virtual void nt_variable_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_variable_ (const GALGAS_string inArgument0,
                                      const GALGAS_string inArgument1,
                                      const GALGAS_string inArgument2,
                                      const GALGAS_TfieldMap inArgument3,
                                      GALGAS_TvarPath & outArgument4,
                                      C_Lexique_template_5F_scanner * inCompiler) ;

//------------------------------------- 'variable_or_here' non terminal
//--- 'parse' label
  public : virtual void nt_variable_5F_or_5F_here_parse (C_Lexique_template_5F_scanner * inCompiler) ;

//----------- '' label
  public : virtual void nt_variable_5F_or_5F_here_ (const GALGAS_string inArgument0,
                                                    const GALGAS_string inArgument1,
                                                    const GALGAS_string inArgument2,
                                                    const GALGAS_TfieldMap inArgument3,
                                                    GALGAS_location & outArgument4,
                                                    C_Lexique_template_5F_scanner * inCompiler) ;

  public : virtual PMSInt32 select_template_5F_parser_0 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_1 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_2 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_3 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_4 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_5 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_6 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_7 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_8 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_9 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_10 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_11 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_12 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_13 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_14 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_15 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_16 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_17 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_18 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_19 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_20 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_21 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_22 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_23 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_24 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_25 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_26 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_parser_27 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_0 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_1 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_2 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_3 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_4 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_5 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_6 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_7 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_8 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_9 (C_Lexique_template_5F_scanner *) ;

  public : virtual PMSInt32 select_template_5F_expression_5F_parser_10 (C_Lexique_template_5F_scanner *) ;
} ;

//-----------------------------------------------------------------------------*

#endif
