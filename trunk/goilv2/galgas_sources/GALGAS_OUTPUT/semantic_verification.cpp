//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semantic_verification.cpp'                      *
//                    Generated by version version 2.2.7                     *
//                     december 7th, 2011, at 9h11'43"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semantic_verification.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semantic_verification.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'attributeAllowsAuto'                       *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_bool function_attributeAllowsAuto (const GALGAS_impType & constinArgument_type,
                                          C_Compiler * /* inCompiler */
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_allowsAuto ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_allowsAuto = GALGAS_bool (true) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_type.isValid ()) {
    if (NULL != dynamic_cast <const cPtr_impAutoDefaultType *> (constinArgument_type.ptr ())) {
      GALGAS_impAutoDefaultType cast_6810_autoType ((cPtr_impAutoDefaultType *) constinArgument_type.ptr ()) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = cast_6810_autoType.reader_withAuto (SOURCE_FILE_AT_LINE (220)).operator_not (SOURCE_FILE_AT_LINE (220)).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @assignmentInstructionForGeneration
        result_allowsAuto = GALGAS_bool (false) ;
      }
    }else{
      //-------- @assignmentInstructionForGeneration
      result_allowsAuto = GALGAS_bool (false) ;
    }
  }
//---
  return result_allowsAuto ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_attributeAllowsAuto [2] = {
  & kTypeDescriptor_GALGAS_impType,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_attributeAllowsAuto (C_Compiler * inCompiler,
                                                                    const cObjectArray & inEffectiveParameterArray,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  const GALGAS_impType operand0 = GALGAS_impType::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_attributeAllowsAuto (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_attributeAllowsAuto ("attributeAllowsAuto",
                                                                     functionWithGenericHeader_attributeAllowsAuto,
                                                                     & kTypeDescriptor_GALGAS_bool,
                                                                     1,
                                                                     functionArgs_attributeAllowsAuto) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'verifyAllAttributes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifyAllAttributes (const GALGAS_implementation constinArgument_imp,
                                  const GALGAS_objectsMap constinArgument_objects,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @foreachInstructionForGeneration
  cEnumerator_objectsMap enumerator_7146 (constinArgument_objects, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_7146.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_implementationObject var_impObj = callCategoryReader_impObject ((const cPtr_implementation *) constinArgument_imp.ptr (), enumerator_7146.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (238)), inCompiler COMMA_SOURCE_FILE_AT_LINE (238)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_objectKindMap enumerator_7316 (enumerator_7146.current_objectsOfKind (HERE).reader_objects (SOURCE_FILE_AT_LINE (240)), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_7316.hasCurrentObject ()) {
      //-------- @foreachInstructionForGeneration
      cEnumerator_implementationObjectMap enumerator_7369 (var_impObj.reader_attributes (SOURCE_FILE_AT_LINE (241)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_7369.hasCurrentObject ()) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_0 = enumerator_7316.current_attributes (HERE).reader_objectParams (SOURCE_FILE_AT_LINE (242)).reader_hasKey (enumerator_7369.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (242)) COMMA_SOURCE_FILE_AT_LINE (242)).boolEnum () ;
        if (kBoolTrue == test_0) {
          //-------- @localVariableDeclarationForGeneration
          GALGAS_object_5F_t var_value ;
          //-------- @methodCallInstructionForGeneration
          enumerator_7316.current_attributes (HERE).reader_objectParams (SOURCE_FILE_AT_LINE (246)).method_get (enumerator_7369.current_lkey (HERE), var_value, inCompiler COMMA_SOURCE_FILE_AT_LINE (246)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @structuredCastInstructionForGeneration
          if (var_value.isValid ()) {
            if (var_value.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_auto) {
              //-------- @ifInstructionForGeneration
              const enumGalgasBool test_1 = function_attributeAllowsAuto (enumerator_7369.current_type (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (250)).operator_not (SOURCE_FILE_AT_LINE (250)).boolEnum () ;
              if (kBoolTrue == test_1) {
                //-------- @errorInstructionForGeneration
                inCompiler->emitSemanticError (var_value.reader_location (SOURCE_FILE_AT_LINE (251)), GALGAS_string ("AUTO value is not allowed for the ").operator_concat (enumerator_7146.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (251)) COMMA_SOURCE_FILE_AT_LINE (251)).operator_concat (GALGAS_string (" attribute") COMMA_SOURCE_FILE_AT_LINE (251)) COMMA_SOURCE_FILE_AT_LINE (251)) ;
              }
            }
          }
        }else if (kBoolFalse == test_0) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_2 = function_attributeAllowsAuto (enumerator_7369.current_type (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (256)).operator_not (SOURCE_FILE_AT_LINE (256)).operator_and (enumerator_7369.current_type (HERE).reader_multiple (SOURCE_FILE_AT_LINE (256)).operator_not (SOURCE_FILE_AT_LINE (256)) COMMA_SOURCE_FILE_AT_LINE (256)).boolEnum () ;
          if (kBoolTrue == test_2) {
            //-------- @errorInstructionForGeneration
            GALGAS_location location_3 (enumerator_7316.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_3, GALGAS_string ("In ").operator_concat (enumerator_7146.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (enumerator_7316.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (GALGAS_string (", attribute ") COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (enumerator_7369.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (GALGAS_string (" is not defined and is not AUTO") COMMA_SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)) ;
          }
        }
        //-------- @structuredCastInstructionForGeneration
        if (enumerator_7369.current_type (HERE).isValid ()) {
          if (enumerator_7369.current_type (HERE).dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_impAutoDefaultType) {
          }
        }
        enumerator_7369.gotoNextObject () ;
      }
      enumerator_7316.gotoNextObject () ;
    }
    enumerator_7146.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'verifyAll'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifyAll (const GALGAS_implementation constinArgument_imp,
                        const GALGAS_applicationDefinition constinArgument_application,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  routine_verifyAllAttributes (constinArgument_imp, constinArgument_application.reader_objects (SOURCE_FILE_AT_LINE (580)), inCompiler COMMA_SOURCE_FILE_AT_LINE (580)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_verifyApplication ((const cPtr_implementation *) constinArgument_imp.ptr (), constinArgument_application, inCompiler COMMA_SOURCE_FILE_AT_LINE (581)) ;
  //-------- END @methodCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@implementation verifyApplication'            *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_implementation_verifyApplication> gCategoryMethodTable_implementation_verifyApplication ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_verifyApplication (const PMSInt32 inClassIndex,
                                            categoryMethodSignature_implementation_verifyApplication inMethod) {
  gCategoryMethodTable_implementation_verifyApplication.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_verifyApplication (const cPtr_implementation * inObject,
                                           const GALGAS_applicationDefinition constin_appDef,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_implementation) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_implementation_verifyApplication f = NULL ;
    if (classIndex < gCategoryMethodTable_implementation_verifyApplication.count ()) {
      f = gCategoryMethodTable_implementation_verifyApplication (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_implementation_verifyApplication.count ()) {
           f = gCategoryMethodTable_implementation_verifyApplication (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_implementation_verifyApplication.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_appDef, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_implementation_verifyApplication (const cPtr_implementation * inObject,
                                                             const GALGAS_applicationDefinition constinArgument_appDef,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_implementation * object = inObject ;
  macroValidSharedObject (object, const cPtr_implementation) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_implementationMap enumerator_916 (object->mAttribute_imp, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_916.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = constinArgument_appDef.reader_objects (SOURCE_FILE_AT_LINE (22)).reader_hasKey (enumerator_916.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (22)) COMMA_SOURCE_FILE_AT_LINE (22)).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_objectKind var_obj ;
      //-------- @methodCallInstructionForGeneration
      constinArgument_appDef.reader_objects (SOURCE_FILE_AT_LINE (24)).method_get (enumerator_916.current_lkey (HERE), var_obj, inCompiler COMMA_SOURCE_FILE_AT_LINE (24)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_verifyApplication ((const cPtr_implementationObject *) enumerator_916.current_object (HERE).ptr (), var_obj, inCompiler COMMA_SOURCE_FILE_AT_LINE (25)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    enumerator_916.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_implementation_verifyApplication (void) {
  enterCategoryMethod_verifyApplication (kTypeDescriptor_GALGAS_implementation.mSlotID,
                                         categoryMethod_implementation_verifyApplication) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_implementation_verifyApplication (void) {
  gCategoryMethodTable_implementation_verifyApplication.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_implementation_verifyApplication (defineCategoryMethod_implementation_verifyApplication,
                                                             freeCategoryMethod_implementation_verifyApplication) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@implementationObject verifyApplication'         *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_implementationObject_verifyApplication> gCategoryMethodTable_implementationObject_verifyApplication ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_verifyApplication (const PMSInt32 inClassIndex,
                                            categoryMethodSignature_implementationObject_verifyApplication inMethod) {
  gCategoryMethodTable_implementationObject_verifyApplication.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_verifyApplication (const cPtr_implementationObject * inObject,
                                           const GALGAS_objectKind constin_objectsOfKind,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_implementationObject) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_implementationObject_verifyApplication f = NULL ;
    if (classIndex < gCategoryMethodTable_implementationObject_verifyApplication.count ()) {
      f = gCategoryMethodTable_implementationObject_verifyApplication (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_implementationObject_verifyApplication.count ()) {
           f = gCategoryMethodTable_implementationObject_verifyApplication (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_implementationObject_verifyApplication.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_objectsOfKind, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_implementationObject_verifyApplication (const cPtr_implementationObject * inObject,
                                                                   const GALGAS_objectKind constinArgument_objectsOfKind,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_implementationObject * object = inObject ;
  macroValidSharedObject (object, const cPtr_implementationObject) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_objectKindMap enumerator_1334 (constinArgument_objectsOfKind.reader_objects (SOURCE_FILE_AT_LINE (34)), kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_1334.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_implementationObjectMap enumerator_1368 (object->mAttribute_attributes, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_1368.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_verifyApplication ((const cPtr_impType *) enumerator_1368.current_type (HERE).ptr (), enumerator_1334.current_attributes (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_1368.gotoNextObject () ;
    }
    enumerator_1334.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_implementationObject_verifyApplication (void) {
  enterCategoryMethod_verifyApplication (kTypeDescriptor_GALGAS_implementationObject.mSlotID,
                                         categoryMethod_implementationObject_verifyApplication) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_implementationObject_verifyApplication (void) {
  gCategoryMethodTable_implementationObject_verifyApplication.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_implementationObject_verifyApplication (defineCategoryMethod_implementationObject_verifyApplication,
                                                                   freeCategoryMethod_implementationObject_verifyApplication) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@impType verifyApplication'                *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_impType_verifyApplication> gCategoryMethodTable_impType_verifyApplication ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_verifyApplication (const PMSInt32 inClassIndex,
                                            categoryMethodSignature_impType_verifyApplication inMethod) {
  gCategoryMethodTable_impType_verifyApplication.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_verifyApplication (const cPtr_impType * inObject,
                                           const GALGAS_objectAttributes constin_attrs,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_impType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_impType_verifyApplication f = NULL ;
    if (classIndex < gCategoryMethodTable_impType_verifyApplication.count ()) {
      f = gCategoryMethodTable_impType_verifyApplication (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_impType_verifyApplication.count ()) {
           f = gCategoryMethodTable_impType_verifyApplication (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_impType_verifyApplication.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_attrs, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_impType_verifyApplication (const cPtr_impType * inObject,
                                                      const GALGAS_objectAttributes constinArgument_attrs,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impType * object = inObject ;
  macroValidSharedObject (object, const cPtr_impType) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_identifierMap enumerator_1637 (constinArgument_attrs.reader_objectParams (SOURCE_FILE_AT_LINE (45)), kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_1637.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_1637.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (46)).objectCompare (object->mAttribute_name.reader_string (SOURCE_FILE_AT_LINE (46)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @methodCallInstructionForGeneration
      //--- @selfCopyInExpressionForGeneration
      const GALGAS_impType temp_1 = object ;
      callCategoryMethod_verifyMultipleType ((const cPtr_impType *) temp_1.ptr (), enumerator_1637.current_value (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    enumerator_1637.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impType_verifyApplication (void) {
  enterCategoryMethod_verifyApplication (kTypeDescriptor_GALGAS_impType.mSlotID,
                                         categoryMethod_impType_verifyApplication) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_impType_verifyApplication (void) {
  gCategoryMethodTable_impType_verifyApplication.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impType_verifyApplication (defineCategoryMethod_impType_verifyApplication,
                                                      freeCategoryMethod_impType_verifyApplication) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@impType verifyType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_impType_verifyType> gCategoryMethodTable_impType_verifyType ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_verifyType (const PMSInt32 inClassIndex,
                                     categoryMethodSignature_impType_verifyType inMethod) {
  gCategoryMethodTable_impType_verifyType.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_verifyType (const cPtr_impType * inObject,
                                    const GALGAS_object_5F_t constin_attr,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_impType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_impType_verifyType f = NULL ;
    if (classIndex < gCategoryMethodTable_impType_verifyType.count ()) {
      f = gCategoryMethodTable_impType_verifyType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_impType_verifyType.count ()) {
           f = gCategoryMethodTable_impType_verifyType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_impType_verifyType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_attr, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_impType_verifyType (const cPtr_impType * /* inObject */,
                                               const GALGAS_object_5F_t constinArgument_attr,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @errorInstructionForGeneration
  inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (56)), GALGAS_string ("Internal error, a generic type should not be instantiated") COMMA_SOURCE_FILE_AT_LINE (56)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impType.mSlotID,
                                  categoryMethod_impType_verifyType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_impType_verifyType (void) {
  gCategoryMethodTable_impType_verifyType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impType_verifyType (defineCategoryMethod_impType_verifyType,
                                               freeCategoryMethod_impType_verifyType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@impType verifyMultipleType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_impType_verifyMultipleType> gCategoryMethodTable_impType_verifyMultipleType ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_verifyMultipleType (const PMSInt32 inClassIndex,
                                             categoryMethodSignature_impType_verifyMultipleType inMethod) {
  gCategoryMethodTable_impType_verifyMultipleType.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_verifyMultipleType (const cPtr_impType * inObject,
                                            const GALGAS_object_5F_t constin_attr,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_impType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_impType_verifyMultipleType f = NULL ;
    if (classIndex < gCategoryMethodTable_impType_verifyMultipleType.count ()) {
      f = gCategoryMethodTable_impType_verifyMultipleType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_impType_verifyMultipleType.count ()) {
           f = gCategoryMethodTable_impType_verifyMultipleType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_impType_verifyMultipleType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_attr, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_impType_verifyMultipleType (const cPtr_impType * inObject,
                                                       const GALGAS_object_5F_t constinArgument_attr,
                                                       C_Compiler * inCompiler
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impType * object = inObject ;
  macroValidSharedObject (object, const cPtr_impType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_multipleAttribute) {
      GALGAS_multipleAttribute cast_2168_ma ((cPtr_multipleAttribute *) constinArgument_attr.ptr ()) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_identifierList enumerator_2197 (cast_2168_ma.reader_items (SOURCE_FILE_AT_LINE (65)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_2197.hasCurrentObject ()) {
        //-------- @methodCallInstructionForGeneration
        //--- @selfCopyInExpressionForGeneration
        const GALGAS_impType temp_0 = object ;
        callCategoryMethod_verifyType ((const cPtr_impType *) temp_0.ptr (), enumerator_2197.current_item (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (66)) ;
        //-------- END @methodCallInstructionForGeneration
        enumerator_2197.gotoNextObject () ;
      }
    }else{
      //-------- @methodCallInstructionForGeneration
      //--- @selfCopyInExpressionForGeneration
      const GALGAS_impType temp_1 = object ;
      callCategoryMethod_verifyType ((const cPtr_impType *) temp_1.ptr (), constinArgument_attr, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
      //-------- END @methodCallInstructionForGeneration
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impType_verifyMultipleType (void) {
  enterCategoryMethod_verifyMultipleType (kTypeDescriptor_GALGAS_impType.mSlotID,
                                          categoryMethod_impType_verifyMultipleType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_impType_verifyMultipleType (void) {
  gCategoryMethodTable_impType_verifyMultipleType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impType_verifyMultipleType (defineCategoryMethod_impType_verifyMultipleType,
                                                       freeCategoryMethod_impType_verifyMultipleType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@impStructType verifyType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_impStructType_verifyType (const cPtr_impType * inObject,
                                                     const GALGAS_object_5F_t constinArgument_attr,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impStructType * object = (const cPtr_impStructType *) inObject ;
  macroValidSharedObject (object, const cPtr_impStructType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_structAttribute) {
      GALGAS_structAttribute cast_2498_sa ((cPtr_structAttribute *) constinArgument_attr.ptr ()) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_implementationObjectMap enumerator_2533 (object->mAttribute_structAttributes, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_2533.hasCurrentObject ()) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_0 = cast_2498_sa.reader_subAttributes (SOURCE_FILE_AT_LINE (80)).reader_objectParams (SOURCE_FILE_AT_LINE (80)).reader_hasKey (enumerator_2533.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)).boolEnum () ;
        if (kBoolTrue == test_0) {
          //-------- @localVariableDeclarationForGeneration
          GALGAS_object_5F_t var_subAttr ;
          //-------- @methodCallInstructionForGeneration
          cast_2498_sa.reader_subAttributes (SOURCE_FILE_AT_LINE (82)).reader_objectParams (SOURCE_FILE_AT_LINE (82)).method_get (enumerator_2533.current_lkey (HERE), var_subAttr, inCompiler COMMA_SOURCE_FILE_AT_LINE (82)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @methodCallInstructionForGeneration
          callCategoryMethod_verifyMultipleType ((const cPtr_impType *) enumerator_2533.current_type (HERE).ptr (), var_subAttr, inCompiler COMMA_SOURCE_FILE_AT_LINE (83)) ;
          //-------- END @methodCallInstructionForGeneration
        }
        enumerator_2533.gotoNextObject () ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (87)), GALGAS_string ("STRUCT expected") COMMA_SOURCE_FILE_AT_LINE (87)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impStructType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impStructType.mSlotID,
                                  categoryMethod_impStructType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impStructType_verifyType (defineCategoryMethod_impStructType_verifyType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category method '@refType verifyType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_refType_verifyType (const cPtr_impType * /* inObject */,
                                               const GALGAS_object_5F_t constinArgument_attr,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_string_5F_class) {
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (98)), GALGAS_string ("object reference expected") COMMA_SOURCE_FILE_AT_LINE (98)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_refType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_refType.mSlotID,
                                  categoryMethod_refType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_refType_verifyType (defineCategoryMethod_refType_verifyType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@impBoolType verifyType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_impBoolType_verifyType (const cPtr_impType * inObject,
                                                   const GALGAS_object_5F_t constinArgument_attr,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impBoolType * object = (const cPtr_impBoolType *) inObject ;
  macroValidSharedObject (object, const cPtr_impBoolType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_boolAttribute) {
      GALGAS_boolAttribute cast_3294_b ((cPtr_boolAttribute *) constinArgument_attr.ptr ()) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = cast_3294_b.reader_value (SOURCE_FILE_AT_LINE (108)).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_implementationObjectMap enumerator_3354 (object->mAttribute_trueSubAttributes, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_3354.hasCurrentObject ()) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_1 = cast_3294_b.reader_subAttributes (SOURCE_FILE_AT_LINE (110)).reader_objectParams (SOURCE_FILE_AT_LINE (110)).reader_hasKey (enumerator_3354.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (110)).boolEnum () ;
          if (kBoolTrue == test_1) {
            //-------- @localVariableDeclarationForGeneration
            GALGAS_object_5F_t var_subAttrs ;
            //-------- @methodCallInstructionForGeneration
            cast_3294_b.reader_subAttributes (SOURCE_FILE_AT_LINE (112)).reader_objectParams (SOURCE_FILE_AT_LINE (112)).method_get (enumerator_3354.current_lkey (HERE), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (112)) ;
            //-------- END @methodCallInstructionForGeneration
            //-------- @methodCallInstructionForGeneration
            callCategoryMethod_verifyMultipleType ((const cPtr_impType *) enumerator_3354.current_type (HERE).ptr (), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (113)) ;
            //-------- END @methodCallInstructionForGeneration
          }
          enumerator_3354.gotoNextObject () ;
        }
      }else if (kBoolFalse == test_0) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_implementationObjectMap enumerator_3650 (object->mAttribute_falseSubAttributes, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_3650.hasCurrentObject ()) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_2 = cast_3294_b.reader_subAttributes (SOURCE_FILE_AT_LINE (118)).reader_objectParams (SOURCE_FILE_AT_LINE (118)).reader_hasKey (enumerator_3650.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (118)) COMMA_SOURCE_FILE_AT_LINE (118)).boolEnum () ;
          if (kBoolTrue == test_2) {
            //-------- @localVariableDeclarationForGeneration
            GALGAS_object_5F_t var_subAttrs ;
            //-------- @methodCallInstructionForGeneration
            cast_3294_b.reader_subAttributes (SOURCE_FILE_AT_LINE (120)).reader_objectParams (SOURCE_FILE_AT_LINE (120)).method_get (enumerator_3650.current_lkey (HERE), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (120)) ;
            //-------- END @methodCallInstructionForGeneration
            //-------- @methodCallInstructionForGeneration
            callCategoryMethod_verifyMultipleType ((const cPtr_impType *) enumerator_3650.current_type (HERE).ptr (), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (121)) ;
            //-------- END @methodCallInstructionForGeneration
          }
          enumerator_3650.gotoNextObject () ;
        }
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (126)), GALGAS_string ("BOOLEAN expected") COMMA_SOURCE_FILE_AT_LINE (126)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impBoolType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impBoolType.mSlotID,
                                  categoryMethod_impBoolType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impBoolType_verifyType (defineCategoryMethod_impBoolType_verifyType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@impEnumType verifyType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_impEnumType_verifyType (const cPtr_impType * inObject,
                                                   const GALGAS_object_5F_t constinArgument_attr,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impEnumType * object = (const cPtr_impEnumType *) inObject ;
  macroValidSharedObject (object, const cPtr_impEnumType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_enumAttribute) {
      GALGAS_enumAttribute cast_4173_e ((cPtr_enumAttribute *) constinArgument_attr.ptr ()) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = object->mAttribute_valuesMap.reader_hasKey (cast_4173_e.reader_value (SOURCE_FILE_AT_LINE (136)) COMMA_SOURCE_FILE_AT_LINE (136)).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_implementationObjectMap var_validVal ;
        //-------- @methodCallInstructionForGeneration
        object->mAttribute_valuesMap.method_get (function_lstringWith (cast_4173_e.reader_value (SOURCE_FILE_AT_LINE (138)), inCompiler COMMA_SOURCE_FILE_AT_LINE (138)), var_validVal, inCompiler COMMA_SOURCE_FILE_AT_LINE (138)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @foreachInstructionForGeneration
        cEnumerator_implementationObjectMap enumerator_4343 (var_validVal, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_4343.hasCurrentObject ()) {
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_1 = cast_4173_e.reader_subAttributes (SOURCE_FILE_AT_LINE (140)).reader_objectParams (SOURCE_FILE_AT_LINE (140)).reader_hasKey (enumerator_4343.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)).boolEnum () ;
          if (kBoolTrue == test_1) {
            //-------- @localVariableDeclarationForGeneration
            GALGAS_object_5F_t var_subAttrs ;
            //-------- @methodCallInstructionForGeneration
            cast_4173_e.reader_subAttributes (SOURCE_FILE_AT_LINE (142)).reader_objectParams (SOURCE_FILE_AT_LINE (142)).method_get (enumerator_4343.current_lkey (HERE), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (142)) ;
            //-------- END @methodCallInstructionForGeneration
            //-------- @methodCallInstructionForGeneration
            callCategoryMethod_verifyMultipleType ((const cPtr_impType *) enumerator_4343.current_type (HERE).ptr (), var_subAttrs, inCompiler COMMA_SOURCE_FILE_AT_LINE (143)) ;
            //-------- END @methodCallInstructionForGeneration
          }
          enumerator_4343.gotoNextObject () ;
        }
      }else if (kBoolFalse == test_0) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_4173_e.reader_location (SOURCE_FILE_AT_LINE (147)), cast_4173_e.reader_value (SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string (" is not a valid enum value") COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)) ;
      }
    }else{
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("**** @impEnumType ****\n") COMMA_SOURCE_FILE_AT_LINE (150)) ;
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (151)), GALGAS_string ("ENUM expected") COMMA_SOURCE_FILE_AT_LINE (151)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impEnumType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impEnumType.mSlotID,
                                  categoryMethod_impEnumType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impEnumType_verifyType (defineCategoryMethod_impEnumType_verifyType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@impAutoDefaultType verifyType'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_impAutoDefaultType_verifyType (const cPtr_impType * inObject,
                                                          const GALGAS_object_5F_t constinArgument_attr,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impAutoDefaultType * object = (const cPtr_impAutoDefaultType *) inObject ;
  macroValidSharedObject (object, const cPtr_impAutoDefaultType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_stringAttribute) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_string (SOURCE_FILE_AT_LINE (162)))).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (163)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (163)) COMMA_SOURCE_FILE_AT_LINE (163)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_string_5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_identifier (SOURCE_FILE_AT_LINE (166)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (167)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (167)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (167)) COMMA_SOURCE_FILE_AT_LINE (167)) ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (171)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (171)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (171)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impAutoDefaultType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impAutoDefaultType.mSlotID,
                                  categoryMethod_impAutoDefaultType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impAutoDefaultType_verifyType (defineCategoryMethod_impAutoDefaultType_verifyType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@impRangedType verifyType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_impRangedType_verifyType (const cPtr_impType * inObject,
                                                     const GALGAS_object_5F_t constinArgument_attr,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_impRangedType * object = (const cPtr_impRangedType *) inObject ;
  macroValidSharedObject (object, const cPtr_impRangedType) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_attr.isValid ()) {
    if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_33__32__5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_uint_33__32_Number (SOURCE_FILE_AT_LINE (182)))).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (183)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (183)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (183)) COMMA_SOURCE_FILE_AT_LINE (183)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_sint_33__32__5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_sint_33__32_Number (SOURCE_FILE_AT_LINE (186)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (187)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (187)) COMMA_SOURCE_FILE_AT_LINE (187)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_uint_36__34__5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_uint_36__34_Number (SOURCE_FILE_AT_LINE (190)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (191)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (191)) COMMA_SOURCE_FILE_AT_LINE (191)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_sint_36__34__5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_sint_36__34_Number (SOURCE_FILE_AT_LINE (194)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (195)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_float_5F_class) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, object->mAttribute_type.objectCompare (GALGAS_dataType::constructor_floatNumber (SOURCE_FILE_AT_LINE (198)))).boolEnum () ;
      if (kBoolTrue == test_4) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (199)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (199)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (199)) COMMA_SOURCE_FILE_AT_LINE (199)) ;
      }
    }else if (constinArgument_attr.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_auto) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, object->mAttribute_withAuto.objectCompare (GALGAS_bool (false))).boolEnum () ;
      if (kBoolTrue == test_5) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (203)), GALGAS_string ("AUTO is not allowed for ").operator_concat (object->mAttribute_name.reader_string (SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string (" attribute") COMMA_SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)) ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_attr.reader_location (SOURCE_FILE_AT_LINE (207)), categoryReader_oilType (object->mAttribute_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (207)).operator_concat (GALGAS_string (" expected") COMMA_SOURCE_FILE_AT_LINE (207)) COMMA_SOURCE_FILE_AT_LINE (207)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_impRangedType_verifyType (void) {
  enterCategoryMethod_verifyType (kTypeDescriptor_GALGAS_impRangedType.mSlotID,
                                  categoryMethod_impRangedType_verifyType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_impRangedType_verifyType (defineCategoryMethod_impRangedType_verifyType, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


