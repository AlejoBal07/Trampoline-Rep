//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'template_semantics.cpp'                        *
//                    Generated by version version 2.3.0                     *
//                     january 20th, 2012, at 16h35'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "template_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

GALGAS_Ttype::GALGAS_Ttype (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_boolType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_boolType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_intType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_intType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_floatType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_floatType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_stringType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_stringType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_listType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_listType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_mapType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_mapType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_structType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_structType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_enumType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_enumType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_functionType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_functionType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::constructor_unconstructedType (UNUSED_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  result.mEnum = kEnum_unconstructedType ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_Ttype [11] = {
  "(not built)",
  "boolType",
  "intType",
  "floatType",
  "stringType",
  "listType",
  "mapType",
  "structType",
  "enumType",
  "functionType",
  "unconstructedType"
} ;

//---------------------------------------------------------------------------*

void GALGAS_Ttype::description (C_String & ioString,
                                const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @Ttype: " << gEnumNameArrayFor_Ttype [mEnum] << ">" ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_Ttype::objectCompare (const GALGAS_Ttype & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                                @Ttype type                                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_Ttype ("Ttype",
                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_Ttype::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_Ttype ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_Ttype::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_Ttype (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_Ttype::extractObject (const GALGAS_object & inObject,
                                          C_Compiler * inCompiler,
                                          const GALGAS_location & inErrorLocation
                                          COMMA_LOCATION_ARGS) {
  GALGAS_Ttype result ;
  const GALGAS_Ttype * p = (const GALGAS_Ttype *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_Ttype *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "Ttype", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Class for element of '@TtypeList' list                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_TtypeList : public cCollectionElement {
//--- List attributes
  public : GALGAS_Ttype mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_TtypeList (const GALGAS_Ttype & in_mType
                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_TtypeList::cCollectionElement_TtypeList (const GALGAS_Ttype & in_mType
                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_TtypeList::isValid (void) const {
  return mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_TtypeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_TtypeList (mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_TtypeList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_TtypeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_TtypeList * operand = (cCollectionElement_TtypeList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList::GALGAS_TtypeList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList::GALGAS_TtypeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_TtypeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::constructor_listWithValue (const GALGAS_Ttype & inOperand0
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_TtypeList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_TtypeList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                  const GALGAS_Ttype & in_mType
                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_TtypeList * p = NULL ;
  macroMyNew (p, cCollectionElement_TtypeList (in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::addAssign_operation (const GALGAS_Ttype & inOperand0
                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TtypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::modifier_prependValue (GALGAS_Ttype inOperand0
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TtypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::modifier_popFirst (GALGAS_Ttype & outOperand0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TtypeList * p = (cCollectionElement_TtypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TtypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::modifier_popLast (GALGAS_Ttype & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TtypeList * p = (cCollectionElement_TtypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TtypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::method_first (GALGAS_Ttype & outOperand0,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TtypeList * p = (cCollectionElement_TtypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TtypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::method_last (GALGAS_Ttype & outOperand0,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TtypeList * p = (cCollectionElement_TtypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TtypeList) ;
    outOperand0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::operator_concat (const GALGAS_TtypeList & inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_TtypeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                            const GALGAS_uint & inLength,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_TtypeList result = GALGAS_TtypeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_TtypeList result = GALGAS_TtypeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TtypeList::dotAssign_operation (const GALGAS_TtypeList inOperand
                                            COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_TtypeList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TtypeList * p = (cCollectionElement_TtypeList *) attributes.ptr () ;
  GALGAS_Ttype result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TtypeList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_TtypeList::cEnumerator_TtypeList (const GALGAS_TtypeList & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype cEnumerator_TtypeList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_TtypeList * p = (const cCollectionElement_TtypeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TtypeList) ;
  return p->mAttribute_mType ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                              @TtypeList type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TtypeList ("TtypeList",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TtypeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TtypeList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TtypeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TtypeList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TtypeList GALGAS_TtypeList::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_TtypeList result ;
  const GALGAS_TtypeList * p = (const GALGAS_TtypeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TtypeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TtypeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_TfieldMap::cMapElement_TfieldMap (const GALGAS_lstring & inKey,
                                              const GALGAS_Ttype & in_mType,
                                              const GALGAS_Tvalue & in_mValue
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------*

bool cMapElement_TfieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_TfieldMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_TfieldMap (mAttribute_lkey, mAttribute_mType, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_TfieldMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_TfieldMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_TfieldMap * operand = (cMapElement_TfieldMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap::GALGAS_TfieldMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap::GALGAS_TfieldMap (const GALGAS_TfieldMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap & GALGAS_TfieldMap::operator = (const GALGAS_TfieldMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_TfieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_TfieldMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_TfieldMap::constructor_mapWithMapToOverride (const GALGAS_TfieldMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_TfieldMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_TfieldMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_TfieldMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_TfieldMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_Ttype inArgument0,
                                           GALGAS_Tvalue inArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_TfieldMap * p = NULL ;
  macroMyNew (p, cMapElement_TfieldMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "a template field named '%K' is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_TfieldMap_searchKey = "there is no template field named '%K'" ;

//---------------------------------------------------------------------------*

void GALGAS_TfieldMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_Ttype & outArgument0,
                                         GALGAS_Tvalue & outArgument1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_TfieldMap * p = (const cMapElement_TfieldMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_TfieldMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_TfieldMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMap::modifier_removeKey (GALGAS_lstring inKey,
                                           GALGAS_Ttype & outArgument0,
                                           GALGAS_Tvalue & outArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no template field named '%K' to delete" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_TfieldMap * p = (cMapElement_TfieldMap *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_TfieldMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_TfieldMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_TfieldMap * p = (const cMapElement_TfieldMap *) attributes ;
  GALGAS_Ttype result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_TfieldMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue GALGAS_TfieldMap::reader_mValueForKey (const GALGAS_string & inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_TfieldMap * p = (const cMapElement_TfieldMap *) attributes ;
  GALGAS_Tvalue result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_TfieldMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMap::modifier_setMTypeForKey (GALGAS_Ttype inAttributeValue,
                                                GALGAS_string inKey,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_TfieldMap * p = (cMapElement_TfieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_TfieldMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMap::modifier_setMValueForKey (GALGAS_Tvalue inAttributeValue,
                                                 GALGAS_string inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_TfieldMap * p = (cMapElement_TfieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_TfieldMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_TfieldMap * GALGAS_TfieldMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_TfieldMap * result = (cMapElement_TfieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_TfieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_TfieldMap * GALGAS_TfieldMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_TfieldMap_searchKey COMMA_THERE) ;
  cMapElement_TfieldMap * result = (cMapElement_TfieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_TfieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_TfieldMap::cEnumerator_TfieldMap (const GALGAS_TfieldMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_TfieldMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype cEnumerator_TfieldMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_TfieldMap * p = (const cMapElement_TfieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_TfieldMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue cEnumerator_TfieldMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_TfieldMap * p = (const cMapElement_TfieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_TfieldMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @TfieldMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TfieldMap ("TfieldMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TfieldMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TfieldMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TfieldMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TfieldMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_TfieldMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_TfieldMap result ;
  const GALGAS_TfieldMap * p = (const GALGAS_TfieldMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TfieldMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TfieldMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Tfunction::GALGAS_Tfunction (void) :
mAttribute_name (),
mAttribute_args (),
mAttribute_content () {
}

//---------------------------------------------------------------------------*

GALGAS_Tfunction::~ GALGAS_Tfunction (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_Tfunction::GALGAS_Tfunction (const GALGAS_Tfunction & inSource) :
//mAttribute_name (inSource.mAttribute_name),
//mAttribute_args (inSource.mAttribute_args),
//mAttribute_content (inSource.mAttribute_content) {
} */

//---------------------------------------------------------------------------*

GALGAS_Tfunction::GALGAS_Tfunction (const GALGAS_lstring & inOperand0,
                                    const GALGAS_lstringlist & inOperand1,
                                    const GALGAS_string & inOperand2) :
mAttribute_name (inOperand0),
mAttribute_args (inOperand1),
mAttribute_content (inOperand2) {
}

//---------------------------------------------------------------------------*

/* GALGAS_Tfunction & GALGAS_Tfunction::operator = (const GALGAS_Tfunction & inOperand) {
  mAttribute_name = inOperand.mAttribute_name ;
  mAttribute_args = inOperand.mAttribute_args ;
  mAttribute_content = inOperand.mAttribute_content ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_Tfunction GALGAS_Tfunction::constructor_new (const GALGAS_lstring & inOperand0,
                                                    const GALGAS_lstringlist & inOperand1,
                                                    const GALGAS_string & inOperand2 
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tfunction result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_Tfunction (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_Tfunction::objectCompare (const GALGAS_Tfunction & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_name.objectCompare (inOperand.mAttribute_name) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_args.objectCompare (inOperand.mAttribute_args) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_content.objectCompare (inOperand.mAttribute_content) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_Tfunction::isValid (void) const {
  return mAttribute_name.isValid () && mAttribute_args.isValid () && mAttribute_content.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_Tfunction::drop (void) {
  mAttribute_name.drop () ;
  mAttribute_args.drop () ;
  mAttribute_content.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_Tfunction::description (C_String & ioString,
                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @Tfunction:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_name.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_args.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_content.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_Tfunction::reader_name (UNUSED_LOCATION_ARGS) const {
  return mAttribute_name ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_Tfunction::reader_args (UNUSED_LOCATION_ARGS) const {
  return mAttribute_args ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_Tfunction::reader_content (UNUSED_LOCATION_ARGS) const {
  return mAttribute_content ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @Tfunction type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_Tfunction ("Tfunction",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_Tfunction::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_Tfunction ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_Tfunction::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_Tfunction (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Tfunction GALGAS_Tfunction::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_Tfunction result ;
  const GALGAS_Tfunction * p = (const GALGAS_Tfunction *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_Tfunction *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "Tfunction", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'dummyFunction'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tfunction function_dummyFunction (C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tfunction result_fct ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_fct = GALGAS_Tfunction::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (78)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (78)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (78)) ;
//---
  return result_fct ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_dummyFunction [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_dummyFunction (C_Compiler * inCompiler,
                                                              const cObjectArray & /* inEffectiveParameterArray */,
                                                              const GALGAS_location & /* inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  return function_dummyFunction (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_dummyFunction ("dummyFunction",
                                                               functionWithGenericHeader_dummyFunction,
                                                               & kTypeDescriptor_GALGAS_Tfunction,
                                                               0,
                                                               functionArgs_dummyFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Class for element of '@TfieldMapList' list                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_TfieldMapList : public cCollectionElement {
//--- List attributes
  public : GALGAS_TfieldMap mAttribute_mMap ;

//--- Constructor
  public : cCollectionElement_TfieldMapList (const GALGAS_TfieldMap & in_mMap
                                             COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_TfieldMapList::cCollectionElement_TfieldMapList (const GALGAS_TfieldMap & in_mMap
                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mMap (in_mMap) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_TfieldMapList::isValid (void) const {
  return mAttribute_mMap.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_TfieldMapList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_TfieldMapList (mAttribute_mMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_TfieldMapList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMap" ":" ;
  mAttribute_mMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_TfieldMapList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_TfieldMapList * operand = (cCollectionElement_TfieldMapList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mMap.objectCompare (operand->mAttribute_mMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList::GALGAS_TfieldMapList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList::GALGAS_TfieldMapList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_TfieldMapList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::constructor_listWithValue (const GALGAS_TfieldMap & inOperand0
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_TfieldMapList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_TfieldMapList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                      const GALGAS_TfieldMap & in_mMap
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_TfieldMapList * p = NULL ;
  macroMyNew (p, cCollectionElement_TfieldMapList (in_mMap COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::addAssign_operation (const GALGAS_TfieldMap & inOperand0
                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TfieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::modifier_prependValue (GALGAS_TfieldMap inOperand0
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TfieldMapList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::modifier_popFirst (GALGAS_TfieldMap & outOperand0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::modifier_popLast (GALGAS_TfieldMap & outOperand0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::method_first (GALGAS_TfieldMap & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::method_last (GALGAS_TfieldMap & outOperand0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    outOperand0 = p->mAttribute_mMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::operator_concat (const GALGAS_TfieldMapList & inOperand
                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_TfieldMapList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                    const GALGAS_uint & inLength,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_TfieldMapList result = GALGAS_TfieldMapList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_TfieldMapList result = GALGAS_TfieldMapList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::dotAssign_operation (const GALGAS_TfieldMapList inOperand
                                                COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TfieldMapList::modifier_setMMapAtIndex (GALGAS_TfieldMap inOperand,
                                                    GALGAS_uint inIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    p->mAttribute_mMap = inOperand ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_TfieldMapList::reader_mMapAtIndex (const GALGAS_uint & inIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TfieldMapList * p = (cCollectionElement_TfieldMapList *) attributes.ptr () ;
  GALGAS_TfieldMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TfieldMapList) ;
    result = p->mAttribute_mMap ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_TfieldMapList::cEnumerator_TfieldMapList (const GALGAS_TfieldMapList & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap cEnumerator_TfieldMapList::current_mMap (LOCATION_ARGS) const {
  const cCollectionElement_TfieldMapList * p = (const cCollectionElement_TfieldMapList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TfieldMapList) ;
  return p->mAttribute_mMap ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                            @TfieldMapList type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TfieldMapList ("TfieldMapList",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TfieldMapList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TfieldMapList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TfieldMapList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TfieldMapList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_TfieldMapList::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_TfieldMapList result ;
  const GALGAS_TfieldMapList * p = (const GALGAS_TfieldMapList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TfieldMapList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TfieldMapList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue::GALGAS_Tvalue (void) :
mAttribute_mInt_36__34_Value (),
mAttribute_mFloatValue (),
mAttribute_mStringValue (),
mAttribute_mMapListValue (),
mAttribute_mStructValue (),
mAttribute_mFunctionValue () {
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue::~ GALGAS_Tvalue (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_Tvalue::GALGAS_Tvalue (const GALGAS_Tvalue & inSource) :
//mAttribute_mInt_36__34_Value (inSource.mAttribute_mInt_36__34_Value),
//mAttribute_mFloatValue (inSource.mAttribute_mFloatValue),
//mAttribute_mStringValue (inSource.mAttribute_mStringValue),
//mAttribute_mMapListValue (inSource.mAttribute_mMapListValue),
//mAttribute_mStructValue (inSource.mAttribute_mStructValue),
//mAttribute_mFunctionValue (inSource.mAttribute_mFunctionValue) {
} */

//---------------------------------------------------------------------------*

GALGAS_Tvalue::GALGAS_Tvalue (const GALGAS_sint_36__34_ & inOperand0,
                              const GALGAS_double & inOperand1,
                              const GALGAS_string & inOperand2,
                              const GALGAS_TfieldMapList & inOperand3,
                              const GALGAS_TfieldMap & inOperand4,
                              const GALGAS_Tfunction & inOperand5) :
mAttribute_mInt_36__34_Value (inOperand0),
mAttribute_mFloatValue (inOperand1),
mAttribute_mStringValue (inOperand2),
mAttribute_mMapListValue (inOperand3),
mAttribute_mStructValue (inOperand4),
mAttribute_mFunctionValue (inOperand5) {
}

//---------------------------------------------------------------------------*

/* GALGAS_Tvalue & GALGAS_Tvalue::operator = (const GALGAS_Tvalue & inOperand) {
  mAttribute_mInt_36__34_Value = inOperand.mAttribute_mInt_36__34_Value ;
  mAttribute_mFloatValue = inOperand.mAttribute_mFloatValue ;
  mAttribute_mStringValue = inOperand.mAttribute_mStringValue ;
  mAttribute_mMapListValue = inOperand.mAttribute_mMapListValue ;
  mAttribute_mStructValue = inOperand.mAttribute_mStructValue ;
  mAttribute_mFunctionValue = inOperand.mAttribute_mFunctionValue ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_Tvalue GALGAS_Tvalue::constructor_new (const GALGAS_sint_36__34_ & inOperand0,
                                              const GALGAS_double & inOperand1,
                                              const GALGAS_string & inOperand2,
                                              const GALGAS_TfieldMapList & inOperand3,
                                              const GALGAS_TfieldMap & inOperand4,
                                              const GALGAS_Tfunction & inOperand5 
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_Tvalue (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_Tvalue::objectCompare (const GALGAS_Tvalue & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mInt_36__34_Value.objectCompare (inOperand.mAttribute_mInt_36__34_Value) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFloatValue.objectCompare (inOperand.mAttribute_mFloatValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringValue.objectCompare (inOperand.mAttribute_mStringValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mMapListValue.objectCompare (inOperand.mAttribute_mMapListValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStructValue.objectCompare (inOperand.mAttribute_mStructValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFunctionValue.objectCompare (inOperand.mAttribute_mFunctionValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_Tvalue::isValid (void) const {
  return mAttribute_mInt_36__34_Value.isValid () && mAttribute_mFloatValue.isValid () && mAttribute_mStringValue.isValid () && mAttribute_mMapListValue.isValid () && mAttribute_mStructValue.isValid () && mAttribute_mFunctionValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_Tvalue::drop (void) {
  mAttribute_mInt_36__34_Value.drop () ;
  mAttribute_mFloatValue.drop () ;
  mAttribute_mStringValue.drop () ;
  mAttribute_mMapListValue.drop () ;
  mAttribute_mStructValue.drop () ;
  mAttribute_mFunctionValue.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_Tvalue::description (C_String & ioString,
                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @Tvalue:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mInt_36__34_Value.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFloatValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mMapListValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStructValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFunctionValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_sint_36__34_ GALGAS_Tvalue::reader_mInt_36__34_Value (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInt_36__34_Value ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_Tvalue::reader_mFloatValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFloatValue ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_Tvalue::reader_mStringValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringValue ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMapList GALGAS_Tvalue::reader_mMapListValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMapListValue ;
}

//---------------------------------------------------------------------------*

GALGAS_TfieldMap GALGAS_Tvalue::reader_mStructValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStructValue ;
}

//---------------------------------------------------------------------------*

GALGAS_Tfunction GALGAS_Tvalue::reader_mFunctionValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFunctionValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                               @Tvalue type                                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_Tvalue ("Tvalue",
                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_Tvalue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_Tvalue ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_Tvalue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_Tvalue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue GALGAS_Tvalue::extractObject (const GALGAS_object & inObject,
                                            C_Compiler * inCompiler,
                                            const GALGAS_location & inErrorLocation
                                            COMMA_LOCATION_ARGS) {
  GALGAS_Tvalue result ;
  const GALGAS_Tvalue * p = (const GALGAS_Tvalue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_Tvalue *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "Tvalue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Class for element of '@TexpressionList' list                *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_TexpressionList : public cCollectionElement {
//--- List attributes
  public : GALGAS_Tvalue mAttribute_mValue ;
  public : GALGAS_Ttype mAttribute_mType ;

//--- Constructor
  public : cCollectionElement_TexpressionList (const GALGAS_Tvalue & in_mValue,
                                               const GALGAS_Ttype & in_mType
                                               COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_TexpressionList::cCollectionElement_TexpressionList (const GALGAS_Tvalue & in_mValue,
                                                                        const GALGAS_Ttype & in_mType
                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mValue (in_mValue),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_TexpressionList::isValid (void) const {
  return mAttribute_mValue.isValid () && mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_TexpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_TexpressionList (mAttribute_mValue, mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_TexpressionList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_TexpressionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_TexpressionList * operand = (cCollectionElement_TexpressionList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList::GALGAS_TexpressionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList::GALGAS_TexpressionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_TexpressionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::constructor_listWithValue (const GALGAS_Tvalue & inOperand0,
                                                                          const GALGAS_Ttype & inOperand1
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_TexpressionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_TexpressionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                        const GALGAS_Tvalue & in_mValue,
                                                        const GALGAS_Ttype & in_mType
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_TexpressionList * p = NULL ;
  macroMyNew (p, cCollectionElement_TexpressionList (in_mValue,
                                                        in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::addAssign_operation (const GALGAS_Tvalue & inOperand0,
                                                  const GALGAS_Ttype & inOperand1
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TexpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::modifier_prependValue (GALGAS_Tvalue inOperand0,
                                                    GALGAS_Ttype inOperand1
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TexpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::modifier_popFirst (GALGAS_Tvalue & outOperand0,
                                                GALGAS_Ttype & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::modifier_popLast (GALGAS_Tvalue & outOperand0,
                                               GALGAS_Ttype & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::method_first (GALGAS_Tvalue & outOperand0,
                                           GALGAS_Ttype & outOperand1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::method_last (GALGAS_Tvalue & outOperand0,
                                          GALGAS_Ttype & outOperand1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    outOperand0 = p->mAttribute_mValue ;
    outOperand1 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::operator_concat (const GALGAS_TexpressionList & inOperand
                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_TexpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                        const GALGAS_uint & inLength,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_TexpressionList result = GALGAS_TexpressionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_TexpressionList result = GALGAS_TexpressionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TexpressionList::dotAssign_operation (const GALGAS_TexpressionList inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue GALGAS_TexpressionList::reader_mValueAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  GALGAS_Tvalue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype GALGAS_TexpressionList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TexpressionList * p = (cCollectionElement_TexpressionList *) attributes.ptr () ;
  GALGAS_Ttype result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TexpressionList) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_TexpressionList::cEnumerator_TexpressionList (const GALGAS_TexpressionList & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue cEnumerator_TexpressionList::current_mValue (LOCATION_ARGS) const {
  const cCollectionElement_TexpressionList * p = (const cCollectionElement_TexpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TexpressionList) ;
  return p->mAttribute_mValue ;
}

//---------------------------------------------------------------------------*

GALGAS_Ttype cEnumerator_TexpressionList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_TexpressionList * p = (const cCollectionElement_TexpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TexpressionList) ;
  return p->mAttribute_mType ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                           @TexpressionList type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TexpressionList ("TexpressionList",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TexpressionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TexpressionList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TexpressionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TexpressionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TexpressionList GALGAS_TexpressionList::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_TexpressionList result ;
  const GALGAS_TexpressionList * p = (const GALGAS_TexpressionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TexpressionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TexpressionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Class for element of '@TenumationList' list                *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_TenumationList : public cCollectionElement {
//--- List attributes
  public : GALGAS_Tvalue mAttribute_mEnumeratedValue ;
  public : GALGAS_string mAttribute_mPrefix ;

//--- Constructor
  public : cCollectionElement_TenumationList (const GALGAS_Tvalue & in_mEnumeratedValue,
                                              const GALGAS_string & in_mPrefix
                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_TenumationList::cCollectionElement_TenumationList (const GALGAS_Tvalue & in_mEnumeratedValue,
                                                                      const GALGAS_string & in_mPrefix
                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mEnumeratedValue (in_mEnumeratedValue),
mAttribute_mPrefix (in_mPrefix) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_TenumationList::isValid (void) const {
  return mAttribute_mEnumeratedValue.isValid () && mAttribute_mPrefix.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_TenumationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_TenumationList (mAttribute_mEnumeratedValue, mAttribute_mPrefix COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_TenumationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumeratedValue" ":" ;
  mAttribute_mEnumeratedValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPrefix" ":" ;
  mAttribute_mPrefix.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_TenumationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_TenumationList * operand = (cCollectionElement_TenumationList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mEnumeratedValue.objectCompare (operand->mAttribute_mEnumeratedValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPrefix.objectCompare (operand->mAttribute_mPrefix) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList::GALGAS_TenumationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList::GALGAS_TenumationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_TenumationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::constructor_listWithValue (const GALGAS_Tvalue & inOperand0,
                                                                        const GALGAS_string & inOperand1
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_TenumationList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_TenumationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                       const GALGAS_Tvalue & in_mEnumeratedValue,
                                                       const GALGAS_string & in_mPrefix
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_TenumationList * p = NULL ;
  macroMyNew (p, cCollectionElement_TenumationList (in_mEnumeratedValue,
                                                       in_mPrefix COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::addAssign_operation (const GALGAS_Tvalue & inOperand0,
                                                 const GALGAS_string & inOperand1
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TenumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::modifier_prependValue (GALGAS_Tvalue inOperand0,
                                                   GALGAS_string inOperand1
                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TenumationList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::modifier_popFirst (GALGAS_Tvalue & outOperand0,
                                               GALGAS_string & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::modifier_popLast (GALGAS_Tvalue & outOperand0,
                                              GALGAS_string & outOperand1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::method_first (GALGAS_Tvalue & outOperand0,
                                          GALGAS_string & outOperand1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::method_last (GALGAS_Tvalue & outOperand0,
                                         GALGAS_string & outOperand1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    outOperand0 = p->mAttribute_mEnumeratedValue ;
    outOperand1 = p->mAttribute_mPrefix ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::operator_concat (const GALGAS_TenumationList & inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_TenumationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                      const GALGAS_uint & inLength,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_TenumationList result = GALGAS_TenumationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_TenumationList result = GALGAS_TenumationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TenumationList::dotAssign_operation (const GALGAS_TenumationList inOperand
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue GALGAS_TenumationList::reader_mEnumeratedValueAtIndex (const GALGAS_uint & inIndex,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  GALGAS_Tvalue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    result = p->mAttribute_mEnumeratedValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_TenumationList::reader_mPrefixAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TenumationList * p = (cCollectionElement_TenumationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TenumationList) ;
    result = p->mAttribute_mPrefix ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_TenumationList::cEnumerator_TenumationList (const GALGAS_TenumationList & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_Tvalue cEnumerator_TenumationList::current_mEnumeratedValue (LOCATION_ARGS) const {
  const cCollectionElement_TenumationList * p = (const cCollectionElement_TenumationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TenumationList) ;
  return p->mAttribute_mEnumeratedValue ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_TenumationList::current_mPrefix (LOCATION_ARGS) const {
  const cCollectionElement_TenumationList * p = (const cCollectionElement_TenumationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TenumationList) ;
  return p->mAttribute_mPrefix ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                           @TenumationList type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TenumationList ("TenumationList",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TenumationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TenumationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TenumationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TenumationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TenumationList GALGAS_TenumationList::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_TenumationList result ;
  const GALGAS_TenumationList * p = (const GALGAS_TenumationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TenumationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TenumationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithBool'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithBool (const GALGAS_bool & constinArgument_inValue,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue.reader_sint_36__34_ (SOURCE_FILE_AT_LINE (119)), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (122)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (123)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (118)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithBool [2] = {
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithBool (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_bool operand0 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithBool (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithBool ("valueWithBool",
                                                               functionWithGenericHeader_valueWithBool,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               1,
                                                               functionArgs_valueWithBool) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'valueWithUnsigned'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithUnsigned (const GALGAS_uint_36__34_ & constinArgument_inValue,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue.reader_sint_36__34_ (inCompiler COMMA_SOURCE_FILE_AT_LINE (135)), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (138)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (139)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (134)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithUnsigned [2] = {
  & kTypeDescriptor_GALGAS_uint_36__34_,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithUnsigned (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_uint_36__34_ operand0 = GALGAS_uint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithUnsigned (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithUnsigned ("valueWithUnsigned",
                                                                   functionWithGenericHeader_valueWithUnsigned,
                                                                   & kTypeDescriptor_GALGAS_Tvalue,
                                                                   1,
                                                                   functionArgs_valueWithUnsigned) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'valueWithSigned'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithSigned (const GALGAS_sint_36__34_ & constinArgument_inValue,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (constinArgument_inValue, GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (154)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (155)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (156)) COMMA_SOURCE_FILE_AT_LINE (150)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithSigned [2] = {
  & kTypeDescriptor_GALGAS_sint_36__34_,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithSigned (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_sint_36__34_ operand0 = GALGAS_sint_36__34_::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithSigned (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithSigned ("valueWithSigned",
                                                                 functionWithGenericHeader_valueWithSigned,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 1,
                                                                 functionArgs_valueWithSigned) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithFloat'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithFloat (const GALGAS_double & constinArgument_inValue,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), constinArgument_inValue, GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (170)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (171)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (172)) COMMA_SOURCE_FILE_AT_LINE (166)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithFloat [2] = {
  & kTypeDescriptor_GALGAS_double,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithFloat (C_Compiler * inCompiler,
                                                               const cObjectArray & inEffectiveParameterArray,
                                                               const GALGAS_location & inErrorLocation
                                                               COMMA_LOCATION_ARGS) {
  const GALGAS_double operand0 = GALGAS_double::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithFloat (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithFloat ("valueWithFloat",
                                                                functionWithGenericHeader_valueWithFloat,
                                                                & kTypeDescriptor_GALGAS_Tvalue,
                                                                1,
                                                                functionArgs_valueWithFloat) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'valueWithString'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithString (const GALGAS_string & constinArgument_inValue,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), constinArgument_inValue, GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (186)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (187)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (188)) COMMA_SOURCE_FILE_AT_LINE (182)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithString [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithString (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithString (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithString ("valueWithString",
                                                                 functionWithGenericHeader_valueWithString,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 1,
                                                                 functionArgs_valueWithString) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'valueWithStruct'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithStruct (const GALGAS_TfieldMap & constinArgument_inValue,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (202)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (204)) COMMA_SOURCE_FILE_AT_LINE (198)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithStruct [2] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithStruct (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithStruct (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithStruct ("valueWithStruct",
                                                                 functionWithGenericHeader_valueWithStruct,
                                                                 & kTypeDescriptor_GALGAS_Tvalue,
                                                                 1,
                                                                 functionArgs_valueWithStruct) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Function 'valueWithMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithMap (const GALGAS_TfieldMap & constinArgument_inValue,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (218)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (220)) COMMA_SOURCE_FILE_AT_LINE (214)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithMap [2] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithMap (C_Compiler * inCompiler,
                                                             const cObjectArray & inEffectiveParameterArray,
                                                             const GALGAS_location & inErrorLocation
                                                             COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithMap (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithMap ("valueWithMap",
                                                              functionWithGenericHeader_valueWithMap,
                                                              & kTypeDescriptor_GALGAS_Tvalue,
                                                              1,
                                                              functionArgs_valueWithMap) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithList (const GALGAS_TfieldMapList & constinArgument_inValue,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), constinArgument_inValue, GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (235)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (236)) COMMA_SOURCE_FILE_AT_LINE (230)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithList [2] = {
  & kTypeDescriptor_GALGAS_TfieldMapList,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithList (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMapList operand0 = GALGAS_TfieldMapList::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_valueWithList (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithList ("valueWithList",
                                                               functionWithGenericHeader_valueWithList,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               1,
                                                               functionArgs_valueWithList) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'valueWithVoid'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_Tvalue function_valueWithVoid (C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_Tvalue result_outValue ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (249)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (250)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (251)) COMMA_SOURCE_FILE_AT_LINE (245)) ;
//---
  return result_outValue ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_valueWithVoid [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_valueWithVoid (C_Compiler * inCompiler,
                                                              const cObjectArray & /* inEffectiveParameterArray */,
                                                              const GALGAS_location & /* inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  return function_valueWithVoid (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_valueWithVoid ("valueWithVoid",
                                                               functionWithGenericHeader_valueWithVoid,
                                                               & kTypeDescriptor_GALGAS_Tvalue,
                                                               0,
                                                               functionArgs_valueWithVoid) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addBoolValue'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addBoolValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_bool constinArgument_inValue,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (264)), function_valueWithBool (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (265)), inCompiler COMMA_SOURCE_FILE_AT_LINE (262)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addUnsignedValue'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addUnsignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                               const GALGAS_lstring constinArgument_inVariableName,
                               const GALGAS_uint_36__34_ constinArgument_inValue,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (278)), function_valueWithUnsigned (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (279)), inCompiler COMMA_SOURCE_FILE_AT_LINE (276)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addSignedValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addSignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_sint_36__34_ constinArgument_inValue,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (293)), function_valueWithSigned (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (294)), inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addFloatValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addFloatValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                            const GALGAS_lstring constinArgument_inVariableName,
                            const GALGAS_double constinArgument_inValue,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_floatType (SOURCE_FILE_AT_LINE (308)), function_valueWithFloat (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (309)), inCompiler COMMA_SOURCE_FILE_AT_LINE (306)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'addLUnsignedValue'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLUnsignedValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                const GALGAS_string constinArgument_inVariableName,
                                const GALGAS_luint_36__34_ constinArgument_inValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  routine_addUnsignedValue (ioArgument_ioTemplateVariableMap, GALGAS_lstring::constructor_new (constinArgument_inVariableName, constinArgument_inValue.reader_location (SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)), constinArgument_inValue.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (321)), inCompiler COMMA_SOURCE_FILE_AT_LINE (321)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addStringValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addStringValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_string constinArgument_inValue,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (333)), function_valueWithString (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (334)), inCompiler COMMA_SOURCE_FILE_AT_LINE (331)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addLStringValue'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addLStringValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                              const GALGAS_string constinArgument_inVariableName,
                              const GALGAS_lstring constinArgument_inValue,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @routineCallInstructionForGeneration
  routine_addStringValue (ioArgument_ioTemplateVariableMap, GALGAS_lstring::constructor_new (constinArgument_inVariableName, constinArgument_inValue.reader_location (SOURCE_FILE_AT_LINE (346)) COMMA_SOURCE_FILE_AT_LINE (346)), constinArgument_inValue.reader_string (SOURCE_FILE_AT_LINE (346)), inCompiler COMMA_SOURCE_FILE_AT_LINE (346)) ;
  } //-------- @routineCallInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addListValue'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addListValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_TfieldMapList constinArgument_inValue,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (358)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), constinArgument_inValue, GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (359)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (359)) COMMA_SOURCE_FILE_AT_LINE (359)), inCompiler COMMA_SOURCE_FILE_AT_LINE (356)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'addStructValue'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addStructValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                             const GALGAS_lstring constinArgument_inVariableName,
                             const GALGAS_TfieldMap constinArgument_inValue,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (372)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (373)), constinArgument_inValue, function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (373)) COMMA_SOURCE_FILE_AT_LINE (373)), inCompiler COMMA_SOURCE_FILE_AT_LINE (370)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addEnumValue'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addEnumValue (GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                           const GALGAS_lstring constinArgument_inVariableName,
                           const GALGAS_string constinArgument_inValue,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioTemplateVariableMap.modifier_insertKey (constinArgument_inVariableName, GALGAS_Ttype::constructor_enumType (SOURCE_FILE_AT_LINE (386)), function_valueWithString (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (387)), inCompiler COMMA_SOURCE_FILE_AT_LINE (384)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Class for element of '@TvarPath' list                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_TvarPath : public cCollectionElement {
//--- List attributes
  public : GALGAS_lstring mAttribute_item ;
  public : GALGAS_lstring mAttribute_key ;
  public : GALGAS_lsint mAttribute_idx ;

//--- Constructor
  public : cCollectionElement_TvarPath (const GALGAS_lstring & in_item,
                                        const GALGAS_lstring & in_key,
                                        const GALGAS_lsint & in_idx
                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_TvarPath::cCollectionElement_TvarPath (const GALGAS_lstring & in_item,
                                                          const GALGAS_lstring & in_key,
                                                          const GALGAS_lsint & in_idx
                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_item (in_item),
mAttribute_key (in_key),
mAttribute_idx (in_idx) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_TvarPath::isValid (void) const {
  return mAttribute_item.isValid () && mAttribute_key.isValid () && mAttribute_idx.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_TvarPath::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_TvarPath (mAttribute_item, mAttribute_key, mAttribute_idx COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_TvarPath::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "item" ":" ;
  mAttribute_item.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "key" ":" ;
  mAttribute_key.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "idx" ":" ;
  mAttribute_idx.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_TvarPath::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_TvarPath * operand = (cCollectionElement_TvarPath *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_item.objectCompare (operand->mAttribute_item) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_key.objectCompare (operand->mAttribute_key) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_idx.objectCompare (operand->mAttribute_idx) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath::GALGAS_TvarPath (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath::GALGAS_TvarPath (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_TvarPath result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_lstring & inOperand1,
                                                            const GALGAS_lsint & inOperand2
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_TvarPath result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_TvarPath::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                 const GALGAS_lstring & in_item,
                                                 const GALGAS_lstring & in_key,
                                                 const GALGAS_lsint & in_idx
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_TvarPath * p = NULL ;
  macroMyNew (p, cCollectionElement_TvarPath (in_item,
                                                 in_key,
                                                 in_idx COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::addAssign_operation (const GALGAS_lstring & inOperand0,
                                           const GALGAS_lstring & inOperand1,
                                           const GALGAS_lsint & inOperand2
                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TvarPath (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::modifier_prependValue (GALGAS_lstring inOperand0,
                                             GALGAS_lstring inOperand1,
                                             GALGAS_lsint inOperand2
                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_TvarPath (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::modifier_popFirst (GALGAS_lstring & outOperand0,
                                         GALGAS_lstring & outOperand1,
                                         GALGAS_lsint & outOperand2,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    outOperand0 = p->mAttribute_item ;
    outOperand1 = p->mAttribute_key ;
    outOperand2 = p->mAttribute_idx ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::modifier_popLast (GALGAS_lstring & outOperand0,
                                        GALGAS_lstring & outOperand1,
                                        GALGAS_lsint & outOperand2,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    outOperand0 = p->mAttribute_item ;
    outOperand1 = p->mAttribute_key ;
    outOperand2 = p->mAttribute_idx ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::method_first (GALGAS_lstring & outOperand0,
                                    GALGAS_lstring & outOperand1,
                                    GALGAS_lsint & outOperand2,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    outOperand0 = p->mAttribute_item ;
    outOperand1 = p->mAttribute_key ;
    outOperand2 = p->mAttribute_idx ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::method_last (GALGAS_lstring & outOperand0,
                                   GALGAS_lstring & outOperand1,
                                   GALGAS_lsint & outOperand2,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    outOperand0 = p->mAttribute_item ;
    outOperand1 = p->mAttribute_key ;
    outOperand2 = p->mAttribute_idx ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::operator_concat (const GALGAS_TvarPath & inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_TvarPath result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                          const GALGAS_uint & inLength,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_TvarPath result = GALGAS_TvarPath::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_TvarPath result = GALGAS_TvarPath::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_TvarPath::dotAssign_operation (const GALGAS_TvarPath inOperand
                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_TvarPath::reader_itemAtIndex (const GALGAS_uint & inIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    result = p->mAttribute_item ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_TvarPath::reader_keyAtIndex (const GALGAS_uint & inIndex,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    result = p->mAttribute_key ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lsint GALGAS_TvarPath::reader_idxAtIndex (const GALGAS_uint & inIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_TvarPath * p = (cCollectionElement_TvarPath *) attributes.ptr () ;
  GALGAS_lsint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_TvarPath) ;
    result = p->mAttribute_idx ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_TvarPath::cEnumerator_TvarPath (const GALGAS_TvarPath & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_TvarPath::current_item (LOCATION_ARGS) const {
  const cCollectionElement_TvarPath * p = (const cCollectionElement_TvarPath *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TvarPath) ;
  return p->mAttribute_item ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_TvarPath::current_key (LOCATION_ARGS) const {
  const cCollectionElement_TvarPath * p = (const cCollectionElement_TvarPath *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TvarPath) ;
  return p->mAttribute_key ;
}

//---------------------------------------------------------------------------*

GALGAS_lsint cEnumerator_TvarPath::current_idx (LOCATION_ARGS) const {
  const cCollectionElement_TvarPath * p = (const cCollectionElement_TvarPath *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_TvarPath) ;
  return p->mAttribute_idx ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                              @TvarPath type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_TvarPath ("TvarPath",
                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_TvarPath::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_TvarPath ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_TvarPath::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_TvarPath (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_TvarPath GALGAS_TvarPath::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler,
                                                const GALGAS_location & inErrorLocation
                                                COMMA_LOCATION_ARGS) {
  GALGAS_TvarPath result ;
  const GALGAS_TvarPath * p = (const GALGAS_TvarPath *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_TvarPath *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "TvarPath", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'printPath'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_printPath (const GALGAS_TvarPath constinArgument_path,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @foreachInstructionForGeneration
  cEnumerator_TvarPath enumerator_10403 (constinArgument_path, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_10403.hasCurrentObject ()) {
    //-------- @messageInstructionForGeneration
    inCompiler->printMessage (enumerator_10403.current_item (HERE).reader_string (SOURCE_FILE_AT_LINE (406)) COMMA_SOURCE_FILE_AT_LINE (406)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_10403.current_key (HERE).reader_string (SOURCE_FILE_AT_LINE (407)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("[\"").operator_concat (enumerator_10403.current_key (HERE).reader_string (SOURCE_FILE_AT_LINE (408)) COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (GALGAS_string ("\"]") COMMA_SOURCE_FILE_AT_LINE (408)) COMMA_SOURCE_FILE_AT_LINE (408)) ;
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_10403.current_idx (HERE).reader_sint (SOURCE_FILE_AT_LINE (410)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (410)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("[").operator_concat (enumerator_10403.current_idx (HERE).mAttribute_sint.reader_string (SOURCE_FILE_AT_LINE (411)) COMMA_SOURCE_FILE_AT_LINE (411)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (411)) COMMA_SOURCE_FILE_AT_LINE (411)) ;
    }
    if (enumerator_10403.hasNextObject ()) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("::") COMMA_SOURCE_FILE_AT_LINE (413)) ;
    }
    enumerator_10403.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'searchField'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_searchField (GALGAS_TvarPath inArgument_variable,
                          const GALGAS_TfieldMap constinArgument_inTemplateFieldMap,
                          GALGAS_Ttype & outArgument_variableType,
                          GALGAS_Tvalue & outArgument_variableValue,
                          GALGAS_location & outArgument_variableLocation,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_variableType.drop () ; // Release 'out' argument
  outArgument_variableValue.drop () ; // Release 'out' argument
  outArgument_variableLocation.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_field ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_key ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint var_idx ;
  //-------- @assignmentInstructionForGeneration
  outArgument_variableLocation = inCompiler->here () ;
  { //-------- @modifierCallInstructionForGeneration
  inArgument_variable.modifier_popFirst (var_field, var_key, var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (430)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @methodCallInstructionForGeneration
  constinArgument_inTemplateFieldMap.method_searchKey (var_field, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (431)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inTemplateFieldMap.reader_hasKey (var_field.reader_string (SOURCE_FILE_AT_LINE (432)) COMMA_SOURCE_FILE_AT_LINE (432)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_variableLocation = constinArgument_inTemplateFieldMap.reader_locationForKey (var_field.reader_string (SOURCE_FILE_AT_LINE (433)), inCompiler COMMA_SOURCE_FILE_AT_LINE (433)) ;
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (435)).objectCompare (GALGAS_string::makeEmptyString ())).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (435)))) COMMA_SOURCE_FILE_AT_LINE (435)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_TfieldMap var_mapMap = outArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (436)) ;
    //-------- @methodCallInstructionForGeneration
    var_mapMap.method_searchKey (var_key, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (437)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = var_mapMap.reader_hasKey (var_key.reader_string (SOURCE_FILE_AT_LINE (438)) COMMA_SOURCE_FILE_AT_LINE (438)).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @assignmentInstructionForGeneration
      outArgument_variableLocation = var_mapMap.reader_locationForKey (var_key.reader_string (SOURCE_FILE_AT_LINE (439)), inCompiler COMMA_SOURCE_FILE_AT_LINE (439)) ;
    }
  }else if (kBoolFalse == test_1) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (441)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (441)))).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (441)))) COMMA_SOURCE_FILE_AT_LINE (441)).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_TfieldMapList var_mapList = outArgument_variableValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (442)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_variableValue.mAttribute_mStructValue = var_mapList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (443)), inCompiler COMMA_SOURCE_FILE_AT_LINE (443)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_variableType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (444)) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, inArgument_variable.reader_length (SOURCE_FILE_AT_LINE (446)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (447)))).boolEnum () ;
    if (kBoolTrue == test_5) {
      { //-------- @routineCallInstructionForGeneration
      routine_searchField (inArgument_variable, outArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (448)), outArgument_variableType, outArgument_variableValue, outArgument_variableLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (448)) ;
      } //-------- @routineCallInstructionForGeneration
    }else if (kBoolFalse == test_5) {
      //-------- @assignmentInstructionForGeneration
      outArgument_variableLocation = inCompiler->here () ;
      //-------- @errorInstructionForGeneration
      GALGAS_location location_6 (var_field.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("struct variable expected") COMMA_SOURCE_FILE_AT_LINE (451)) ;
      outArgument_variableValue.drop () ; // Release error dropped variable
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'searchFieldIfExists'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_searchFieldIfExists (GALGAS_TvarPath inArgument_variable,
                                  const GALGAS_TfieldMap constinArgument_inTemplateFieldMap,
                                  GALGAS_Ttype & outArgument_variableType,
                                  GALGAS_Tvalue & outArgument_variableValue,
                                  GALGAS_bool & outArgument_found,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_variableType.drop () ; // Release 'out' argument
  outArgument_variableValue.drop () ; // Release 'out' argument
  outArgument_found.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_field ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_key ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint var_idx ;
  { //-------- @modifierCallInstructionForGeneration
  inArgument_variable.modifier_popFirst (var_field, var_key, var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (468)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inTemplateFieldMap.reader_hasKey (var_field.reader_string (SOURCE_FILE_AT_LINE (470)) COMMA_SOURCE_FILE_AT_LINE (470)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @methodCallInstructionForGeneration
    constinArgument_inTemplateFieldMap.method_searchKey (var_field, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (471)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (472)).objectCompare (GALGAS_string::makeEmptyString ())).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (472)))) COMMA_SOURCE_FILE_AT_LINE (472)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = outArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (473)).reader_hasKey (var_key.reader_string (SOURCE_FILE_AT_LINE (473)) COMMA_SOURCE_FILE_AT_LINE (473)).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @methodCallInstructionForGeneration
        outArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (474)).method_searchKey (var_key, outArgument_variableType, outArgument_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (474)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        outArgument_found = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_2) {
        //-------- @assignmentInstructionForGeneration
        outArgument_found = GALGAS_bool (false) ;
      }
    }else if (kBoolFalse == test_1) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (479)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (479)))).operator_and (GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (479)))) COMMA_SOURCE_FILE_AT_LINE (479)).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = GALGAS_bool (kIsStrictInf, var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (480)).objectCompare (outArgument_variableValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (480)).reader_length (SOURCE_FILE_AT_LINE (480)))).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_TfieldMapList var_mapList = outArgument_variableValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (481)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_variableValue.mAttribute_mStructValue = var_mapList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (482)), inCompiler COMMA_SOURCE_FILE_AT_LINE (482)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_variableType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (483)) ;
          //-------- @assignmentInstructionForGeneration
          outArgument_found = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_4) {
          //-------- @assignmentInstructionForGeneration
          outArgument_found = GALGAS_bool (false) ;
        }
      }else if (kBoolFalse == test_3) {
        //-------- @assignmentInstructionForGeneration
        outArgument_found = GALGAS_bool (true) ;
      }
    }
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    outArgument_variableType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (492)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_variableValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (493)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_found = GALGAS_bool (false) ;
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, inArgument_variable.reader_length (SOURCE_FILE_AT_LINE (496)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (outArgument_found COMMA_SOURCE_FILE_AT_LINE (496)).boolEnum () ;
  if (kBoolTrue == test_5) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, outArgument_variableType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (497)))).boolEnum () ;
    if (kBoolTrue == test_6) {
      { //-------- @routineCallInstructionForGeneration
      routine_searchFieldIfExists (inArgument_variable, outArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (498)), outArgument_variableType, outArgument_variableValue, outArgument_found, inCompiler COMMA_SOURCE_FILE_AT_LINE (498)) ;
      } //-------- @routineCallInstructionForGeneration
    }else if (kBoolFalse == test_6) {
      //-------- @assignmentInstructionForGeneration
      outArgument_found = GALGAS_bool (false) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//             Category Reader '@Ttype messageGoilTemplateType'              *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_messageGoilTemplateType (const GALGAS_Ttype & inObject,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_result ; // Returned variable
  //------- @switchInstructionForGeneration
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_Ttype temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_boolType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("bool") ;
      } break ;
    case GALGAS_Ttype::kEnum_intType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("int") ;
      } break ;
    case GALGAS_Ttype::kEnum_floatType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("float") ;
      } break ;
    case GALGAS_Ttype::kEnum_stringType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("string") ;
      } break ;
    case GALGAS_Ttype::kEnum_listType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("list") ;
      } break ;
    case GALGAS_Ttype::kEnum_mapType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("map") ;
      } break ;
    case GALGAS_Ttype::kEnum_structType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("struct") ;
      } break ;
    case GALGAS_Ttype::kEnum_enumType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("enum") ;
      } break ;
    case GALGAS_Ttype::kEnum_functionType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("function") ;
      } break ;
    case GALGAS_Ttype::kEnum_unconstructedType: {
      //-------- @assignmentInstructionForGeneration
      result_result = GALGAS_string ("unconstructed") ;
      } break ;
    }
  }
//---
  return result_result ;
}




//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


