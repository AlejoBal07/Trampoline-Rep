//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'template_expression_parser.h'                     *
//                    Generated by version version 2.3.4                     *
//                       may 24th, 2012, at 16h5'16"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef template_expression_parser_ENTITIES_DEFINED
#define template_expression_parser_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "template_scanner.h"

//---------------------------------------------------------------------------*

#include "template_invocation.h"
#include "goil_routines.h"
#include "goil_basic_types.h"
#include "template_semantics.h"
#include "systemConfig.h"
#include "implementation_types.h"
#include "goil_types_root.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS__32_stringlist_2E_element ;
class GALGAS_TenumationList ;
class GALGAS_TenumationList_2E_element ;
class GALGAS_TexpressionList ;
class GALGAS_TexpressionList_2E_element ;
class GALGAS_TfieldMap ;
class GALGAS_TfieldMap_2E_element ;
class GALGAS_TfieldMapList ;
class GALGAS_TfieldMapList_2E_element ;
class GALGAS_Tfunction ;
class GALGAS_Ttype ;
class GALGAS_TtypeList ;
class GALGAS_TtypeList_2E_element ;
class GALGAS_Tvalue ;
class GALGAS_TvarPath ;
class GALGAS_TvarPath_2E_element ;
class GALGAS_application ;
class GALGAS_applicationDefinition ;
class GALGAS_attributeRange ;
class GALGAS_auto ;
class GALGAS_autostart_5F_false ;
class GALGAS_autostart_5F_obj ;
class GALGAS_autostart_5F_void ;
class GALGAS_binaryset ;
class GALGAS_bool ;
class GALGAS_boolAttribute ;
class GALGAS_bool_5F_t ;
class GALGAS_char ;
class GALGAS_data ;
class GALGAS_dataType ;
class GALGAS_double ;
class GALGAS_enumAttribute ;
class GALGAS_enumValues ;
class GALGAS_enumValues_2E_element ;
class GALGAS_filewrapper ;
class GALGAS_floatAttributeMinMax ;
class GALGAS_floatAttributeSet ;
class GALGAS_floatList ;
class GALGAS_floatList_2E_element ;
class GALGAS_float_5F_class ;
class GALGAS_function ;
class GALGAS_functionlist ;
class GALGAS_functionlist_2E_element ;
class GALGAS_ident_5F_list ;
class GALGAS_ident_5F_list_2E_element ;
class GALGAS_ident_5F_list_5F_map ;
class GALGAS_ident_5F_list_5F_map_2E_element ;
class GALGAS_identifierList ;
class GALGAS_identifierList_2E_element ;
class GALGAS_identifierMap ;
class GALGAS_identifierMap_2E_element ;
class GALGAS_impAutoDefaultType ;
class GALGAS_impBoolType ;
class GALGAS_impEnumType ;
class GALGAS_impRangedType ;
class GALGAS_impStructType ;
class GALGAS_impType ;
class GALGAS_impVoid ;
class GALGAS_implementation ;
class GALGAS_implementationMap ;
class GALGAS_implementationMap_2E_element ;
class GALGAS_implementationObject ;
class GALGAS_implementationObjectMap ;
class GALGAS_implementationObjectMap_2E_element ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_location ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringMap ;
class GALGAS_lstringMap_2E_element ;
class GALGAS_lstringlist ;
class GALGAS_lstringlist_2E_element ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_luintlist_2E_element ;
class GALGAS_multipleAttribute ;
class GALGAS_noRange ;
class GALGAS_numberList ;
class GALGAS_numberList_2E_element ;
class GALGAS_object ;
class GALGAS_objectAttributes ;
class GALGAS_objectKind ;
class GALGAS_objectKindMap ;
class GALGAS_objectKindMap_2E_element ;
class GALGAS_object_5F_t ;
class GALGAS_objectlist ;
class GALGAS_objectlist_2E_element ;
class GALGAS_objectsMap ;
class GALGAS_objectsMap_2E_element ;
class GALGAS_oil_5F_obj ;
class GALGAS_prefix_5F_map ;
class GALGAS_prefix_5F_map_2E_element ;
class GALGAS_range ;
class GALGAS_refType ;
class GALGAS_sint ;
class GALGAS_sint_33__32_AttributeMinMax ;
class GALGAS_sint_33__32_AttributeSet ;
class GALGAS_sint_33__32_List ;
class GALGAS_sint_33__32_List_2E_element ;
class GALGAS_sint_33__32__5F_class ;
class GALGAS_sint_36__34_ ;
class GALGAS_sint_36__34_AttributeMinMax ;
class GALGAS_sint_36__34_AttributeSet ;
class GALGAS_sint_36__34_List ;
class GALGAS_sint_36__34_List_2E_element ;
class GALGAS_sint_36__34__5F_class ;
class GALGAS_string ;
class GALGAS_stringAttribute ;
class GALGAS_stringMap ;
class GALGAS_stringMap_2E_element ;
class GALGAS_string_5F_class ;
class GALGAS_stringlist ;
class GALGAS_stringlist_2E_element ;
class GALGAS_stringset ;
class GALGAS_stringset_5F_map ;
class GALGAS_stringset_5F_map_2E_element ;
class GALGAS_structAttribute ;
class GALGAS_type ;
class GALGAS_typelist ;
class GALGAS_typelist_2E_element ;
class GALGAS_uint ;
class GALGAS_uint_33__32_AttributeMinMax ;
class GALGAS_uint_33__32_AttributeSet ;
class GALGAS_uint_33__32_List ;
class GALGAS_uint_33__32_List_2E_element ;
class GALGAS_uint_33__32__5F_class ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_AttributeMinMax ;
class GALGAS_uint_36__34_AttributeSet ;
class GALGAS_uint_36__34_List ;
class GALGAS_uint_36__34_List_2E_element ;
class GALGAS_uint_36__34__5F_class ;
class GALGAS_uint_36__34_list ;
class GALGAS_uint_36__34_list_2E_element ;
class GALGAS_uintlist ;
class GALGAS_uintlist_2E_element ;
class GALGAS_void ;
class GALGAS_void_5F_bool_5F_t ;
class GALGAS_void_5F_float_5F_class ;
class GALGAS_void_5F_sint_33__32__5F_class ;
class GALGAS_void_5F_sint_36__34__5F_class ;
class GALGAS_void_5F_string_5F_class ;
class GALGAS_void_5F_uint_33__32__5F_class ;
class GALGAS_void_5F_uint_36__34__5F_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchAndOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchAndOperatorForTemplate (const GALGAS_Ttype constinArgument0,
                                          const GALGAS_Ttype constinArgument1,
                                          GALGAS_Ttype & outArgument2,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchOrOperatorForTemplate'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchOrOperatorForTemplate (const GALGAS_Ttype constinArgument0,
                                         const GALGAS_Ttype constinArgument1,
                                         GALGAS_Ttype & outArgument2,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'matchXorOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_matchXorOperatorForTemplate (const GALGAS_Ttype constinArgument0,
                                          const GALGAS_Ttype constinArgument1,
                                          GALGAS_Ttype & outArgument2,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkNotOperatorForTemplate'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkNotOperatorForTemplate (const GALGAS_Ttype constinArgument0,
                                          GALGAS_Ttype & outArgument1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'checkBitComplementOperatorForTemplate'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBitComplementOperatorForTemplate (const GALGAS_Ttype constinArgument0,
                                                    GALGAS_Ttype & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'comparison_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                      const GALGAS_Ttype constinArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Routine 'magnitude_comparison_types_checkForTemplate'           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_magnitude_5F_comparison_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                                   const GALGAS_Ttype constinArgument1,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'left_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_left_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                         const GALGAS_Ttype constinArgument1,
                                                         GALGAS_Ttype & outArgument2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'right_shift_types_checkForTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_right_5F_shift_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                          const GALGAS_Ttype constinArgument1,
                                                          GALGAS_Ttype & outArgument2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'addition_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addition_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                    const GALGAS_Ttype constinArgument1,
                                                    GALGAS_Ttype & outArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'concatenation_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_concatenation_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                         const GALGAS_Ttype constinArgument1,
                                                         GALGAS_Ttype & outArgument2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'substraction_types_checkForTemplate'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_substraction_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                        const GALGAS_Ttype constinArgument1,
                                                        GALGAS_Ttype & outArgument2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'multiply_types_checkForTemplate'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_multiply_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                    const GALGAS_Ttype constinArgument1,
                                                    GALGAS_Ttype & outArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'divide_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_divide_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                  const GALGAS_Ttype constinArgument1,
                                                  GALGAS_Ttype & outArgument2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'modulo_types_checkForTemplate'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modulo_5F_types_5F_checkForTemplate (const GALGAS_Ttype constinArgument0,
                                                  const GALGAS_Ttype constinArgument1,
                                                  GALGAS_Ttype & outArgument2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'argumentListSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string function_argumentListSignature (const GALGAS_TexpressionList & constinArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'checkInvocationHasNoArgument'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasNoArgument (const GALGAS_Ttype constinArgument0,
                                           const GALGAS_lstring constinArgument1,
                                           const GALGAS_TexpressionList constinArgument2,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'checkInvocationHasArguments'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkInvocationHasArguments (const GALGAS_Ttype constinArgument0,
                                          const GALGAS_lstring constinArgument1,
                                          const GALGAS_TexpressionList constinArgument2,
                                          const GALGAS_Ttype constinArgument3,
                                          const GALGAS_uint constinArgument4,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'templateMethodInvocation'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateMethodInvocation (const GALGAS_Ttype constinArgument0,
                                       const GALGAS_Tvalue constinArgument1,
                                       const GALGAS_lstring constinArgument2,
                                       const GALGAS_TexpressionList constinArgument3,
                                       GALGAS_Ttype & outArgument4,
                                       GALGAS_Tvalue & outArgument5,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'typeError'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_typeError (const GALGAS_lstring constinArgument0,
                        const GALGAS_type constinArgument1,
                        const GALGAS_string constinArgument2,
                        const GALGAS_uint constinArgument3,
                        C_Compiler * inCompiler
                        COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Parser class 'template_expression_parser' declaration           *
//                                                                           *
//---------------------------------------------------------------------------*

class cParser_template_5F_expression_5F_parser {
//--- Virtual destructor
  public : virtual ~ cParser_template_5F_expression_5F_parser (void) {}

//--- Non terminal declarations
  protected : virtual void nt_expression_ (const GALGAS_string constinArgument0,
                                           const GALGAS_string constinArgument1,
                                           const GALGAS_string constinArgument2,
                                           const GALGAS_TfieldMap constinArgument3,
                                           GALGAS_Tvalue & outArgument4,
                                           GALGAS_Ttype & outArgument5,
                                           C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_expression_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_factor_ (const GALGAS_string constinArgument0,
                                       const GALGAS_string constinArgument1,
                                       const GALGAS_string constinArgument2,
                                       const GALGAS_TfieldMap constinArgument3,
                                       GALGAS_Tvalue & outArgument4,
                                       GALGAS_Ttype & outArgument5,
                                       C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_factor_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_ (const GALGAS_string constinArgument0,
                                                   const GALGAS_string constinArgument1,
                                                   const GALGAS_string constinArgument2,
                                                   const GALGAS_TfieldMap constinArgument3,
                                                   GALGAS_Tvalue & outArgument4,
                                                   GALGAS_Ttype & outArgument5,
                                                   C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_factor_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_ (const GALGAS_string constinArgument0,
                                                 const GALGAS_string constinArgument1,
                                                 const GALGAS_string constinArgument2,
                                                 const GALGAS_TfieldMap constinArgument3,
                                                 GALGAS_Tvalue & outArgument4,
                                                 GALGAS_Ttype & outArgument5,
                                                 C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_relation_5F_term_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_ (const GALGAS_string constinArgument0,
                                                     const GALGAS_string constinArgument1,
                                                     const GALGAS_string constinArgument2,
                                                     const GALGAS_TfieldMap constinArgument3,
                                                     GALGAS_Tvalue & outArgument4,
                                                     GALGAS_Ttype & outArgument5,
                                                     C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_simple_5F_expression_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_term_ (const GALGAS_string constinArgument0,
                                     const GALGAS_string constinArgument1,
                                     const GALGAS_string constinArgument2,
                                     const GALGAS_TfieldMap constinArgument3,
                                     GALGAS_Tvalue & outArgument4,
                                     GALGAS_Ttype & outArgument5,
                                     C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_term_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_variable_ (const GALGAS_string constinArgument0,
                                         const GALGAS_string constinArgument1,
                                         const GALGAS_string constinArgument2,
                                         const GALGAS_TfieldMap constinArgument3,
                                         GALGAS_TvarPath & outArgument4,
                                         C_Lexique_template_5F_scanner * inLexique) = 0 ;

  protected : virtual void nt_variable_parse (C_Lexique_template_5F_scanner * inLexique) = 0 ;


//--- Rule declarations
  protected : void rule_template_5F_expression_5F_parser_expression_i0_ (const GALGAS_string constinArgument0,
                                                                         const GALGAS_string constinArgument1,
                                                                         const GALGAS_string constinArgument2,
                                                                         const GALGAS_TfieldMap constinArgument3,
                                                                         GALGAS_Tvalue & outArgument4,
                                                                         GALGAS_Ttype & outArgument5,
                                                                         C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_expression_i0_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_relation_5F_term_i1_ (const GALGAS_string constinArgument0,
                                                                               const GALGAS_string constinArgument1,
                                                                               const GALGAS_string constinArgument2,
                                                                               const GALGAS_TfieldMap constinArgument3,
                                                                               GALGAS_Tvalue & outArgument4,
                                                                               GALGAS_Ttype & outArgument5,
                                                                               C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_relation_5F_term_i1_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_relation_5F_factor_i2_ (const GALGAS_string constinArgument0,
                                                                                 const GALGAS_string constinArgument1,
                                                                                 const GALGAS_string constinArgument2,
                                                                                 const GALGAS_TfieldMap constinArgument3,
                                                                                 GALGAS_Tvalue & outArgument4,
                                                                                 GALGAS_Ttype & outArgument5,
                                                                                 C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_relation_5F_factor_i2_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_simple_5F_expression_i3_ (const GALGAS_string constinArgument0,
                                                                                   const GALGAS_string constinArgument1,
                                                                                   const GALGAS_string constinArgument2,
                                                                                   const GALGAS_TfieldMap constinArgument3,
                                                                                   GALGAS_Tvalue & outArgument4,
                                                                                   GALGAS_Ttype & outArgument5,
                                                                                   C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_simple_5F_expression_i3_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_term_i4_ (const GALGAS_string constinArgument0,
                                                                   const GALGAS_string constinArgument1,
                                                                   const GALGAS_string constinArgument2,
                                                                   const GALGAS_TfieldMap constinArgument3,
                                                                   GALGAS_Tvalue & outArgument4,
                                                                   GALGAS_Ttype & outArgument5,
                                                                   C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_term_i4_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i5_ (const GALGAS_string constinArgument0,
                                                                     const GALGAS_string constinArgument1,
                                                                     const GALGAS_string constinArgument2,
                                                                     const GALGAS_TfieldMap constinArgument3,
                                                                     GALGAS_Tvalue & outArgument4,
                                                                     GALGAS_Ttype & outArgument5,
                                                                     C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i5_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i6_ (const GALGAS_string constinArgument0,
                                                                     const GALGAS_string constinArgument1,
                                                                     const GALGAS_string constinArgument2,
                                                                     const GALGAS_TfieldMap constinArgument3,
                                                                     GALGAS_Tvalue & outArgument4,
                                                                     GALGAS_Ttype & outArgument5,
                                                                     C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i6_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i7_ (const GALGAS_string constinArgument0,
                                                                     const GALGAS_string constinArgument1,
                                                                     const GALGAS_string constinArgument2,
                                                                     const GALGAS_TfieldMap constinArgument3,
                                                                     GALGAS_Tvalue & outArgument4,
                                                                     GALGAS_Ttype & outArgument5,
                                                                     C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i7_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i8_ (const GALGAS_string constinArgument0,
                                                                     const GALGAS_string constinArgument1,
                                                                     const GALGAS_string constinArgument2,
                                                                     const GALGAS_TfieldMap constinArgument3,
                                                                     GALGAS_Tvalue & outArgument4,
                                                                     GALGAS_Ttype & outArgument5,
                                                                     C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i8_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i9_ (const GALGAS_string constinArgument0,
                                                                     const GALGAS_string constinArgument1,
                                                                     const GALGAS_string constinArgument2,
                                                                     const GALGAS_TfieldMap constinArgument3,
                                                                     GALGAS_Tvalue & outArgument4,
                                                                     GALGAS_Ttype & outArgument5,
                                                                     C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i9_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i10_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i10_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i11_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i11_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i12_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i12_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i13_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i13_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i14_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i14_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i15_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i15_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i16_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i16_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i17_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i17_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i18_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i18_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i19_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i19_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i20_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i20_parse (C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i21_ (const GALGAS_string constinArgument0,
                                                                      const GALGAS_string constinArgument1,
                                                                      const GALGAS_string constinArgument2,
                                                                      const GALGAS_TfieldMap constinArgument3,
                                                                      GALGAS_Tvalue & outArgument4,
                                                                      GALGAS_Ttype & outArgument5,
                                                                      C_Lexique_template_5F_scanner * inLexique) ;

  protected : void rule_template_5F_expression_5F_parser_factor_i21_parse (C_Lexique_template_5F_scanner * inLexique) ;



//--- Select methods
  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_0 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_1 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_2 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_3 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_4 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_5 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_6 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_7 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_8 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_9 (C_Lexique_template_5F_scanner *) = 0 ;

  protected : virtual PMSInt32 select_template_5F_expression_5F_parser_10 (C_Lexique_template_5F_scanner *) = 0 ;


} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
