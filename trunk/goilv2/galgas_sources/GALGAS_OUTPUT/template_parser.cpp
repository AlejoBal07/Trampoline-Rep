//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'template_parser.cpp'                         *
//                        Generated by version 2.5.4                         *
//                     january 16th, 2014, at 12h14'25"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "template_parser.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "goil_options.h"
#include "template_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "template_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setVariableInPath'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setVariableInPath (GALGAS_TvarPath inArgument_path,
                                GALGAS_TfieldMap & ioArgument_ioFieldMap,
                                const GALGAS_Ttype constinArgument_expressionType,
                                const GALGAS_Tvalue constinArgument_enumeratedValue,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lstring var_varName ;
  GALGAS_lstring var_key ;
  GALGAS_lsint var_idx ;
  {
  inArgument_path.modifier_popFirst (var_varName, var_key, var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (1071)) ;
  }
  const enumGalgasBool test_0 = ioArgument_ioFieldMap.reader_hasKey (var_varName.reader_string (SOURCE_FILE_AT_LINE (1073)) COMMA_SOURCE_FILE_AT_LINE (1073)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_Ttype var_fieldType ;
    GALGAS_Tvalue var_fieldValue ;
    ioArgument_ioFieldMap.method_searchKey (var_varName, var_fieldType, var_fieldValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1076)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1077)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (1079)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_TfieldMap var_items = var_fieldValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1081)) ;
        const enumGalgasBool test_3 = var_items.reader_hasKey (var_key.reader_string (SOURCE_FILE_AT_LINE (1082)) COMMA_SOURCE_FILE_AT_LINE (1082)).boolEnum () ;
        if (kBoolTrue == test_3) {
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1083)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_4) {
            {
            var_items.modifier_setMTypeForKey (constinArgument_expressionType, var_key.reader_string (SOURCE_FILE_AT_LINE (1084)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1084)) ;
            }
            {
            var_items.modifier_setMValueForKey (constinArgument_enumeratedValue, var_key.reader_string (SOURCE_FILE_AT_LINE (1085)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1085)) ;
            }
          }else if (kBoolFalse == test_4) {
            GALGAS_Ttype var_itemType ;
            GALGAS_Tvalue var_itemValue ;
            var_items.method_searchKey (var_key, var_itemType, var_itemValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1089)) ;
            GALGAS_TfieldMap var_nextFieldMap = var_itemValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1090)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1091)) ;
            }
            var_itemValue.mAttribute_mStructValue = var_nextFieldMap ;
            var_itemType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1093)) ;
            {
            var_items.modifier_setMTypeForKey (var_itemType, var_key.reader_string (SOURCE_FILE_AT_LINE (1094)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1094)) ;
            }
            {
            var_items.modifier_setMValueForKey (var_itemValue, var_key.reader_string (SOURCE_FILE_AT_LINE (1095)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1095)) ;
            }
          }
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1098)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            var_items.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1099)) ;
            }
          }else if (kBoolFalse == test_5) {
            GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1101)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1102)) ;
            }
            {
            var_items.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1103)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1103)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1103)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1103)) ;
            }
          }
        }
        var_fieldValue.mAttribute_mStructValue = var_items ;
        {
        ioArgument_ioFieldMap.modifier_setMTypeForKey (var_fieldType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1107)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1107)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1108)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1108)) ;
        }
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1110)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_6) {
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1112)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1112)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1113)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1113)) ;
          }
        }else if (kBoolFalse == test_6) {
          GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1116)) ;
          {
          routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1117)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1118)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1118)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1118)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1119)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1119)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1119)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1119)) ;
          }
        }
      }
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1122)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (1124)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1124)))).boolEnum () ;
        if (kBoolTrue == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1125)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_9) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, constinArgument_expressionType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1126)))).boolEnum () ;
            if (kBoolTrue == test_10) {
              GALGAS_TfieldMapList var_theList = var_fieldValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (1128)) ;
              {
              var_theList.modifier_setMMapAtIndex (constinArgument_enumeratedValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1129)), var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) ;
              }
              var_fieldValue.mAttribute_mMapListValue = var_theList ;
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_11 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_11, GALGAS_string ("struct expression expected") COMMA_SOURCE_FILE_AT_LINE (1133)) ;
            }
          }else if (kBoolFalse == test_9) {
            GALGAS_TfieldMapList var_theList = var_fieldValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (1137)) ;
            GALGAS_TfieldMap var_nextFieldMap = var_theList.reader_mMapAtIndex (var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1139)) ;
            }
            {
            var_theList.modifier_setMMapAtIndex (var_nextFieldMap, var_idx.mAttribute_sint.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1140)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1140)) ;
            }
            var_fieldValue.mAttribute_mMapListValue = var_theList ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMTypeForKey (var_fieldType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1143)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1143)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1144)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1144)) ;
          }
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1147)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_12) {
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1149)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1149)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1150)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1150)) ;
            }
          }else if (kBoolFalse == test_12) {
            GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1153)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1154)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1155)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1155)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1155)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1156)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1156)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1156)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1156)) ;
            }
          }
        }
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_fieldType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1159)))).boolEnum () ;
        if (kBoolTrue == test_13) {
          const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1160)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_14) {
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1162)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1162)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1163)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1163)) ;
            }
          }else if (kBoolFalse == test_14) {
            GALGAS_TfieldMap var_nextFieldMap = var_fieldValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1166)) ;
            {
            routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1167)) ;
            }
            var_fieldValue.mAttribute_mStructValue = var_nextFieldMap ;
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (var_fieldValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1170)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1170)) ;
            }
          }
        }else if (kBoolFalse == test_13) {
          const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (1173)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_15) {
            const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (1174)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1174)))).boolEnum () ;
            if (kBoolTrue == test_16) {
              const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1175)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
              if (kBoolTrue == test_17) {
                {
                ioArgument_ioFieldMap.modifier_setMTypeForKey (constinArgument_expressionType, var_varName.reader_string (SOURCE_FILE_AT_LINE (1177)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1177)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMValueForKey (constinArgument_enumeratedValue, var_varName.reader_string (SOURCE_FILE_AT_LINE (1178)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1178)) ;
                }
              }else if (kBoolFalse == test_17) {
                GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1180)) ;
                {
                routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1181)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1182)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1182)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1182)) ;
                }
                {
                ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1183)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1183)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1183)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1183)) ;
                }
              }
            }else if (kBoolFalse == test_16) {
              GALGAS_location location_18 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_18, GALGAS_string ("A list must exist before setting one of its item") COMMA_SOURCE_FILE_AT_LINE (1187)) ;
            }
          }else if (kBoolFalse == test_15) {
            GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1191)) ;
            const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1192)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
            if (kBoolTrue == test_19) {
              {
              var_newMap.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1193)) ;
              }
            }else if (kBoolFalse == test_19) {
              GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1195)) ;
              {
              routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1196)) ;
              }
              {
              var_newMap.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1197)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1197)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1197)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1197)) ;
              }
            }
            {
            ioArgument_ioFieldMap.modifier_setMTypeForKey (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1199)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1199)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1199)) ;
            }
            {
            ioArgument_ioFieldMap.modifier_setMValueForKey (function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1200)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1200)), var_varName.reader_string (SOURCE_FILE_AT_LINE (1200)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1200)) ;
            }
          }
        }
      }
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, inArgument_path.reader_length (SOURCE_FILE_AT_LINE (1205)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_20) {
      const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (1206)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_21) {
        const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (1207)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1207)))).boolEnum () ;
        if (kBoolTrue == test_22) {
          {
          ioArgument_ioFieldMap.modifier_insertKey (var_varName, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1208)) ;
          }
        }else if (kBoolFalse == test_22) {
          GALGAS_location location_23 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_23, GALGAS_string ("A list must exist before setting one of its item") COMMA_SOURCE_FILE_AT_LINE (1211)) ;
        }
      }else if (kBoolFalse == test_21) {
        GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1214)) ;
        {
        var_newMap.modifier_insertKey (var_key, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1215)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1216)), function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1216)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1216)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1216)) ;
        }
      }
    }else if (kBoolFalse == test_20) {
      const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, var_key.reader_string (SOURCE_FILE_AT_LINE (1219)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_24) {
        const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, var_idx.reader_sint (SOURCE_FILE_AT_LINE (1220)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1220)))).boolEnum () ;
        if (kBoolTrue == test_25) {
          GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1221)) ;
          {
          routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1222)) ;
          }
          {
          ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1223)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1223)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1223)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1223)) ;
          }
        }else if (kBoolFalse == test_25) {
          GALGAS_location location_26 (var_varName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_26, GALGAS_string ("A list must exist before setting one of its item") COMMA_SOURCE_FILE_AT_LINE (1226)) ;
        }
      }else if (kBoolFalse == test_24) {
        GALGAS_TfieldMap var_newMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1229)) ;
        GALGAS_TfieldMap var_nextFieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1230)) ;
        {
        routine_setVariableInPath (inArgument_path, var_nextFieldMap, constinArgument_expressionType, constinArgument_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1231)) ;
        }
        {
        var_newMap.modifier_insertKey (var_key, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1232)), function_valueWithStruct (var_nextFieldMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)) ;
        }
        {
        ioArgument_ioFieldMap.modifier_insertKey (var_varName, GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (1233)), function_valueWithMap (var_newMap, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1233)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1233)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1233)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'printVariable'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_printVariable (GALGAS_uint inArgument_indent,
                            const GALGAS_Ttype constinArgument_variableType,
                            const GALGAS_Tvalue constinArgument_variableValue,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  inArgument_indent = inArgument_indent.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1422)) ;
  GALGAS_string var_offset = GALGAS_string::constructor_stringWithSequenceOfCharacters (GALGAS_char (TO_UNICODE (32)), inArgument_indent COMMA_SOURCE_FILE_AT_LINE (1423)) ;
  if (constinArgument_variableType.isValid ()) {
    switch (constinArgument_variableType.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_boolType: {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_variableValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1426)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 1LL))).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->printMessage (var_offset.operator_concat (GALGAS_string ("true\n") COMMA_SOURCE_FILE_AT_LINE (1427)) COMMA_SOURCE_FILE_AT_LINE (1427)) ;
      }else if (kBoolFalse == test_0) {
        inCompiler->printMessage (var_offset.operator_concat (GALGAS_string ("false\n") COMMA_SOURCE_FILE_AT_LINE (1429)) COMMA_SOURCE_FILE_AT_LINE (1429)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_intType: {
      inCompiler->printMessage (var_offset.operator_concat (constinArgument_variableValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1432)).reader_string (SOURCE_FILE_AT_LINE (1432)) COMMA_SOURCE_FILE_AT_LINE (1432)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (1432)) COMMA_SOURCE_FILE_AT_LINE (1432)) ;
      } break ;
    case GALGAS_Ttype::kEnum_floatType: {
      inCompiler->printMessage (var_offset.operator_concat (constinArgument_variableValue.reader_mFloatValue (SOURCE_FILE_AT_LINE (1434)).reader_string (SOURCE_FILE_AT_LINE (1434)) COMMA_SOURCE_FILE_AT_LINE (1434)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (1434)) COMMA_SOURCE_FILE_AT_LINE (1434)) ;
      } break ;
    case GALGAS_Ttype::kEnum_stringType: {
      inCompiler->printMessage (var_offset.operator_concat (GALGAS_string ("\"") COMMA_SOURCE_FILE_AT_LINE (1436)).operator_concat (constinArgument_variableValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1436)) COMMA_SOURCE_FILE_AT_LINE (1436)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (1436)) COMMA_SOURCE_FILE_AT_LINE (1436)) ;
      } break ;
    case GALGAS_Ttype::kEnum_enumType: {
      inCompiler->printMessage (var_offset.operator_concat (constinArgument_variableValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1438)) COMMA_SOURCE_FILE_AT_LINE (1438)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (1438)) COMMA_SOURCE_FILE_AT_LINE (1438)) ;
      } break ;
    case GALGAS_Ttype::kEnum_listType: {
      cEnumerator_TfieldMapList enumerator_42624 (constinArgument_variableValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (1440)), kEnumeration_up) ;
      GALGAS_uint index_42594 ((PMUInt32) 0) ;
      while (enumerator_42624.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.operator_concat (GALGAS_string ("item at ") COMMA_SOURCE_FILE_AT_LINE (1441)).operator_concat (index_42594.reader_string (SOURCE_FILE_AT_LINE (1441)) COMMA_SOURCE_FILE_AT_LINE (1441)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (1441)) COMMA_SOURCE_FILE_AT_LINE (1441)) ;
        {
        routine_printVariable (inArgument_indent, GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1442)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (1442)), enumerator_42624.current_mMap (HERE), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)) COMMA_SOURCE_FILE_AT_LINE (1442)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)) ;
        }
        enumerator_42624.gotoNextObject () ;
        index_42594.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1440)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_mapType: {
      cEnumerator_TfieldMap enumerator_42900 (constinArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1445)), kEnumeration_up) ;
      while (enumerator_42900.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.operator_concat (enumerator_42900.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1446)) COMMA_SOURCE_FILE_AT_LINE (1446)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (1446)) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
        {
        routine_printVariable (inArgument_indent, enumerator_42900.current_mType (HERE), enumerator_42900.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1447)) ;
        }
        enumerator_42900.gotoNextObject () ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_structType: {
      cEnumerator_TfieldMap enumerator_43057 (constinArgument_variableValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1450)), kEnumeration_up) ;
      while (enumerator_43057.hasCurrentObject ()) {
        inCompiler->printMessage (var_offset.operator_concat (enumerator_43057.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (1451)) COMMA_SOURCE_FILE_AT_LINE (1451)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (1451)) COMMA_SOURCE_FILE_AT_LINE (1451)) ;
        {
        routine_printVariable (inArgument_indent, enumerator_43057.current_mType (HERE), enumerator_43057.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1452)) ;
        }
        enumerator_43057.gotoNextObject () ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                           @sortingKeyList type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_sortingKeyList ("sortingKeyList",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_sortingKeyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sortingKeyList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_sortingKeyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_sortingKeyList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_sortingKeyList result ;
  const GALGAS_sortingKeyList * p = (const GALGAS_sortingKeyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_sortingKeyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("sortingKeyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Class for element of '@sortingKeyList' list                *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_sortingKeyList : public cCollectionElement {
  public : GALGAS_sortingKeyList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_sortingKeyList (const GALGAS_lstring & in_key,
                                              const GALGAS_lsint & in_order
                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_sortingKeyList::cCollectionElement_sortingKeyList (const GALGAS_lstring & in_key,
                                                                      const GALGAS_lsint & in_order
                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_key, in_order) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_sortingKeyList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_sortingKeyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_sortingKeyList (mObject.mAttribute_key, mObject.mAttribute_order COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_sortingKeyList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "key" ":" ;
  mObject.mAttribute_key.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "order" ":" ;
  mObject.mAttribute_order.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_sortingKeyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_sortingKeyList * operand = (cCollectionElement_sortingKeyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_sortingKeyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList::GALGAS_sortingKeyList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList::GALGAS_sortingKeyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_sortingKeyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_lsint & inOperand1
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_sortingKeyList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_sortingKeyList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                       const GALGAS_lstring & in_key,
                                                       const GALGAS_lsint & in_order
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_sortingKeyList * p = NULL ;
  macroMyNew (p, cCollectionElement_sortingKeyList (in_key,
                                                    in_order COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                 const GALGAS_lsint & inOperand1
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_sortingKeyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                    const GALGAS_lsint inOperand1,
                                                    const GALGAS_uint inInsertionIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_sortingKeyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                    GALGAS_lsint & outOperand1,
                                                    const GALGAS_uint inRemoveIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
      outOperand0 = p->mObject.mAttribute_key ;
      outOperand1 = p->mObject.mAttribute_order ;
    }
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                               GALGAS_lsint & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    outOperand0 = p->mObject.mAttribute_key ;
    outOperand1 = p->mObject.mAttribute_order ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::modifier_popLast (GALGAS_lstring & outOperand0,
                                              GALGAS_lsint & outOperand1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    outOperand0 = p->mObject.mAttribute_key ;
    outOperand1 = p->mObject.mAttribute_order ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::method_first (GALGAS_lstring & outOperand0,
                                          GALGAS_lsint & outOperand1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    outOperand0 = p->mObject.mAttribute_key ;
    outOperand1 = p->mObject.mAttribute_order ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::method_last (GALGAS_lstring & outOperand0,
                                         GALGAS_lsint & outOperand1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    outOperand0 = p->mObject.mAttribute_key ;
    outOperand1 = p->mObject.mAttribute_order ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::operator_concat (const GALGAS_sortingKeyList & inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_sortingKeyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_sortingKeyList result = GALGAS_sortingKeyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList GALGAS_sortingKeyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_sortingKeyList result = GALGAS_sortingKeyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList::dotAssign_operation (const GALGAS_sortingKeyList inOperand
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_sortingKeyList::reader_keyAtIndex (const GALGAS_uint & inIndex,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    result = p->mObject.mAttribute_key ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lsint GALGAS_sortingKeyList::reader_orderAtIndex (const GALGAS_uint & inIndex,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_sortingKeyList * p = (cCollectionElement_sortingKeyList *) attributes.ptr () ;
  GALGAS_lsint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_sortingKeyList) ;
    result = p->mObject.mAttribute_order ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_sortingKeyList::cEnumerator_sortingKeyList (const GALGAS_sortingKeyList & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element cEnumerator_sortingKeyList::current (LOCATION_ARGS) const {
  const cCollectionElement_sortingKeyList * p = (const cCollectionElement_sortingKeyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_sortingKeyList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_sortingKeyList::current_key (LOCATION_ARGS) const {
  const cCollectionElement_sortingKeyList * p = (const cCollectionElement_sortingKeyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_sortingKeyList) ;
  return p->mObject.mAttribute_key ;
}

//---------------------------------------------------------------------------*

GALGAS_lsint cEnumerator_sortingKeyList::current_order (LOCATION_ARGS) const {
  const cCollectionElement_sortingKeyList * p = (const cCollectionElement_sortingKeyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_sortingKeyList) ;
  return p->mObject.mAttribute_order ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'structCompare'                          *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_sint function_structCompare (const GALGAS_TfieldMap & constinArgument_s_31_,
                                    const GALGAS_TfieldMap & constinArgument_s_32_,
                                    GALGAS_sortingKeyList inArgument_fieldList,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sint result_result ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, inArgument_fieldList.reader_length (SOURCE_FILE_AT_LINE (1493)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring var_field ;
    GALGAS_lsint var_order ;
    {
    inArgument_fieldList.modifier_popFirst (var_field, var_order, inCompiler COMMA_SOURCE_FILE_AT_LINE (1496)) ;
    }
    GALGAS_Ttype var_s_31_Type ;
    GALGAS_Tvalue var_s_31_Value ;
    constinArgument_s_31_.method_searchKey (var_field, var_s_31_Type, var_s_31_Value, inCompiler COMMA_SOURCE_FILE_AT_LINE (1499)) ;
    GALGAS_Ttype var_s_32_Type ;
    GALGAS_Tvalue var_s_32_Value ;
    constinArgument_s_32_.method_searchKey (var_field, var_s_32_Type, var_s_32_Value, inCompiler COMMA_SOURCE_FILE_AT_LINE (1502)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_s_31_Type.objectCompare (var_s_32_Type)).operator_and (GALGAS_bool (kIsEqual, var_s_31_Type.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (1503)))) COMMA_SOURCE_FILE_AT_LINE (1503)).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictInf, var_s_31_Value.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1505)).objectCompare (var_s_32_Value.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1505)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result_result = GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1507)).multiply_operation (var_order.reader_sint (SOURCE_FILE_AT_LINE (1507)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1507)) ;
      }else if (kBoolFalse == test_2) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_s_31_Value.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1509)).objectCompare (var_s_32_Value.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1509)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          result_result = GALGAS_sint ((PMSInt32) 1L).multiply_operation (var_order.reader_sint (SOURCE_FILE_AT_LINE (1511)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1511)) ;
        }else if (kBoolFalse == test_3) {
          result_result = function_structCompare (constinArgument_s_31_, constinArgument_s_32_, inArgument_fieldList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1514)) ;
        }
      }
    }else if (kBoolFalse == test_1) {
      GALGAS_location location_4 (var_field.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("unsigned sort key required") COMMA_SOURCE_FILE_AT_LINE (1518)) ;
      result_result.drop () ; // Release error dropped variable
    }
  }else if (kBoolFalse == test_0) {
    result_result = GALGAS_sint ((PMSInt32) 0L) ;
  }
//---
  return result_result ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_structCompare [4] = {
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_TfieldMap,
  & kTypeDescriptor_GALGAS_sortingKeyList,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_structCompare (C_Compiler * inCompiler,
                                                              const cObjectArray & inEffectiveParameterArray,
                                                              const GALGAS_location & /* §§ inErrorLocation */
                                                              COMMA_LOCATION_ARGS) {
  const GALGAS_TfieldMap operand0 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_TfieldMap operand1 = GALGAS_TfieldMap::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                                     inCompiler
                                                                     COMMA_THERE) ;
  const GALGAS_sortingKeyList operand2 = GALGAS_sortingKeyList::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                               inCompiler
                                                                               COMMA_THERE) ;
  return function_structCompare (operand0,
                                 operand1,
                                 operand2,
                                 inCompiler
                                 COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_structCompare ("structCompare",
                                                               functionWithGenericHeader_structCompare,
                                                               & kTypeDescriptor_GALGAS_sint,
                                                               3,
                                                               functionArgs_structCompare) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              Routine 'swap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_swap (GALGAS_TfieldMapList & ioArgument_t,
                   const GALGAS_uint constinArgument_index_31_,
                   const GALGAS_uint constinArgument_index_32_,
                   C_Compiler * inCompiler
                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_TfieldMap var_temp = ioArgument_t.reader_mMapAtIndex (constinArgument_index_31_, inCompiler COMMA_SOURCE_FILE_AT_LINE (1531)) ;
  {
  ioArgument_t.modifier_setMMapAtIndex (ioArgument_t.reader_mMapAtIndex (constinArgument_index_32_, inCompiler COMMA_SOURCE_FILE_AT_LINE (1532)), constinArgument_index_31_, inCompiler COMMA_SOURCE_FILE_AT_LINE (1532)) ;
  }
  {
  ioArgument_t.modifier_setMMapAtIndex (var_temp, constinArgument_index_32_, inCompiler COMMA_SOURCE_FILE_AT_LINE (1533)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'partition'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_partition (GALGAS_TfieldMapList & ioArgument_t,
                        GALGAS_uint inArgument_min,
                        GALGAS_uint inArgument_max,
                        const GALGAS_sortingKeyList constinArgument_fieldList,
                        GALGAS_uint & ioArgument_pivotIndex,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_TfieldMap var_pivot = ioArgument_t.reader_mMapAtIndex (ioArgument_pivotIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1543)) ;
  {
  routine_swap (ioArgument_t, ioArgument_pivotIndex, inArgument_max, inCompiler COMMA_SOURCE_FILE_AT_LINE (1544)) ;
  }
  GALGAS_uint var_storeIndex = inArgument_min ;
  GALGAS_uint var_i = inArgument_min ;
  if (inArgument_max.substract_operation (inArgument_min, inCompiler COMMA_SOURCE_FILE_AT_LINE (1547)).isValid ()) {
    PMUInt32 variant_45629 = inArgument_max.substract_operation (inArgument_min, inCompiler COMMA_SOURCE_FILE_AT_LINE (1547)).uintValue () ;
    bool loop_45629 = true ;
    while (loop_45629) {
      loop_45629 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (inArgument_max)).isValid () ;
      if (loop_45629) {
        loop_45629 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (inArgument_max)).boolValue () ;
      }
      if (loop_45629 && (0 == variant_45629)) {
        loop_45629 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1547)) ;
      }
      if (loop_45629) {
        variant_45629 -- ;
        const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, function_structCompare (ioArgument_t.reader_mMapAtIndex (var_i, inCompiler COMMA_SOURCE_FILE_AT_LINE (1549)), var_pivot, constinArgument_fieldList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1549)).objectCompare (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1549)))).boolEnum () ;
        if (kBoolTrue == test_0) {
          {
          routine_swap (ioArgument_t, var_i, var_storeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1550)) ;
          }
          var_storeIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1551)) ;
        }
        var_i.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1553)) ;
      }
    }
  }
  {
  routine_swap (ioArgument_t, var_storeIndex, inArgument_max, inCompiler COMMA_SOURCE_FILE_AT_LINE (1555)) ;
  }
  ioArgument_pivotIndex = var_storeIndex ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'quickSort'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_quickSort (GALGAS_TfieldMapList & ioArgument_t,
                        const GALGAS_uint constinArgument_min,
                        const GALGAS_uint constinArgument_max,
                        const GALGAS_sortingKeyList constinArgument_fieldList,
                        C_Compiler * inCompiler
                        COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, constinArgument_min.objectCompare (constinArgument_max)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_uint var_pivotIndex = constinArgument_max.add_operation (constinArgument_min, inCompiler COMMA_SOURCE_FILE_AT_LINE (1567)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1567)) ;
    {
    routine_partition (ioArgument_t, constinArgument_min, constinArgument_max, constinArgument_fieldList, var_pivotIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1569)) ;
    }
    {
    routine_quickSort (ioArgument_t, constinArgument_min, var_pivotIndex, constinArgument_fieldList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1570)) ;
    }
    {
    routine_quickSort (ioArgument_t, var_pivotIndex.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1571)), constinArgument_max, constinArgument_fieldList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1571)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       @sortingKeyList.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_sortingKeyList_2E_element ("sortingKeyList.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_sortingKeyList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sortingKeyList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_sortingKeyList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_sortingKeyList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element GALGAS_sortingKeyList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_sortingKeyList_2E_element result ;
  const GALGAS_sortingKeyList_2E_element * p = (const GALGAS_sortingKeyList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_sortingKeyList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("sortingKeyList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element::GALGAS_sortingKeyList_2E_element (void) :
mAttribute_key (),
mAttribute_order () {
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element::~ GALGAS_sortingKeyList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element::GALGAS_sortingKeyList_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_lsint & inOperand1) :
mAttribute_key (inOperand0),
mAttribute_order (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element GALGAS_sortingKeyList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_sortingKeyList_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lsint::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_sortingKeyList_2E_element GALGAS_sortingKeyList_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_lsint & inOperand1 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_sortingKeyList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_sortingKeyList_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_sortingKeyList_2E_element::objectCompare (const GALGAS_sortingKeyList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_key.objectCompare (inOperand.mAttribute_key) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_order.objectCompare (inOperand.mAttribute_order) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_sortingKeyList_2E_element::isValid (void) const {
  return mAttribute_key.isValid () && mAttribute_order.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList_2E_element::drop (void) {
  mAttribute_key.drop () ;
  mAttribute_order.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_sortingKeyList_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @sortingKeyList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_key.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_order.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_sortingKeyList_2E_element::reader_key (UNUSED_LOCATION_ARGS) const {
  return mAttribute_key ;
}

//---------------------------------------------------------------------------*

GALGAS_lsint GALGAS_sortingKeyList_2E_element::reader_order (UNUSED_LOCATION_ARGS) const {
  return mAttribute_order ;
}



//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i0_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & ioArgument_ioResultingString,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (98)) ;
  GALGAS_Tvalue var_expression ;
  GALGAS_Ttype var_resultType ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_expression, var_resultType, inCompiler) ;
  if (var_resultType.isValid ()) {
    switch (var_resultType.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_enumType: {
      ioArgument_ioResultingString.dotAssign_operation (var_expression.reader_mStringValue (SOURCE_FILE_AT_LINE (111)) COMMA_SOURCE_FILE_AT_LINE (111)) ;
      } break ;
    case GALGAS_Ttype::kEnum_intType: {
      ioArgument_ioResultingString.dotAssign_operation (var_expression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (113)).reader_string (SOURCE_FILE_AT_LINE (113)) COMMA_SOURCE_FILE_AT_LINE (113)) ;
      } break ;
    case GALGAS_Ttype::kEnum_floatType: {
      ioArgument_ioResultingString.dotAssign_operation (var_expression.reader_mFloatValue (SOURCE_FILE_AT_LINE (115)).reader_string (SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
      } break ;
    case GALGAS_Ttype::kEnum_boolType: {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_expression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (117)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolEnum () ;
      if (kBoolTrue == test_0) {
        ioArgument_ioResultingString.dotAssign_operation (GALGAS_string ("false") COMMA_SOURCE_FILE_AT_LINE (118)) ;
      }else if (kBoolFalse == test_0) {
        ioArgument_ioResultingString.dotAssign_operation (GALGAS_string ("true") COMMA_SOURCE_FILE_AT_LINE (120)) ;
      }
      } break ;
    case GALGAS_Ttype::kEnum_listType: {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a list expression cannot be emitted") COMMA_SOURCE_FILE_AT_LINE (123)) ;
      } break ;
    case GALGAS_Ttype::kEnum_mapType: {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a map expression cannot be emitted") COMMA_SOURCE_FILE_AT_LINE (125)) ;
      } break ;
    case GALGAS_Ttype::kEnum_structType: {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a struct expression cannot be emitted") COMMA_SOURCE_FILE_AT_LINE (127)) ;
      } break ;
    case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error, unconstructed type found") COMMA_SOURCE_FILE_AT_LINE (129)) ;
      } break ;
    }
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (133)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i0_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (98)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i1_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  GALGAS_bool var_fileNameOk = GALGAS_bool (true) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_write) COMMA_SOURCE_FILE_AT_LINE (148)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_to) COMMA_SOURCE_FILE_AT_LINE (148)) ;
  GALGAS_Tvalue var_expression ;
  GALGAS_Ttype var_expressionType ;
  GALGAS_TfieldMap var_templateVariableMap = ioArgument_ioTemplateVariableMap ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_expression, var_expressionType, inCompiler) ;
  const enumGalgasBool test_0 = var_templateVariableMap.reader_hasKeyAtLevel (GALGAS_string ("FILENAME"), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (161)).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    GALGAS_Ttype joker_4887_0 ; // Joker input parameter
    GALGAS_Tvalue joker_4890_0 ; // Joker input parameter
    var_templateVariableMap.modifier_removeKey (function_lstringWith (GALGAS_string ("FILENAME"), inCompiler COMMA_SOURCE_FILE_AT_LINE (162)), joker_4887_0, joker_4890_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (162)) ;
    }
  }
  const enumGalgasBool test_1 = var_templateVariableMap.reader_hasKeyAtLevel (GALGAS_string ("FILEPATH"), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (164)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    GALGAS_Ttype joker_5029_0 ; // Joker input parameter
    GALGAS_Tvalue joker_5032_0 ; // Joker input parameter
    var_templateVariableMap.modifier_removeKey (function_lstringWith (GALGAS_string ("FILEPATH"), inCompiler COMMA_SOURCE_FILE_AT_LINE (165)), joker_5029_0, joker_5032_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (165)) ;
    }
  }
  GALGAS_Tvalue var_fileName = function_valueWithString (var_expression.reader_mStringValue (SOURCE_FILE_AT_LINE (167)).reader_lastPathComponent (SOURCE_FILE_AT_LINE (167)), function_lstringWith (GALGAS_string ("name of the file"), inCompiler COMMA_SOURCE_FILE_AT_LINE (167)), inCompiler COMMA_SOURCE_FILE_AT_LINE (167)) ;
  GALGAS_Tvalue var_nativeFilePath = function_valueWithString (var_expression.reader_mStringValue (SOURCE_FILE_AT_LINE (168)).reader_nativePathWithUnixPath (SOURCE_FILE_AT_LINE (168)), function_lstringWith (GALGAS_string ("path of the file"), inCompiler COMMA_SOURCE_FILE_AT_LINE (168)), inCompiler COMMA_SOURCE_FILE_AT_LINE (168)) ;
  {
  var_templateVariableMap.modifier_insertKey (function_lstringWith (GALGAS_string ("FILENAME"), inCompiler COMMA_SOURCE_FILE_AT_LINE (169)), var_expressionType, var_fileName, inCompiler COMMA_SOURCE_FILE_AT_LINE (169)) ;
  }
  {
  var_templateVariableMap.modifier_insertKey (function_lstringWith (GALGAS_string ("FILEPATH"), inCompiler COMMA_SOURCE_FILE_AT_LINE (170)), var_expressionType, var_nativeFilePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (170)) ;
  }
  GALGAS_location var_fileNameLocation = inCompiler->here () ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (172)))).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a file name should be of type string") COMMA_SOURCE_FILE_AT_LINE (173)) ;
    var_fileNameOk = GALGAS_bool (false) ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
  GALGAS_string var_writeBlockResult = GALGAS_string::makeEmptyString () ;
  GALGAS_Tvalue joker_5840_0 ; // Joker input parameter
  GALGAS_Ttype joker_5847_0 ; // Joker input parameter
  nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, var_writeBlockResult, joker_5840_0, joker_5847_0, inCompiler) ;
  joker_5840_0.drop () ; // Release temporary input variables (joker in source)
  joker_5847_0.drop () ; // Release temporary input variables (joker in source)
  const enumGalgasBool test_3 = var_fileNameOk.operator_and (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (187)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) COMMA_SOURCE_FILE_AT_LINE (187)).boolEnum () ;
  if (kBoolTrue == test_3) {
    var_writeBlockResult.method_makeDirectoryAndWriteToFile (var_expression.reader_mStringValue (SOURCE_FILE_AT_LINE (188)), inCompiler COMMA_SOURCE_FILE_AT_LINE (188)) ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_write) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (191)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (192)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i1_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_write) COMMA_SOURCE_FILE_AT_LINE (148)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_to) COMMA_SOURCE_FILE_AT_LINE (148)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
  nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_write) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_file_5F_name_i2_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                                       GALGAS_lstring & outArgument_fileName,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_fileName.drop () ; // Release 'out' argument
  switch (select_template_5F_parser_0 (inCompiler)) {
  case 1: {
    outArgument_fileName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (203)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_from) COMMA_SOURCE_FILE_AT_LINE (205)) ;
    GALGAS_Tvalue var_expressionValue ;
    GALGAS_Ttype var_expressionType ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_expressionValue, var_expressionType, inCompiler) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (209)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("String expression expected") COMMA_SOURCE_FILE_AT_LINE (210)) ;
      outArgument_fileName.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_0) {
      outArgument_fileName = GALGAS_lstring::constructor_new (var_expressionValue.reader_mStringValue (SOURCE_FILE_AT_LINE (212)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (212)) ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_file_5F_name_i2_parse (C_Lexique_template_5F_scanner * inCompiler) {
  switch (select_template_5F_parser_0 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (203)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_from) COMMA_SOURCE_FILE_AT_LINE (205)) ;
    nt_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i3_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & ioArgument_ioResultingString,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  GALGAS_string var_nextPrefix = constinArgument_inPrefix ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (228)) ;
  switch (select_template_5F_parser_1 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    GALGAS_lstring var_templateName ;
    nt_template_5F_file_5F_name_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_templateName, inCompiler) ;
    GALGAS_bool var_found ;
    switch (select_template_5F_parser_2 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (235)) ;
      GALGAS_lstring var_prefix = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (235)) ;
      var_nextPrefix = function_fullPrefix (ioArgument_ioTemplateVariableMap, var_prefix, inCompiler COMMA_SOURCE_FILE_AT_LINE (236)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
    {
    routine_templateInvocation (var_templateName, var_nextPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, GALGAS_bool (false), ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, var_found, inCompiler COMMA_SOURCE_FILE_AT_LINE (239)) ;
    }
    switch (select_template_5F_parser_3 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_or) COMMA_SOURCE_FILE_AT_LINE (250)) ;
      if (var_found.operator_not (SOURCE_FILE_AT_LINE (252)).isValidAndTrue ()) {
        GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (253)) ;
        GALGAS_Tvalue joker_7883_0 ; // Joker input parameter
        GALGAS_Ttype joker_7896_0 ; // Joker input parameter
        nt_template_5F_instruction_5F_list_ (var_nextPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_7883_0, joker_7896_0, inCompiler) ;
        joker_7883_0.drop () ; // Release temporary input variables (joker in source)
        joker_7896_0.drop () ; // Release temporary input variables (joker in source)
        ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (263)) ;
      }else{
        nt_template_5F_instruction_5F_list_parse (inCompiler) ;
      }
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (267)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (267)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    GALGAS_lstring var_templateName ;
    nt_template_5F_file_5F_name_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_templateName, inCompiler) ;
    switch (select_template_5F_parser_4 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (274)) ;
      GALGAS_lstring var_prefix = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (274)) ;
      var_nextPrefix = function_fullPrefix (ioArgument_ioTemplateVariableMap, var_prefix, inCompiler COMMA_SOURCE_FILE_AT_LINE (275)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
    {
    GALGAS_bool joker_8548_0 ; // Joker input parameter
    routine_templateInvocation (var_templateName, var_nextPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, GALGAS_bool (true), ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, joker_8548_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (278)) ;
    }
  } break ;
  default:
    break ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (289)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (290)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i3_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (228)) ;
  switch (select_template_5F_parser_1 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_exists) COMMA_SOURCE_FILE_AT_LINE (230)) ;
    nt_template_5F_file_5F_name_parse (inCompiler) ;
    switch (select_template_5F_parser_2 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (235)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (235)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
    switch (select_template_5F_parser_3 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_or) COMMA_SOURCE_FILE_AT_LINE (250)) ;
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (267)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (267)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
  } break ;
  case 2: {
    nt_template_5F_file_5F_name_parse (inCompiler) ;
    switch (select_template_5F_parser_4 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (274)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (274)) ;
    } break ;
    case 2: {
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i4_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                      const GALGAS_string /* constinArgument_inPath */,
                                                                                      const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & ioArgument_ioResultingString,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3F_) COMMA_SOURCE_FILE_AT_LINE (304)) ;
  GALGAS_lstring var_columnConstantName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (305)) ;
  GALGAS_string var_value = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_searchEndOfLine = GALGAS_bool (true) ;
  GALGAS_uint var_idx = ioArgument_ioResultingString.reader_length (SOURCE_FILE_AT_LINE (308)) ;
  if (ioArgument_ioResultingString.reader_length (SOURCE_FILE_AT_LINE (309)).isValid ()) {
    PMUInt32 variant_9144 = ioArgument_ioResultingString.reader_length (SOURCE_FILE_AT_LINE (309)).uintValue () ;
    bool loop_9144 = true ;
    while (loop_9144) {
      loop_9144 = GALGAS_bool (kIsStrictSup, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (var_searchEndOfLine COMMA_SOURCE_FILE_AT_LINE (310)).isValid () ;
      if (loop_9144) {
        loop_9144 = GALGAS_bool (kIsStrictSup, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (var_searchEndOfLine COMMA_SOURCE_FILE_AT_LINE (310)).boolValue () ;
      }
      if (loop_9144 && (0 == variant_9144)) {
        loop_9144 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (309)) ;
      }
      if (loop_9144) {
        variant_9144 -- ;
        var_searchEndOfLine = GALGAS_bool (kIsNotEqual, ioArgument_ioResultingString.reader_characterAtIndex (var_idx.substract_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (312)), inCompiler COMMA_SOURCE_FILE_AT_LINE (312)).objectCompare (GALGAS_char (TO_UNICODE (10)))) ;
        var_idx.decrement_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (313)) ;
        const enumGalgasBool test_0 = var_searchEndOfLine.boolEnum () ;
        if (kBoolTrue == test_0) {
          var_value.dotAssign_operation (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (315)) ;
        }
      }
    }
  }
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (var_columnConstantName, GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (320)), function_valueWithString (var_value, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (321)), inCompiler COMMA_SOURCE_FILE_AT_LINE (321)), inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (324)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i4_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3F_) COMMA_SOURCE_FILE_AT_LINE (304)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (305)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i5_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                      const GALGAS_string /* constinArgument_inPath */,
                                                                                      const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_function) COMMA_SOURCE_FILE_AT_LINE (338)) ;
  GALGAS_lstring var_fctName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (339)) ;
  GALGAS_lstringlist var_args = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (340)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (341)) ;
  switch (select_template_5F_parser_5 (inCompiler)) {
  case 1: {
    GALGAS_lstring var_arg ;
    var_arg = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (344)) ;
    var_args.addAssign_operation (var_arg COMMA_SOURCE_FILE_AT_LINE (345)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_template_5F_parser_6 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (346)) ;
        var_arg = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (346)) ;
        var_args.addAssign_operation (var_arg COMMA_SOURCE_FILE_AT_LINE (346)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (348)) ;
  GALGAS_lstring var_content = inCompiler->synthetizedAttribute_functionContent () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_functionContent) COMMA_SOURCE_FILE_AT_LINE (349)) ;
  var_content = GALGAS_lstring::constructor_new (GALGAS_string ("%").operator_concat (var_content.reader_string (SOURCE_FILE_AT_LINE (350)) COMMA_SOURCE_FILE_AT_LINE (350)).operator_concat (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (350)), var_content.reader_location (SOURCE_FILE_AT_LINE (350)) COMMA_SOURCE_FILE_AT_LINE (350)) ;
  GALGAS_Tfunction var_fct = GALGAS_Tfunction::constructor_new (var_fctName, var_args, var_content.reader_string (SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)) ;
  {
  ioArgument_ioTemplateVariableMap.modifier_insertKey (var_fctName, GALGAS_Ttype::constructor_functionType (SOURCE_FILE_AT_LINE (354)), GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (355)), GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (355)), var_fct, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (355)) COMMA_SOURCE_FILE_AT_LINE (355)), inCompiler COMMA_SOURCE_FILE_AT_LINE (352)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (357)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (358)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i5_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_function) COMMA_SOURCE_FILE_AT_LINE (338)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (339)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (341)) ;
  switch (select_template_5F_parser_5 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (344)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_template_5F_parser_6 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (346)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (346)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (348)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_functionContent) COMMA_SOURCE_FILE_AT_LINE (349)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i6_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_call) COMMA_SOURCE_FILE_AT_LINE (372)) ;
  GALGAS_lstring var_fctName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (373)) ;
  GALGAS_TexpressionList var_args = GALGAS_TexpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (374)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (375)) ;
  switch (select_template_5F_parser_7 (inCompiler)) {
  case 1: {
    GALGAS_Ttype var_type ;
    GALGAS_Tvalue var_value ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_value, var_type, inCompiler) ;
    var_args.addAssign_operation (var_value, var_type COMMA_SOURCE_FILE_AT_LINE (386)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_template_5F_parser_8 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (388)) ;
        GALGAS_Ttype var_type ;
        GALGAS_Tvalue var_value ;
        nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_value, var_type, inCompiler) ;
        var_args.addAssign_operation (var_value, var_type COMMA_SOURCE_FILE_AT_LINE (398)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (402)) ;
  GALGAS_Ttype var_type ;
  GALGAS_Tvalue var_value ;
  ioArgument_ioTemplateVariableMap.method_searchKey (var_fctName, var_type, var_value, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_args.reader_length (SOURCE_FILE_AT_LINE (412)).objectCompare (var_value.reader_mFunctionValue (SOURCE_FILE_AT_LINE (412)).reader_args (SOURCE_FILE_AT_LINE (412)).reader_length (SOURCE_FILE_AT_LINE (412)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("incorrect number of arguments") COMMA_SOURCE_FILE_AT_LINE (413)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_TfieldMap var_locals = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (416)) ;
    cEnumerator_TexpressionList enumerator_11934 (var_args, kEnumeration_up) ;
    cEnumerator_lstringlist enumerator_11976 (var_value.reader_mFunctionValue (SOURCE_FILE_AT_LINE (418)).reader_args (SOURCE_FILE_AT_LINE (418)), kEnumeration_up) ;
    while (enumerator_11934.hasCurrentObject () && enumerator_11976.hasCurrentObject ()) {
      {
      var_locals.modifier_insertKey (enumerator_11976.current_mValue (HERE), enumerator_11934.current_mType (HERE), enumerator_11934.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (419)) ;
      }
      enumerator_11934.gotoNextObject () ;
      enumerator_11976.gotoNextObject () ;
    }
    GALGAS_string var_result = GALGAS_string::makeEmptyString () ;
    {
    GALGAS_Tvalue joker_12291_0 ; // Joker input parameter
    GALGAS_Ttype joker_12294_0 ; // Joker input parameter
    cGrammar_template_5F_grammar::_performSourceStringParsing_ (inCompiler, var_value.reader_mFunctionValue (SOURCE_FILE_AT_LINE (423)).reader_content (SOURCE_FILE_AT_LINE (423)), constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_locals, var_result, joker_12291_0, joker_12294_0 COMMA_SOURCE_FILE_AT_LINE (423)) ;
    }
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (425)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (426)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i6_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_call) COMMA_SOURCE_FILE_AT_LINE (372)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (373)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (375)) ;
  switch (select_template_5F_parser_7 (inCompiler)) {
  case 1: {
    nt_expression_parse (inCompiler) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_template_5F_parser_8 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (388)) ;
        nt_expression_parse (inCompiler) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (402)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i7_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_return) COMMA_SOURCE_FILE_AT_LINE (440)) ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, outArgument_returnedValue, outArgument_returnedType, inCompiler) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i7_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_return) COMMA_SOURCE_FILE_AT_LINE (440)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i8_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                      GALGAS_string & ioArgument_ioResultingString,
                                                                                      GALGAS_Tvalue & outArgument_returnedValue,
                                                                                      GALGAS_Ttype & outArgument_returnedType,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (506)) ;
  GALGAS_bool var_currentCondition = GALGAS_bool (false) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    if (var_currentCondition.operator_not (SOURCE_FILE_AT_LINE (510)).isValidAndTrue ()) {
      GALGAS_Tvalue var_expression ;
      GALGAS_Ttype var_expressionType ;
      nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_expression, var_expressionType, inCompiler) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (521)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the operand of the 'not' operator should be boolean") COMMA_SOURCE_FILE_AT_LINE (522)) ;
      }
      var_currentCondition = GALGAS_bool (kIsEqual, var_expression.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (524)).objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 1LL))) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_then) COMMA_SOURCE_FILE_AT_LINE (525)) ;
      if (var_currentCondition.isValidAndTrue ()) {
        GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (528)) ;
        GALGAS_Tvalue joker_15256_0 ; // Joker input parameter
        GALGAS_Ttype joker_15269_0 ; // Joker input parameter
        nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_15256_0, joker_15269_0, inCompiler) ;
        joker_15256_0.drop () ; // Release temporary input variables (joker in source)
        joker_15269_0.drop () ; // Release temporary input variables (joker in source)
        ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (538)) ;
      }else{
        nt_template_5F_instruction_5F_list_parse (inCompiler) ;
      }
    }else{
      nt_expression_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_then) COMMA_SOURCE_FILE_AT_LINE (544)) ;
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
    switch (select_template_5F_parser_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (548)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  switch (select_template_5F_parser_10 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_else) COMMA_SOURCE_FILE_AT_LINE (553)) ;
    if (var_currentCondition.operator_not (SOURCE_FILE_AT_LINE (555)).isValidAndTrue ()) {
      GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (556)) ;
      GALGAS_Tvalue joker_15888_0 ; // Joker input parameter
      GALGAS_Ttype joker_15899_0 ; // Joker input parameter
      nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_15888_0, joker_15899_0, inCompiler) ;
      joker_15888_0.drop () ; // Release temporary input variables (joker in source)
      joker_15899_0.drop () ; // Release temporary input variables (joker in source)
      ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (566)) ;
    }else{
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (573)) ;
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (574)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (575)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i8_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (506)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    nt_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_then) COMMA_SOURCE_FILE_AT_LINE (525)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    switch (select_template_5F_parser_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (548)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  switch (select_template_5F_parser_10 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_else) COMMA_SOURCE_FILE_AT_LINE (553)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (573)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_5F_list_i9_ (const GALGAS_string constinArgument_inPrefix,
                                                                                              const GALGAS_string constinArgument_inPath,
                                                                                              const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                              GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                              GALGAS_string & ioArgument_ioResultingString,
                                                                                              GALGAS_Tvalue & outArgument_returnedValue,
                                                                                              GALGAS_Ttype & outArgument_returnedType,
                                                                                              C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  ioArgument_ioResultingString.dotAssign_operation (GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (589)) COMMA_SOURCE_FILE_AT_LINE (589)) ;
  GALGAS_Tvalue var_value = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (590)) ;
  GALGAS_Ttype var_type = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (591)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_11 (inCompiler)) {
    case 2: {
      nt_template_5F_instruction_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, var_value, var_type, inCompiler) ;
      ioArgument_ioResultingString.dotAssign_operation (GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (603)) COMMA_SOURCE_FILE_AT_LINE (603)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  outArgument_returnedValue = var_value ;
  outArgument_returnedType = var_type ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_5F_list_i9_parse (C_Lexique_template_5F_scanner * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_11 (inCompiler)) {
    case 2: {
      nt_template_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_goil_5F_template_5F_start_5F_symbol_i10_ (const GALGAS_string constinArgument_inPrefix,
                                                                                                   const GALGAS_string constinArgument_inPath,
                                                                                                   const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                                   GALGAS_TfieldMap inArgument_inTemplateVariableMap,
                                                                                                   GALGAS_string & ioArgument_ioResultingString,
                                                                                                   GALGAS_Tvalue & outArgument_returnedValue,
                                                                                                   GALGAS_Ttype & outArgument_returnedType,
                                                                                                   C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, inArgument_inTemplateVariableMap, ioArgument_ioResultingString, outArgument_returnedValue, outArgument_returnedType, inCompiler) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_goil_5F_template_5F_start_5F_symbol_i10_parse (C_Lexique_template_5F_scanner * inCompiler) {
  nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i11_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & ioArgument_ioResultingString,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  GALGAS_Tvalue var_enumeratedValue ;
  GALGAS_Ttype var_expressionType ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
  GALGAS_uint var_listLength = GALGAS_uint ((PMUInt32) 0U) ;
  GALGAS_lstringlist var_keyList ;
  if (var_expressionType.isValid ()) {
    switch (var_expressionType.enumValue ()) {
    case GALGAS_Ttype::kNotBuilt:
      break ;
    case GALGAS_Ttype::kEnum_listType: {
      var_listLength = var_enumeratedValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (658)).reader_length (SOURCE_FILE_AT_LINE (658)) ;
      var_keyList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (659)) ;
      } break ;
    case GALGAS_Ttype::kEnum_mapType: {
      var_listLength = var_enumeratedValue.reader_mStructValue (SOURCE_FILE_AT_LINE (661)).reader_count (SOURCE_FILE_AT_LINE (661)) ;
      var_keyList = var_enumeratedValue.reader_mStructValue (SOURCE_FILE_AT_LINE (662)).reader_keyList (SOURCE_FILE_AT_LINE (662)) ;
      } break ;
    case GALGAS_Ttype::kEnum_boolType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_intType: case GALGAS_Ttype::kEnum_floatType: case GALGAS_Ttype::kEnum_stringType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("only a list or a map can be enumerated") COMMA_SOURCE_FILE_AT_LINE (664)) ;
      var_keyList.drop () ; // Release error dropped variable
      } break ;
    }
  }
  GALGAS_string var_foreachPrefix ;
  switch (select_template_5F_parser_12 (inCompiler)) {
  case 1: {
    var_foreachPrefix = GALGAS_string::makeEmptyString () ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_prefixedby) COMMA_SOURCE_FILE_AT_LINE (671)) ;
    GALGAS_lstring var_prefixString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (672)) ;
    var_foreachPrefix = var_prefixString.reader_string (SOURCE_FILE_AT_LINE (673)) ;
  } break ;
  default:
    break ;
  }
  switch (select_template_5F_parser_13 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (679)) ;
    if (GALGAS_bool (kIsStrictSup, var_listLength.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      GALGAS_Tvalue joker_18940_0 ; // Joker input parameter
      GALGAS_Ttype joker_18951_0 ; // Joker input parameter
      nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, joker_18940_0, joker_18951_0, inCompiler) ;
      joker_18940_0.drop () ; // Release temporary input variables (joker in source)
      joker_18951_0.drop () ; // Release temporary input variables (joker in source)
    }else{
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (696)) ;
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  if (var_listLength.isValid ()) {
    PMUInt32 variant_0 = var_listLength.uintValue () ;
    bool loop_1 = true ;
    while (loop_1) {
      loop_1 = false ;
      if (GALGAS_bool (kIsStrictInf, var_idx.objectCompare (var_listLength)).isValidAndTrue ()) {
        loop_1 = true ;
        variant_0 -- ; // Decrement variant
        const C_parsingContext parsingContext = inCompiler->parsingContext () ;
          GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (700)) ;
          GALGAS_Ttype var_itemType ;
          GALGAS_Tvalue var_itemValue ;
          const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_mapType (SOURCE_FILE_AT_LINE (703)))).boolEnum () ;
          if (kBoolTrue == test_2) {
            GALGAS_lstring var_keyOfItem = var_keyList.reader_mValueAtIndex (var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (704)) ;
            var_enumeratedValue.reader_mStructValue (SOURCE_FILE_AT_LINE (705)).method_searchKey (var_keyOfItem, var_itemType, var_itemValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (705)) ;
            {
            routine_addLStringValue (var_templateVariableMap, GALGAS_string ("KEY"), var_keyOfItem, function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (706)), inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) ;
            }
          }else if (kBoolFalse == test_2) {
            GALGAS_TfieldMap var_fieldMap = var_enumeratedValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (708)).reader_mMapAtIndex (var_idx, inCompiler COMMA_SOURCE_FILE_AT_LINE (708)) ;
            var_itemType = GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (709)) ;
            var_itemValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), GALGAS_TfieldMapList::constructor_emptyList (SOURCE_FILE_AT_LINE (710)), var_fieldMap, function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (710)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (710)) COMMA_SOURCE_FILE_AT_LINE (710)) ;
          }
          GALGAS_lstring var_varName = GALGAS_lstring::constructor_new (var_foreachPrefix.operator_concat (var_variableName.reader_string (SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712)), var_variableName.reader_location (SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712)) ;
          {
          var_templateVariableMap.modifier_insertKey (var_varName, var_itemType, var_itemValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (713)) ;
          }
          {
          routine_addUnsignedValue (var_templateVariableMap, GALGAS_lstring::constructor_new (var_foreachPrefix.operator_concat (GALGAS_string ("INDEX") COMMA_SOURCE_FILE_AT_LINE (715)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (715)), var_idx.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (715)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (715)), inCompiler COMMA_SOURCE_FILE_AT_LINE (715)) ;
          }
          GALGAS_Tvalue joker_20234_0 ; // Joker input parameter
          GALGAS_Ttype joker_20243_0 ; // Joker input parameter
          nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_20234_0, joker_20243_0, inCompiler) ;
          joker_20234_0.drop () ; // Release temporary input variables (joker in source)
          joker_20243_0.drop () ; // Release temporary input variables (joker in source)
          var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (726)) ;
          switch (select_template_5F_parser_14 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (729)) ;
            if (GALGAS_bool (kIsStrictInf, var_idx.objectCompare (var_listLength)).isValidAndTrue ()) {
              GALGAS_Tvalue joker_20519_0 ; // Joker input parameter
              GALGAS_Ttype joker_20532_0 ; // Joker input parameter
              nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_20519_0, joker_20532_0, inCompiler) ;
              joker_20519_0.drop () ; // Release temporary input variables (joker in source)
              joker_20532_0.drop () ; // Release temporary input variables (joker in source)
            }else{
              nt_template_5F_instruction_5F_list_parse (inCompiler) ;
            }
          } break ;
          default:
            break ;
          }
          ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (745)) ;
        inCompiler->setParsingContext (parsingContext) ;
      }
    }
  }
  //--- 'parse'
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    switch (select_template_5F_parser_14 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (729)) ;
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  inCompiler->resetTemplateString () ;
  //-------- END OF @parseLoopInstructionForGeneration
  GALGAS_string var_s = GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (747)) ;
  switch (select_template_5F_parser_15 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (751)) ;
    if (GALGAS_bool (kIsStrictSup, var_listLength.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      GALGAS_Tvalue joker_21030_0 ; // Joker input parameter
      GALGAS_Ttype joker_21041_0 ; // Joker input parameter
      nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, joker_21030_0, joker_21041_0, inCompiler) ;
      joker_21030_0.drop () ; // Release temporary input variables (joker in source)
      joker_21041_0.drop () ; // Release temporary input variables (joker in source)
    }else{
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (768)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (769)) ;
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (770)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (771)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i11_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (642)) ;
  nt_expression_parse (inCompiler) ;
  switch (select_template_5F_parser_12 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_prefixedby) COMMA_SOURCE_FILE_AT_LINE (671)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (672)) ;
  } break ;
  default:
    break ;
  }
  switch (select_template_5F_parser_13 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (679)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (696)) ;
  nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  switch (select_template_5F_parser_14 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (729)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  switch (select_template_5F_parser_15 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (751)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (768)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (769)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i12_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & ioArgument_ioResultingString,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_for) COMMA_SOURCE_FILE_AT_LINE (785)) ;
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (785)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (789)) ;
  GALGAS_TexpressionList var_enumerationList = GALGAS_TexpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (790)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    GALGAS_Tvalue var_enumeratedValue ;
    GALGAS_Ttype var_expressionType ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_boolType (SOURCE_FILE_AT_LINE (802)))).operator_and (GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (803)))) COMMA_SOURCE_FILE_AT_LINE (802)).operator_and (GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (804)))) COMMA_SOURCE_FILE_AT_LINE (803)).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("only a bool, integer or string can be enumerated") COMMA_SOURCE_FILE_AT_LINE (805)) ;
    }
    var_enumerationList.addAssign_operation (var_enumeratedValue, var_expressionType COMMA_SOURCE_FILE_AT_LINE (807)) ;
    switch (select_template_5F_parser_16 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (809)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (812)) ;
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
  if (var_enumerationList.reader_length (SOURCE_FILE_AT_LINE (814)).isValid ()) {
    PMUInt32 variant_2 = var_enumerationList.reader_length (SOURCE_FILE_AT_LINE (814)).uintValue () ;
    bool loop_3 = true ;
    while (loop_3) {
      loop_3 = false ;
      if (GALGAS_bool (kIsStrictSup, var_enumerationList.reader_length (SOURCE_FILE_AT_LINE (815)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        loop_3 = true ;
        variant_2 -- ; // Decrement variant
        const C_parsingContext parsingContext = inCompiler->parsingContext () ;
          GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (816)) ;
          GALGAS_Tvalue var_value ;
          GALGAS_Ttype var_type ;
          {
          var_enumerationList.modifier_popFirst (var_value, var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (819)) ;
          }
          {
          var_templateVariableMap.modifier_insertKey (var_variableName, var_type, var_value, inCompiler COMMA_SOURCE_FILE_AT_LINE (820)) ;
          }
          {
          routine_addUnsignedValue (var_templateVariableMap, GALGAS_lstring::constructor_new (GALGAS_string ("INDEX"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (828)), var_idx.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (828)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (828)), inCompiler COMMA_SOURCE_FILE_AT_LINE (828)) ;
          }
          GALGAS_Tvalue joker_23100_0 ; // Joker input parameter
          GALGAS_Ttype joker_23109_0 ; // Joker input parameter
          nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_23100_0, joker_23109_0, inCompiler) ;
          joker_23100_0.drop () ; // Release temporary input variables (joker in source)
          joker_23109_0.drop () ; // Release temporary input variables (joker in source)
          var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (839)) ;
          switch (select_template_5F_parser_17 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (842)) ;
            if (GALGAS_bool (kIsStrictSup, var_enumerationList.reader_length (SOURCE_FILE_AT_LINE (844)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
              GALGAS_Tvalue joker_23397_0 ; // Joker input parameter
              GALGAS_Ttype joker_23410_0 ; // Joker input parameter
              nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_23397_0, joker_23410_0, inCompiler) ;
              joker_23397_0.drop () ; // Release temporary input variables (joker in source)
              joker_23410_0.drop () ; // Release temporary input variables (joker in source)
            }else{
              nt_template_5F_instruction_5F_list_parse (inCompiler) ;
            }
          } break ;
          default:
            break ;
          }
          ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (858)) ;
        inCompiler->setParsingContext (parsingContext) ;
      }
    }
  }
  //--- 'parse'
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    switch (select_template_5F_parser_17 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (842)) ;
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  inCompiler->resetTemplateString () ;
  //-------- END OF @parseLoopInstructionForGeneration
  GALGAS_string var_s = GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (860)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (862)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_for) COMMA_SOURCE_FILE_AT_LINE (863)) ;
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (864)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (865)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i12_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_for) COMMA_SOURCE_FILE_AT_LINE (785)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (785)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_in) COMMA_SOURCE_FILE_AT_LINE (789)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    nt_expression_parse (inCompiler) ;
    switch (select_template_5F_parser_16 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (809)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (812)) ;
  nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  switch (select_template_5F_parser_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (842)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (862)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_for) COMMA_SOURCE_FILE_AT_LINE (863)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i13_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & ioArgument_ioResultingString,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_loop) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_from) COMMA_SOURCE_FILE_AT_LINE (880)) ;
  GALGAS_Tvalue var_startValue ;
  GALGAS_Ttype var_startType ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_startValue, var_startType, inCompiler) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_startType.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (891)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("loop start value should be an integer") COMMA_SOURCE_FILE_AT_LINE (892)) ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_to) COMMA_SOURCE_FILE_AT_LINE (894)) ;
  GALGAS_Tvalue var_endValue ;
  GALGAS_Ttype var_endType ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_endValue, var_endType, inCompiler) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_endType.objectCompare (GALGAS_Ttype::constructor_intType (SOURCE_FILE_AT_LINE (905)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("loop end value should be an integer") COMMA_SOURCE_FILE_AT_LINE (906)) ;
  }
  switch (select_template_5F_parser_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (911)) ;
    if (GALGAS_bool (kIsSupOrEqual, var_endValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (913)).objectCompare (var_startValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (913)))).isValidAndTrue ()) {
      GALGAS_Tvalue joker_24970_0 ; // Joker input parameter
      GALGAS_Ttype joker_24981_0 ; // Joker input parameter
      nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, joker_24970_0, joker_24981_0, inCompiler) ;
      joker_24970_0.drop () ; // Release temporary input variables (joker in source)
      joker_24981_0.drop () ; // Release temporary input variables (joker in source)
    }else{
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (928)) ;
  GALGAS_uint var_start = var_startValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (929)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (929)) ;
  GALGAS_uint var_stop = var_endValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (930)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (930)) ;
  GALGAS_uint var_idx = var_start ;
  GALGAS_uint var_num ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_start.objectCompare (var_stop)).boolEnum () ;
  if (kBoolTrue == test_2) {
    var_num = GALGAS_uint ((PMUInt32) 0U) ;
  }else if (kBoolFalse == test_2) {
    var_num = var_stop.substract_operation (var_start, inCompiler COMMA_SOURCE_FILE_AT_LINE (939)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (939)) ;
  }
  if (var_num.isValid ()) {
    PMUInt32 variant_3 = var_num.uintValue () ;
    bool loop_4 = true ;
    while (loop_4) {
      loop_4 = false ;
      if (GALGAS_bool (kIsInfOrEqual, var_idx.objectCompare (var_stop)).isValidAndTrue ()) {
        loop_4 = true ;
        variant_3 -- ; // Decrement variant
        const C_parsingContext parsingContext = inCompiler->parsingContext () ;
          GALGAS_TfieldMap var_templateVariableMap = GALGAS_TfieldMap::constructor_mapWithMapToOverride (ioArgument_ioTemplateVariableMap COMMA_SOURCE_FILE_AT_LINE (943)) ;
          {
          routine_addUnsignedValue (var_templateVariableMap, var_variableName, var_idx.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (947)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (947)), inCompiler COMMA_SOURCE_FILE_AT_LINE (947)) ;
          }
          GALGAS_Tvalue joker_25838_0 ; // Joker input parameter
          GALGAS_Ttype joker_25847_0 ; // Joker input parameter
          nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_25838_0, joker_25847_0, inCompiler) ;
          joker_25838_0.drop () ; // Release temporary input variables (joker in source)
          joker_25847_0.drop () ; // Release temporary input variables (joker in source)
          var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (958)) ;
          switch (select_template_5F_parser_19 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (961)) ;
            if (GALGAS_bool (kIsInfOrEqual, var_idx.objectCompare (var_stop)).isValidAndTrue ()) {
              GALGAS_Tvalue joker_26118_0 ; // Joker input parameter
              GALGAS_Ttype joker_26131_0 ; // Joker input parameter
              nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, var_templateVariableMap, ioArgument_ioResultingString, joker_26118_0, joker_26131_0, inCompiler) ;
              joker_26118_0.drop () ; // Release temporary input variables (joker in source)
              joker_26131_0.drop () ; // Release temporary input variables (joker in source)
            }else{
              nt_template_5F_instruction_5F_list_parse (inCompiler) ;
            }
          } break ;
          default:
            break ;
          }
          ioArgument_ioTemplateVariableMap = var_templateVariableMap.reader_overriddenMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (977)) ;
        inCompiler->setParsingContext (parsingContext) ;
      }
    }
  }
  //--- 'parse'
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    switch (select_template_5F_parser_19 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (961)) ;
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
  inCompiler->resetTemplateString () ;
  //-------- END OF @parseLoopInstructionForGeneration
  GALGAS_string var_s = GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (979)) ;
  switch (select_template_5F_parser_20 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (983)) ;
    if (GALGAS_bool (kIsSupOrEqual, var_stop.objectCompare (var_start)).isValidAndTrue ()) {
      GALGAS_Tvalue joker_26628_0 ; // Joker input parameter
      GALGAS_Ttype joker_26639_0 ; // Joker input parameter
      nt_template_5F_instruction_5F_list_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, ioArgument_ioResultingString, joker_26628_0, joker_26639_0, inCompiler) ;
      joker_26628_0.drop () ; // Release temporary input variables (joker in source)
      joker_26639_0.drop () ; // Release temporary input variables (joker in source)
    }else{
      nt_template_5F_instruction_5F_list_parse (inCompiler) ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1000)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_loop) COMMA_SOURCE_FILE_AT_LINE (1001)) ;
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1002)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1003)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i13_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_loop) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (879)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_from) COMMA_SOURCE_FILE_AT_LINE (880)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_to) COMMA_SOURCE_FILE_AT_LINE (894)) ;
  nt_expression_parse (inCompiler) ;
  switch (select_template_5F_parser_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (911)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (928)) ;
  nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  switch (select_template_5F_parser_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (961)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  switch (select_template_5F_parser_20 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (983)) ;
    nt_template_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1000)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_loop) COMMA_SOURCE_FILE_AT_LINE (1001)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i14_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  GALGAS_TvarPath var_path ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_let) COMMA_SOURCE_FILE_AT_LINE (1259)) ;
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_path, inCompiler) ;
  GALGAS_Tvalue var_enumeratedValue ;
  GALGAS_Ttype var_expressionType ;
  switch (select_template_5F_parser_21 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3D_) COMMA_SOURCE_FILE_AT_LINE (1263)) ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
    {
    routine_setVariableInPath (var_path, ioArgument_ioTemplateVariableMap, var_expressionType, var_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1278)) ;
    }
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B__3D_) COMMA_SOURCE_FILE_AT_LINE (1280)) ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1289)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_structType (SOURCE_FILE_AT_LINE (1290)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("string or struct type expected") COMMA_SOURCE_FILE_AT_LINE (1291)) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_Tvalue var_variableValue ;
        GALGAS_Ttype var_variableType ;
        GALGAS_bool var_found ;
        {
        routine_searchFieldIfExists (var_path, ioArgument_ioTemplateVariableMap, var_variableType, var_variableValue, var_found, inCompiler COMMA_SOURCE_FILE_AT_LINE (1297)) ;
        }
        var_variableValue.mAttribute_mMapListValue.addAssign_operation (var_enumeratedValue.reader_mStructValue (SOURCE_FILE_AT_LINE (1298)) COMMA_SOURCE_FILE_AT_LINE (1298)) ;
        const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1299)).boolEnum () ;
        if (kBoolTrue == test_2) {
          var_variableType = GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1300)) ;
        }
        {
        routine_setVariableInPath (var_path, ioArgument_ioTemplateVariableMap, var_variableType, var_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1302)) ;
        }
      }
    }else if (kBoolFalse == test_0) {
      GALGAS_Tvalue var_variableValue ;
      GALGAS_Ttype var_variableType ;
      GALGAS_bool var_found ;
      {
      routine_searchFieldIfExists (var_path, ioArgument_ioTemplateVariableMap, var_variableType, var_variableValue, var_found, inCompiler COMMA_SOURCE_FILE_AT_LINE (1308)) ;
      }
      GALGAS_TfieldMap var_fieldMap = GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1309)) ;
      {
      var_fieldMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("VALUE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1310)), var_expressionType, var_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1310)) ;
      }
      var_variableValue.mAttribute_mMapListValue.addAssign_operation (var_fieldMap COMMA_SOURCE_FILE_AT_LINE (1311)) ;
      const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (1312)).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_variableType = GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1313)) ;
      }
      {
      routine_setVariableInPath (var_path, ioArgument_ioTemplateVariableMap, var_variableType, var_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1315)) ;
      }
    }
  } break ;
  case 3: {
    var_expressionType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1319)) ;
    var_enumeratedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1320)) ;
    {
    routine_setVariableInPath (var_path, ioArgument_ioTemplateVariableMap, var_expressionType, var_enumeratedValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1321)) ;
    }
  } break ;
  default:
    break ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1323)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1324)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i14_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_let) COMMA_SOURCE_FILE_AT_LINE (1259)) ;
  nt_variable_parse (inCompiler) ;
  switch (select_template_5F_parser_21 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3D_) COMMA_SOURCE_FILE_AT_LINE (1263)) ;
    nt_expression_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2B__3D_) COMMA_SOURCE_FILE_AT_LINE (1280)) ;
    nt_expression_parse (inCompiler) ;
  } break ;
  case 3: {
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_variable_5F_or_5F_here_i15_ (const GALGAS_string constinArgument_inPrefix,
                                                                                      const GALGAS_string constinArgument_inPath,
                                                                                      const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                      const GALGAS_TfieldMap constinArgument_inTemplateVariableMap,
                                                                                      GALGAS_location & outArgument_outWhere,
                                                                                      C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_outWhere.drop () ; // Release 'out' argument
  switch (select_template_5F_parser_22 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_here) COMMA_SOURCE_FILE_AT_LINE (1337)) ;
    outArgument_outWhere = inCompiler->here () ;
  } break ;
  case 2: {
    GALGAS_TvarPath var_path ;
    nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inTemplateVariableMap, var_path, inCompiler) ;
    GALGAS_Tvalue var_variableValue ;
    GALGAS_Ttype var_variableType ;
    {
    routine_searchField (var_path, constinArgument_inTemplateVariableMap, var_variableType, var_variableValue, outArgument_outWhere, inCompiler COMMA_SOURCE_FILE_AT_LINE (1344)) ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_variable_5F_or_5F_here_i15_parse (C_Lexique_template_5F_scanner * inCompiler) {
  switch (select_template_5F_parser_22 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_here) COMMA_SOURCE_FILE_AT_LINE (1337)) ;
  } break ;
  case 2: {
    nt_variable_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i16_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_error) COMMA_SOURCE_FILE_AT_LINE (1359)) ;
  GALGAS_location var_where ;
  nt_variable_5F_or_5F_here_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_where, inCompiler) ;
  GALGAS_Tvalue var_enumeratedValue ;
  GALGAS_Ttype var_expressionType ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1364)) ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1373)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("error message should by a string expression") COMMA_SOURCE_FILE_AT_LINE (1374)) ;
  }else if (kBoolFalse == test_0) {
    inCompiler->emitSemanticError (var_where, var_enumeratedValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1376)) COMMA_SOURCE_FILE_AT_LINE (1376)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1378)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1379)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i16_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_error) COMMA_SOURCE_FILE_AT_LINE (1359)) ;
  nt_variable_5F_or_5F_here_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1364)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i17_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_warning) COMMA_SOURCE_FILE_AT_LINE (1393)) ;
  GALGAS_location var_where ;
  nt_variable_5F_or_5F_here_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_where, inCompiler) ;
  GALGAS_Tvalue var_enumeratedValue ;
  GALGAS_Ttype var_expressionType ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1398)) ;
  nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_enumeratedValue, var_expressionType, inCompiler) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_expressionType.objectCompare (GALGAS_Ttype::constructor_stringType (SOURCE_FILE_AT_LINE (1407)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("error message should by a string expression") COMMA_SOURCE_FILE_AT_LINE (1408)) ;
  }else if (kBoolFalse == test_0) {
    inCompiler->emitSemanticWarning (var_where, var_enumeratedValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1410)) COMMA_SOURCE_FILE_AT_LINE (1410)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1412)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1413)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i17_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_warning) COMMA_SOURCE_FILE_AT_LINE (1393)) ;
  nt_variable_5F_or_5F_here_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1398)) ;
  nt_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i18_ (const GALGAS_string constinArgument_inPrefix,
                                                                                       const GALGAS_string constinArgument_inPath,
                                                                                       const GALGAS_string constinArgument_inTemplateDirectory,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  GALGAS_TvarPath var_path ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_display) COMMA_SOURCE_FILE_AT_LINE (1468)) ;
  nt_variable_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, ioArgument_ioTemplateVariableMap, var_path, inCompiler) ;
  GALGAS_Ttype var_variableType ;
  GALGAS_Tvalue var_variableValue ;
  GALGAS_location var_loc ;
  {
  routine_searchField (var_path, ioArgument_ioTemplateVariableMap, var_variableType, var_variableValue, var_loc, inCompiler COMMA_SOURCE_FILE_AT_LINE (1472)) ;
  }
  {
  routine_printPath (var_path, inCompiler COMMA_SOURCE_FILE_AT_LINE (1473)) ;
  }
  inCompiler->printMessage (GALGAS_string (" (").operator_concat (var_loc.reader_locationString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1474)) COMMA_SOURCE_FILE_AT_LINE (1474)).operator_concat (GALGAS_string (") : ") COMMA_SOURCE_FILE_AT_LINE (1474)).operator_concat (categoryReader_messageGoilTemplateType (var_variableType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1474)) COMMA_SOURCE_FILE_AT_LINE (1474)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (1474)) COMMA_SOURCE_FILE_AT_LINE (1474)) ;
  {
  routine_printVariable (GALGAS_uint ((PMUInt32) 0U), var_variableType, var_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1475)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1476)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1477)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i18_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_display) COMMA_SOURCE_FILE_AT_LINE (1468)) ;
  nt_variable_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_sorting_5F_order_i19_ (GALGAS_lsint & outArgument_order,
                                                                                C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_order.drop () ; // Release 'out' argument
  switch (select_template_5F_parser_23 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (1579)) ;
    outArgument_order = GALGAS_lsint::constructor_new (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1580)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1580)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1582)) ;
    outArgument_order = GALGAS_lsint::constructor_new (GALGAS_sint ((PMSInt32) 1L), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1583)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_sorting_5F_order_i19_parse (C_Lexique_template_5F_scanner * inCompiler) {
  switch (select_template_5F_parser_23 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (1579)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1582)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i20_ (const GALGAS_string /* constinArgument_inPrefix */,
                                                                                       const GALGAS_string /* constinArgument_inPath */,
                                                                                       const GALGAS_string /* constinArgument_inTemplateDirectory */,
                                                                                       GALGAS_TfieldMap & ioArgument_ioTemplateVariableMap,
                                                                                       GALGAS_string & /* ioArgument_ioResultingString */,
                                                                                       GALGAS_Tvalue & outArgument_returnedValue,
                                                                                       GALGAS_Ttype & outArgument_returnedType,
                                                                                       C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_returnedValue.drop () ; // Release 'out' argument
  outArgument_returnedType.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_sort) COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  GALGAS_Ttype var_variableType ;
  GALGAS_Tvalue var_variableValue ;
  ioArgument_ioTemplateVariableMap.method_searchKey (var_variableName, var_variableType, var_variableValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1599)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_by) COMMA_SOURCE_FILE_AT_LINE (1600)) ;
  GALGAS_sortingKeyList var_keys = GALGAS_sortingKeyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1601)) ;
  GALGAS_lsint var_firstOrder ;
  GALGAS_lstring var_firstKey = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1603)) ;
  nt_sorting_5F_order_ (var_firstOrder, inCompiler) ;
  var_keys.addAssign_operation (var_firstKey, var_firstOrder COMMA_SOURCE_FILE_AT_LINE (1604)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_24 (inCompiler)) {
    case 2: {
      GALGAS_lsint var_nextOrder ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1607)) ;
      GALGAS_lstring var_nextKey = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1607)) ;
      nt_sorting_5F_order_ (var_nextOrder, inCompiler) ;
      var_keys.addAssign_operation (var_nextKey, var_nextOrder COMMA_SOURCE_FILE_AT_LINE (1608)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_variableType.objectCompare (GALGAS_Ttype::constructor_listType (SOURCE_FILE_AT_LINE (1611)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_TfieldMapList var_variable = var_variableValue.reader_mMapListValue (SOURCE_FILE_AT_LINE (1613)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_variable.reader_length (SOURCE_FILE_AT_LINE (1614)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      routine_quickSort (var_variable, GALGAS_uint ((PMUInt32) 0U), var_variable.reader_length (SOURCE_FILE_AT_LINE (1615)).substract_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1615)), var_keys, inCompiler COMMA_SOURCE_FILE_AT_LINE (1615)) ;
      }
      var_variableValue = GALGAS_Tvalue::constructor_new (GALGAS_sint_36__34_ ((PMSInt64) 0LL), GALGAS_double (0), GALGAS_string::makeEmptyString (), var_variable, GALGAS_TfieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1616)), function_dummyFunction (inCompiler COMMA_SOURCE_FILE_AT_LINE (1616)), function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)) ;
      {
      ioArgument_ioTemplateVariableMap.modifier_setMTypeForKey (var_variableType, var_variableName.reader_string (SOURCE_FILE_AT_LINE (1618)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1618)) ;
      }
      {
      ioArgument_ioTemplateVariableMap.modifier_setMValueForKey (var_variableValue, var_variableName.reader_string (SOURCE_FILE_AT_LINE (1619)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1619)) ;
      }
    }
  }else if (kBoolFalse == test_1) {
    GALGAS_location location_3 (var_variableName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("list type expected") COMMA_SOURCE_FILE_AT_LINE (1622)) ;
  }
  outArgument_returnedValue = function_valueWithVoid (inCompiler COMMA_SOURCE_FILE_AT_LINE (1624)) ;
  outArgument_returnedType = GALGAS_Ttype::constructor_unconstructedType (SOURCE_FILE_AT_LINE (1625)) ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_template_5F_instruction_i20_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_sort) COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_by) COMMA_SOURCE_FILE_AT_LINE (1600)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1603)) ;
  nt_sorting_5F_order_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_24 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1607)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1607)) ;
      nt_sorting_5F_order_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_variable_i21_ (const GALGAS_string constinArgument_inPrefix,
                                                                        const GALGAS_string constinArgument_inPath,
                                                                        const GALGAS_string constinArgument_inTemplateDirectory,
                                                                        const GALGAS_TfieldMap constinArgument_inVariableMap,
                                                                        GALGAS_TvarPath & outArgument_path,
                                                                        C_Lexique_template_5F_scanner * inCompiler) {
  outArgument_path.drop () ; // Release 'out' argument
  outArgument_path = GALGAS_TvarPath::constructor_emptyList (SOURCE_FILE_AT_LINE (1637)) ;
  GALGAS_lstring var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1638)) ;
  GALGAS_lstring var_key = function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1639)) ;
  GALGAS_lsint var_idx = GALGAS_lsint::constructor_new (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1640)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1640)) ;
  switch (select_template_5F_parser_25 (inCompiler)) {
  case 1: {
    GALGAS_Tvalue var_keyValue ;
    GALGAS_Ttype var_keyType ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1644)) ;
    nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_keyValue, var_keyType, inCompiler) ;
    if (var_keyType.isValid ()) {
      switch (var_keyType.enumValue ()) {
      case GALGAS_Ttype::kNotBuilt:
        break ;
      case GALGAS_Ttype::kEnum_stringType: {
        var_key = GALGAS_lstring::constructor_new (var_keyValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1648)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1648)) ;
        } break ;
      case GALGAS_Ttype::kEnum_intType: {
        var_idx = GALGAS_lsint::constructor_new (var_keyValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1650)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1650)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1650)) ;
        } break ;
      case GALGAS_Ttype::kEnum_boolType: case GALGAS_Ttype::kEnum_floatType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_mapType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("map key must be a string, list index must be an unsigned integer") COMMA_SOURCE_FILE_AT_LINE (1652)) ;
        } break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1654)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  outArgument_path.addAssign_operation (var_variableName, var_key, var_idx COMMA_SOURCE_FILE_AT_LINE (1656)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_26 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1659)) ;
      var_variableName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1659)) ;
      var_key = function_emptyLString (inCompiler COMMA_SOURCE_FILE_AT_LINE (1660)) ;
      var_idx = GALGAS_lsint::constructor_new (GALGAS_sint ((PMSInt32) 1L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1661)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1661)) ;
      switch (select_template_5F_parser_27 (inCompiler)) {
      case 1: {
        GALGAS_Tvalue var_keyValue ;
        GALGAS_Ttype var_keyType ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1665)) ;
        nt_expression_ (constinArgument_inPrefix, constinArgument_inPath, constinArgument_inTemplateDirectory, constinArgument_inVariableMap, var_keyValue, var_keyType, inCompiler) ;
        if (var_keyType.isValid ()) {
          switch (var_keyType.enumValue ()) {
          case GALGAS_Ttype::kNotBuilt:
            break ;
          case GALGAS_Ttype::kEnum_stringType: {
            var_key = GALGAS_lstring::constructor_new (var_keyValue.reader_mStringValue (SOURCE_FILE_AT_LINE (1669)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1669)) ;
            } break ;
          case GALGAS_Ttype::kEnum_intType: {
            var_idx = GALGAS_lsint::constructor_new (var_keyValue.reader_mInt_36__34_Value (SOURCE_FILE_AT_LINE (1671)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1671)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1671)) ;
            } break ;
          case GALGAS_Ttype::kEnum_boolType: case GALGAS_Ttype::kEnum_floatType: case GALGAS_Ttype::kEnum_listType: case GALGAS_Ttype::kEnum_mapType: case GALGAS_Ttype::kEnum_structType: case GALGAS_Ttype::kEnum_enumType: case GALGAS_Ttype::kEnum_unconstructedType: case GALGAS_Ttype::kEnum_functionType: {
            inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("map key must be a string, list index must be an unsigned integer") COMMA_SOURCE_FILE_AT_LINE (1673)) ;
            } break ;
          }
        }
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1675)) ;
      } break ;
      case 2: {
      } break ;
      default:
        break ;
      }
      outArgument_path.addAssign_operation (var_variableName, var_key, var_idx COMMA_SOURCE_FILE_AT_LINE (1677)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_template_5F_parser::rule_template_5F_parser_variable_i21_parse (C_Lexique_template_5F_scanner * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1638)) ;
  switch (select_template_5F_parser_25 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1644)) ;
    nt_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1654)) ;
  } break ;
  case 2: {
  } break ;
  default:
    break ;
  }
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_template_5F_parser_26 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__3A__3A_) COMMA_SOURCE_FILE_AT_LINE (1659)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1659)) ;
      switch (select_template_5F_parser_27 (inCompiler)) {
      case 1: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1665)) ;
        nt_expression_parse (inCompiler) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_template_5F_scanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1675)) ;
      } break ;
      case 2: {
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


