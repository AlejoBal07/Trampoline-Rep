#include "tpl_os_kernel.h"          /* tpl_schedule */
#include "tpl_os_timeobj_kernel.h"  /* tpl_counter_tick */
#include "tpl_machine_interface.h"  /* tpl_switch_context_from_it */

#define OS_START_SEC_CODE
#include "tpl_memmap.h"
FUNC(tpl_bool, OS_CODE) tpl_call_counter_tick()
{
  tpl_status  need_rescheduling = NO_SPECIAL_CODE;

%
foreach counter in HARDWARECOUNTERS do
%  need_rescheduling |= tpl_counter_tick(&% !counter::NAME %_counter_desc);
%
end foreach
%
  if (need_rescheduling == NEED_RESCHEDULING)
  {
    tpl_schedule_from_running();
#if WITH_SYSTEM_CALL == NO
    if (tpl_kern.need_switch != NO_NEED_SWITCH) {
    tpl_kern.need_switch = NO_NEED_SWITCH;
      tpl_switch_context_from_it(
        &(tpl_kern.s_old->context),
        &(tpl_kern.s_running->context)
      );
    }
#endif
  }
  return TRUE;
}

#define OS_STOP_SEC_CODE
#include "tpl_memmap.h"
