CC=gcc

# Target may be either 
# * darwin-ppc (MacOsX on PowerPC)
# * c167 (C167, with the Keil compiler on MS Windows)
# * linux-x86.
# * posix-libpcl (requires the portable libpcl on your system) WARNING: UNDER TEST
TARGET=posix-libpcl

# arch may be either:
# * ppc for the PowerPC.
# * c167 
# * x86
# * libpcl
ARCH=libpcl

EXE    =  trampoline

#M4 definition file
M4FILE= App/macro_test_workstation

#Compilation flags for all files (asm, c)
ALLFLAGS = \
-Wall \
-pedantic \
-DOS_EXTENDED \
-DWITH_ERROR_HOOK \
-DWITH_TASK_HOOK \
-DWITH_STARTUP_HOOK \
-DWITH_SHUTDOWN_HOOK 
#-D__TPL_GET_LINUX_FRAME_OFFSET__


#compilation flags for C files
CFLAGS = $(ALLFLAGS) -ansi -g
#compilation flags for asm files (must not have -ansi)
ifeq ($(strip $(TARGET)),darwin-ppc)
	#-fasm-blocks is APPLE only.
	ASMFLAGS = $(ALLFLAGS) -fasm-blocks
else
	#run on linux.
	ASMFLAGS = $(ALLFLAGS) -fasm -g
endif
	
#test library.
#LDFLAGS  = -lcheck
LDFLAGS  = -g

ifeq ($(strip $(TARGET)),posix-libpcl)
	LDFLAGS += -lpcl -lrt
endif

ifeq ($(strip $(TARGET)),linux-x86)
	LDFLAGS += -lpthread -lrt
endif


#***** do not modify below this line *****
OS_DIR = ./os
OBJ_DIR = .obj
APP_DIR = ./App
OS_MACHINE_DIR = $(OS_DIR)/os_machine/$(TARGET)
